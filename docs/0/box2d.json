{"dependencies":[{"uri":"file:///home/dominich/sdk/dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"file:///home/dominich/sdk/dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nInterface used by types that have an intrinsic ordering.\n","uri":"file:///home/dominich/sdk/dart-sdk/lib/core/comparable.dart","name":"Comparable","id":"Comparable","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nCompares this object to another [Comparable]\n\nReturns a value like a [Comparator] when comparing [:this:] to [other].\n\nMay throw an [ArgumentError] if [other] is of a type that\nis not comparable to [:this:].\n","name":"compareTo","id":"compareTo1()","children":[{"ref":{"refId":"dart.core/Comparable/T","name":"T"},"name":"other","id":"other","kind":"param"}],"line":"35","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nCompare one comparable to another.\n\nThis utility function is used as the default comparator\nfor the [List] sort function.\n","name":"compare","id":"compare2()","children":[{"ref":{"refId":"dart.core/Comparable","name":"Comparable"},"name":"a","id":"a","kind":"param"},{"ref":{"refId":"dart.core/Comparable","name":"Comparable"},"name":"b","id":"b","kind":"param"}],"line":"43","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"26","kind":"class"}],"line":"5","kind":"library"}],"uri":"package:box2d/box2d.dart","name":"package:box2d/box2d.dart","id":"box2d","children":[{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/pooling/default_world_pool.dart","name":"DefaultWorldPool","id":"DefaultWorldPool","children":[{"returnType":{"refId":"dart.collection/Queue","arguments":[{"refId":"box2d/CircleContact","name":"CircleContact"}],"name":"Queue"},"name":"getCircleContactStack","id":"getCircleContactStack0()","line":"32","kind":"method"},{"returnType":{"refId":"dart.collection/Queue","arguments":[{"refId":"box2d/PolygonAndCircleContact","name":"PolygonAndCircleContact"}],"name":"Queue"},"name":"getPolyCircleContactStack","id":"getPolyCircleContactStack0()","line":"40","kind":"method"},{"returnType":{"refId":"dart.collection/Queue","arguments":[{"refId":"box2d/PolygonContact","name":"PolygonContact"}],"name":"Queue"},"name":"getPolyContactStack","id":"getPolyContactStack0()","line":"48","kind":"method"},{"ref":{"refId":"box2d/Collision","name":"Collision"},"name":"collision","id":"collision","line":"22","kind":"variable"},{"ref":{"refId":"box2d/TimeOfImpact","name":"TimeOfImpact"},"name":"timeOfImpact","id":"timeOfImpact","line":"23","kind":"variable"},{"ref":{"refId":"box2d/Distance","name":"Distance"},"name":"distance","id":"distance","line":"24","kind":"variable"},{"name":"DefaultWorldPool","id":"DefaultWorldPool0()","line":"26","kind":"constructor"}],"line":"21","kind":"class"},{"superclass":{"refId":"box2d/JointDef","name":"JointDef"},"uri":"package:box2d/src/dynamics/joints/revolute_joint_def.dart","name":"RevoluteJointDef","id":"RevoluteJointDef","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nInitialize the bodies, anchors, and reference angle using the world\nanchor.\n","name":"initialize","id":"initialize3()","children":[{"ref":{"refId":"box2d/Body","name":"Body"},"name":"b1","id":"b1","kind":"param"},{"ref":{"refId":"box2d/Body","name":"Body"},"name":"b2","id":"b2","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"anchor","id":"anchor","kind":"param"}],"line":"96","kind":"method"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"comment":"\n The local anchor point relative to body1's origin.\n","name":"localAnchorA","id":"localAnchorA","line":"35","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"comment":"\n The local anchor point relative to body2's origin.\n","name":"localAnchorB","id":"localAnchorB","line":"40","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"\n The body2 angle minus body1 angle in the reference state (radians).\n","name":"referenceAngle","id":"referenceAngle","line":"45","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\n A flag to enable joint limits.\n","name":"enableLimit","id":"enableLimit","line":"50","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"\n The lower angle for the joint limit (radians).\n","name":"lowerAngle","id":"lowerAngle","line":"55","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"\n The upper angle for the joint limit (radians).\n","name":"upperAngle","id":"upperAngle","line":"60","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\n A flag to enable the joint motor.\n","name":"enableMotor","id":"enableMotor","line":"65","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"\n The desired motor speed. Usually in radians per second.\n","name":"motorSpeed","id":"motorSpeed","line":"70","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"\n The maximum motor torque used to achieve the desired motor speed.\n Usually in N-m.\n","name":"maxMotorTorque","id":"maxMotorTorque","line":"76","kind":"variable"},{"name":"RevoluteJointDef","id":"RevoluteJointDef0()","line":"78","kind":"constructor"}],"line":"31","kind":"class"},{"superclass":{"refId":"box2d/Joint","name":"Joint"},"uri":"package:box2d/src/dynamics/joints/revolute_joint.dart","name":"RevoluteJoint","id":"RevoluteJoint","children":[{"returnType":{"refId":"void","name":"void"},"name":"initVelocityConstraints","id":"initVelocityConstraints1()","children":[{"ref":{"refId":"box2d/TimeStep","name":"TimeStep"},"name":"time_step","id":"time_step","kind":"param"}],"line":"77","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"solveVelocityConstraints","id":"solveVelocityConstraints1()","children":[{"ref":{"refId":"box2d/TimeStep","name":"TimeStep"},"name":"time_step","id":"time_step","kind":"param"}],"line":"163","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"solvePositionConstraints","id":"solvePositionConstraints1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"baumgarte","id":"baumgarte","kind":"param"}],"line":"271","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"getAnchorA","id":"getAnchorA1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argOut","id":"argOut","kind":"param"}],"line":"386","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"getAnchorB","id":"getAnchorB1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argOut","id":"argOut","kind":"param"}],"line":"390","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"getReactionForce","id":"getReactionForce2()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"inv_dt","id":"inv_dt","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argOut","id":"argOut","kind":"param"}],"line":"394","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"name":"getReactionTorque","id":"getReactionTorque1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"inv_dt","id":"inv_dt","kind":"param"}],"line":"398","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"motorEnabled=","id":"motorEnabled=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"flag","id":"flag","kind":"param"}],"line":"416","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"motorSpeed=","id":"motorSpeed=1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"speed","id":"speed","kind":"param"}],"line":"424","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"maxMotorTorque=","id":"maxMotorTorque=1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"torque","id":"torque","kind":"param"}],"line":"434","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"limitEnabled=","id":"limitEnabled=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"flag","id":"flag","kind":"param"}],"line":"442","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setLimits","id":"setLimits2()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"lower","id":"lower","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"upper","id":"upper","kind":"param"}],"line":"448","kind":"method"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"jointAngle","id":"jointAngle","line":"402","kind":"property"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"jointSpeed","id":"jointSpeed","line":"408","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"motorEnabled","id":"motorEnabled","line":"414","kind":"property"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"motorTorque","id":"motorTorque","line":"422","kind":"property"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"motorSpeed","id":"motorSpeed","line":"430","kind":"property"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"maxMotorTorque","id":"maxMotorTorque","line":"432","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"limitEnabled","id":"limitEnabled","line":"440","kind":"property"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"localAnchor1","id":"localAnchor1","line":"27","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"localAnchor2","id":"localAnchor2","line":"28","kind":"variable"},{"ref":{"refId":"vector_math/vec3","name":"vec3"},"isFinal":true,"name":"impulse","id":"impulse","line":"30","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"_motorImpulse","isPrivate":true,"id":"_motorImpulse","line":"32","kind":"variable"},{"ref":{"refId":"vector_math/mat3","name":"mat3"},"isFinal":true,"name":"mass","id":"mass","line":"35","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"motorMass","id":"motorMass","line":"38","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_enableMotor","isPrivate":true,"id":"_enableMotor","line":"40","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"_maxMotorTorque","isPrivate":true,"id":"_maxMotorTorque","line":"42","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"_motorSpeed","isPrivate":true,"id":"_motorSpeed","line":"44","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_enableLimit","isPrivate":true,"id":"_enableLimit","line":"46","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"referenceAngle","id":"referenceAngle","line":"48","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"Limits on the relative rotation of the joint. ","name":"lowerAngle","id":"lowerAngle","line":"51","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"upperAngle","id":"upperAngle","line":"52","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"limitState","id":"limitState","line":"54","kind":"variable"},{"name":"RevoluteJoint","id":"RevoluteJoint1()","children":[{"ref":{"refId":"box2d/RevoluteJointDef","name":"RevoluteJointDef"},"name":"def","id":"def","kind":"param"}],"line":"56","kind":"constructor"}],"line":"26","kind":"class"},{"superclass":{"refId":"box2d/JointDef","name":"JointDef"},"uri":"package:box2d/src/dynamics/joints/friction_joint_def.dart","name":"FrictionJointDef","id":"FrictionJointDef","children":[{"returnType":{"refId":"void","name":"void"},"name":"initialize","id":"initialize3()","children":[{"ref":{"refId":"box2d/Body","name":"Body"},"name":"bA","id":"bA","kind":"param"},{"ref":{"refId":"box2d/Body","name":"Body"},"name":"bB","id":"bB","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"anchor","id":"anchor","kind":"param"}],"line":"39","kind":"method"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"The local anchor point relative to bodyA's origin. ","name":"localAnchorA","id":"localAnchorA","line":"19","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"The local anchor point relative to bodyB's origin. ","name":"localAnchorB","id":"localAnchorB","line":"22","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"The maximum friction force in N. ","name":"maxForce","id":"maxForce","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"The maximum friction torque in N-m. ","name":"maxTorque","id":"maxTorque","line":"28","kind":"variable"},{"name":"FrictionJointDef","id":"FrictionJointDef0()","line":"30","kind":"constructor"}],"line":"17","kind":"class"},{"superclass":{"refId":"box2d/Joint","name":"Joint"},"uri":"package:box2d/src/dynamics/joints/friction_joint.dart","name":"FrictionJoint","id":"FrictionJoint","children":[{"returnType":{"refId":"void","name":"void"},"name":"getLocalAnchorA","id":"getLocalAnchorA1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argOut","id":"argOut","kind":"param"}],"line":"35","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"getLocalAnchorB","id":"getLocalAnchorB1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argOut","id":"argOut","kind":"param"}],"line":"39","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"getReactionForce","id":"getReactionForce2()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"inv_dt","id":"inv_dt","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argOut","id":"argOut","kind":"param"}],"line":"43","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"name":"getReactionTorque","id":"getReactionTorque1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"inv_dt","id":"inv_dt","kind":"param"}],"line":"47","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"maxForce=","id":"maxForce=1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"force","id":"force","kind":"param"}],"line":"49","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"maxTorque=","id":"maxTorque=1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"torque","id":"torque","kind":"param"}],"line":"56","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"initVelocityConstraints","id":"initVelocityConstraints1()","children":[{"ref":{"refId":"box2d/TimeStep","name":"TimeStep"},"name":"time_step","id":"time_step","kind":"param"}],"line":"63","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"solveVelocityConstraints","id":"solveVelocityConstraints1()","children":[{"ref":{"refId":"box2d/TimeStep","name":"TimeStep"},"name":"time_step","id":"time_step","kind":"param"}],"line":"116","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"solvePositionConstraints","id":"solvePositionConstraints1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"baumgarte","id":"baumgarte","kind":"param"}],"line":"184","kind":"method"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"maxForce","id":"maxForce","line":"54","kind":"property"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"maxTorque","id":"maxTorque","line":"61","kind":"property"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"_localAnchorA","isPrivate":true,"id":"_localAnchorA","line":"18","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"_localAnchorB","isPrivate":true,"id":"_localAnchorB","line":"19","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"_linearImpulse","isPrivate":true,"id":"_linearImpulse","line":"21","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"_angularImpulse","isPrivate":true,"id":"_angularImpulse","line":"22","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"_maxForce","isPrivate":true,"id":"_maxForce","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"_maxTorque","isPrivate":true,"id":"_maxTorque","line":"24","kind":"variable"},{"name":"FrictionJoint","id":"FrictionJoint1()","children":[{"ref":{"refId":"box2d/FrictionJointDef","name":"FrictionJointDef"},"name":"def","id":"def","kind":"param"}],"line":"26","kind":"constructor"}],"line":"17","kind":"class"},{"superclass":{"refId":"box2d/JointDef","name":"JointDef"},"uri":"package:box2d/src/dynamics/joints/distance_joint_def.dart","name":"DistanceJointDef","id":"DistanceJointDef","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nInitialize the bodies, anchors, and length using the world\nanchors.\nb1: First body\nb2: Second body\nanchor1: World anchor on first body\nanchor2: World anchor on second body\n","name":"initialize","id":"initialize4()","children":[{"ref":{"refId":"box2d/Body","name":"Body"},"name":"b1","id":"b1","kind":"param"},{"ref":{"refId":"box2d/Body","name":"Body"},"name":"b2","id":"b2","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"anchor1","id":"anchor1","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"anchor2","id":"anchor2","kind":"param"}],"line":"64","kind":"method"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"The local anchor point relative to body1's origin. ","name":"localAnchorA","id":"localAnchorA","line":"28","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"The local anchor point relative to body2's origin. ","name":"localAnchorB","id":"localAnchorB","line":"31","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"The equilibrium length between the anchor points. ","name":"length","id":"length","line":"34","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"\nThe mass-spring-damper frequency in Hertz.\n","name":"frequencyHz","id":"frequencyHz","line":"39","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"\nThe damping ratio. 0 = no damping, 1 = critical damping.\n","name":"dampingRatio","id":"dampingRatio","line":"44","kind":"variable"},{"name":"DistanceJointDef","id":"DistanceJointDef0()","line":"46","kind":"constructor"}],"line":"26","kind":"class"},{"superclass":{"refId":"box2d/Joint","name":"Joint"},"uri":"package:box2d/src/dynamics/joints/distance_joint.dart","name":"DistanceJoint","id":"DistanceJoint","children":[{"returnType":{"refId":"void","name":"void"},"name":"getAnchorA","id":"getAnchorA1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argOut","id":"argOut","kind":"param"}],"line":"49","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"getAnchorB","id":"getAnchorB1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argOut","id":"argOut","kind":"param"}],"line":"53","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"getReactionForce","id":"getReactionForce2()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"inv_dt","id":"inv_dt","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argOut","id":"argOut","kind":"param"}],"line":"57","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"name":"getReactionTorque","id":"getReactionTorque1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"inv_dt","id":"inv_dt","kind":"param"}],"line":"63","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"initVelocityConstraints","id":"initVelocityConstraints1()","children":[{"ref":{"refId":"box2d/TimeStep","name":"TimeStep"},"name":"time_step","id":"time_step","kind":"param"}],"line":"67","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"solveVelocityConstraints","id":"solveVelocityConstraints1()","children":[{"ref":{"refId":"box2d/TimeStep","name":"TimeStep"},"name":"time_step","id":"time_step","kind":"param"}],"line":"138","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"solvePositionConstraints","id":"solvePositionConstraints1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"baumgarte","id":"baumgarte","kind":"param"}],"line":"168","kind":"method"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"localAnchor1","id":"localAnchor1","line":"24","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"localAnchor2","id":"localAnchor2","line":"25","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"u","id":"u","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"impulse","id":"impulse","line":"27","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"Effective mass for the constraint. ","name":"mass","id":"mass","line":"30","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"length","id":"length","line":"31","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"frequencyHz","id":"frequencyHz","line":"32","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"dampingRatio","id":"dampingRatio","line":"33","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"gamma","id":"gamma","line":"34","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"bias","id":"bias","line":"35","kind":"variable"},{"name":"DistanceJoint","id":"DistanceJoint1()","children":[{"ref":{"refId":"box2d/DistanceJointDef","name":"DistanceJointDef"},"name":"def","id":"def","kind":"param"}],"line":"37","kind":"constructor"}],"line":"23","kind":"class"},{"superclass":{"refId":"box2d/JointDef","name":"JointDef"},"uri":"package:box2d/src/dynamics/joints/constant_volume_joint_def.dart","name":"ConstantVolumeJointDef","id":"ConstantVolumeJointDef","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a body to the group.\n","name":"addBody","id":"addBody1()","children":[{"ref":{"refId":"box2d/Body","name":"Body"},"name":"argBody","id":"argBody","kind":"param"}],"line":"42","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdds a body and the pre-made distance joint.  Should only\nbe used for deserialization.\n","name":"addBodyAndJoint","id":"addBodyAndJoint2()","children":[{"ref":{"refId":"box2d/Body","name":"Body"},"name":"argBody","id":"argBody","kind":"param"},{"ref":{"refId":"box2d/DistanceJoint","name":"DistanceJoint"},"name":"argJoint","id":"argJoint","kind":"param"}],"line":"55","kind":"method"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"frequencyHz","id":"frequencyHz","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"dampingRatio","id":"dampingRatio","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/Body","name":"Body"}],"name":"List"},"name":"bodies","id":"bodies","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/DistanceJoint","name":"DistanceJoint"}],"name":"List"},"name":"joints","id":"joints","line":"27","kind":"variable"},{"name":"ConstantVolumeJointDef","id":"ConstantVolumeJointDef0()","line":"29","kind":"constructor"}],"line":"22","kind":"class"},{"superclass":{"refId":"box2d/Joint","name":"Joint"},"uri":"package:box2d/src/dynamics/joints/constant_volume_joint.dart","name":"ConstantVolumeJoint","id":"ConstantVolumeJoint","children":[{"returnType":{"refId":"void","name":"void"},"name":"inflate","id":"inflate1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"factor","id":"factor","kind":"param"}],"line":"97","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"destructor","id":"destructor0()","line":"101","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"Apply the position correction to the particles. ","name":"constrainEdges","id":"constrainEdges1()","children":[{"ref":{"refId":"box2d/TimeStep","name":"TimeStep"},"name":"argStep","id":"argStep","kind":"param"}],"line":"120","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"initVelocityConstraints","id":"initVelocityConstraints1()","children":[{"ref":{"refId":"box2d/TimeStep","name":"TimeStep"},"name":"argStep","id":"argStep","kind":"param"}],"line":"158","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nSolves for the impact of this joint on the positions of the connected\nbodies. Implements abstract method in [Joint].\n","name":"solvePositionConstraints","id":"solvePositionConstraints1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"baumgarte","id":"baumgarte","kind":"param"}],"line":"187","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSolves for the impact of this joint on the velocities of the connected\nbodies. Implements abstract method in [Joint].\n","name":"solveVelocityConstraints","id":"solveVelocityConstraints1()","children":[{"ref":{"refId":"box2d/TimeStep","name":"TimeStep"},"name":"argStep","id":"argStep","kind":"param"}],"line":"195","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"getAnchorA","id":"getAnchorA1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argOut","id":"argOut","kind":"param"}],"line":"217","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"getAnchorB","id":"getAnchorB1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argOut","id":"argOut","kind":"param"}],"line":"219","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"getReactionForce","id":"getReactionForce2()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"inv_dt","id":"inv_dt","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argOut","id":"argOut","kind":"param"}],"line":"221","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"name":"getReactionTorque","id":"getReactionTorque1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"inv_dt","id":"inv_dt","kind":"param"}],"line":"223","kind":"method"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"area","id":"area","line":"107","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/Body","name":"Body"}],"name":"List"},"name":"bodies","id":"bodies","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/num","name":"num"}],"name":"List"},"name":"targetLengths","id":"targetLengths","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"targetVolume","id":"targetVolume","line":"27","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"vector_math/vec2","name":"vec2"}],"name":"List"},"name":"normals","id":"normals","line":"29","kind":"variable"},{"ref":{"refId":"box2d/TimeStep","name":"TimeStep"},"name":"step","id":"step","line":"31","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"_impulse","isPrivate":true,"id":"_impulse","line":"33","kind":"variable"},{"ref":{"refId":"box2d/World","name":"World"},"name":"_world","isPrivate":true,"id":"_world","line":"35","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/DistanceJoint","name":"DistanceJoint"}],"name":"List"},"name":"distanceJoints","id":"distanceJoints","line":"37","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"frequencyHz","id":"frequencyHz","line":"39","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"dampingRatio","id":"dampingRatio","line":"40","kind":"variable"},{"name":"ConstantVolumeJoint","id":"ConstantVolumeJoint2()","children":[{"initializedField":{"refId":"box2d/ConstantVolumeJoint/_world","name":"_world"},"ref":{"refId":"box2d/World","name":"World"},"name":"_world","isPrivate":true,"id":"_world","kind":"param"},{"ref":{"refId":"box2d/ConstantVolumeJointDef","name":"ConstantVolumeJointDef"},"name":"def","id":"def","kind":"param"}],"line":"42","kind":"constructor"}],"line":"24","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/joints/limit_state.dart","name":"LimitState","id":"LimitState","children":[{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"INACTIVE","id":"INACTIVE","line":"20","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"AT_LOWER","id":"AT_LOWER","line":"21","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"AT_UPPER","id":"AT_UPPER","line":"22","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"EQUAL","id":"EQUAL","line":"23","kind":"variable"}],"line":"19","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/joints/joint_type.dart","name":"JointType","id":"JointType","children":[{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UNKNOWN","id":"UNKNOWN","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"REVOLUTE","id":"REVOLUTE","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"PRISMATIC","id":"PRISMATIC","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"DISTANCE","id":"DISTANCE","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"PULLEY","id":"PULLEY","line":"27","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"MOUSE","id":"MOUSE","line":"28","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"GEAR","id":"GEAR","line":"29","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"LINE","id":"LINE","line":"30","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"WELD","id":"WELD","line":"31","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"FRICTION","id":"FRICTION","line":"32","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CONSTANT_VOLUME","id":"CONSTANT_VOLUME","line":"33","kind":"variable"}],"line":"22","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/joints/joint_def.dart","name":"JointDef","id":"JointDef","children":[{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nThe joint type is set automatically for concrete joint types.\n","name":"type","id":"type","line":"32","kind":"variable"},{"comment":"\nUse this to attach application specific data to your joints.\n","name":"userData","id":"userData","line":"37","kind":"variable"},{"ref":{"refId":"box2d/Body","name":"Body"},"comment":"\nThe first attached body.\n","name":"bodyA","id":"bodyA","line":"42","kind":"variable"},{"ref":{"refId":"box2d/Body","name":"Body"},"comment":"\nThe second attached body.\n","name":"bodyB","id":"bodyB","line":"47","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nSet this flag to true if the attached bodies should collide.\n","name":"collideConnected","id":"collideConnected","line":"52","kind":"variable"},{"name":"JointDef","id":"JointDef0()","line":"22","kind":"constructor"}],"line":"21","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/joints/joint_edge.dart","name":"JointEdge","id":"JointEdge","children":[{"ref":{"refId":"box2d/Body","name":"Body"},"comment":"\nProvides quick access to the other body attached.\n","name":"other","id":"other","line":"34","kind":"variable"},{"ref":{"refId":"box2d/Joint","name":"Joint"},"comment":"\nThe joint.\n","name":"joint","id":"joint","line":"39","kind":"variable"},{"ref":{"refId":"box2d/JointEdge","name":"JointEdge"},"comment":"\nThe previous joint edge in the body's joint list.\n","name":"prev","id":"prev","line":"44","kind":"variable"},{"ref":{"refId":"box2d/JointEdge","name":"JointEdge"},"comment":"\nThe next joint edge in the body's joint list.\n","name":"next","id":"next","line":"49","kind":"variable"},{"comment":"\nConstructs a new joint edge with everything set to null.\n","name":"JointEdge","id":"JointEdge0()","line":"29","kind":"constructor"}],"line":"25","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/joints/joint.dart","name":"Joint","id":"Joint","children":[{"returnType":{"refId":"void","name":"void"},"isStatic":true,"name":"destroy","id":"destroy1()","children":[{"ref":{"refId":"box2d/Joint","name":"Joint"},"name":"joint","id":"joint","kind":"param"}],"line":"97","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Get the anchor point on bodyA in world coordinates. ","name":"getAnchorA","id":"getAnchorA1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argOut","id":"argOut","kind":"param"}],"line":"102","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Get the anchor point on bodyB in world coordinates. ","name":"getAnchorB","id":"getAnchorB1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argOut","id":"argOut","kind":"param"}],"line":"105","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Get the reaction force on body2 at the joint anchor in Newtons. ","name":"getReactionForce","id":"getReactionForce2()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"inv_dt","id":"inv_dt","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argOut","id":"argOut","kind":"param"}],"line":"108","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"comment":"Get the reaction torque on body2 in N*m. ","name":"getReactionTorque","id":"getReactionTorque1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"inv_dt","id":"inv_dt","kind":"param"}],"line":"111","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"initVelocityConstraints","id":"initVelocityConstraints1()","children":[{"ref":{"refId":"box2d/TimeStep","name":"TimeStep"},"name":"time_step","id":"time_step","kind":"param"}],"line":"116","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"solveVelocityConstraints","id":"solveVelocityConstraints1()","children":[{"ref":{"refId":"box2d/TimeStep","name":"TimeStep"},"name":"time_step","id":"time_step","kind":"param"}],"line":"118","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"This returns true if the position errors are within tolerance. ","name":"solvePositionConstraints","id":"solvePositionConstraints1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"baumgarte","id":"baumgarte","kind":"param"}],"line":"121","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Override to handle destruction of joint. ","name":"destructor","id":"destructor0()","line":"124","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Short-cut function to determine if either body is inactive. ","name":"active","id":"active","line":"114","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"type","id":"type","line":"22","kind":"variable"},{"ref":{"refId":"box2d/Joint","name":"Joint"},"name":"_prev","isPrivate":true,"id":"_prev","line":"24","kind":"variable"},{"ref":{"refId":"box2d/Joint","name":"Joint"},"name":"_next","isPrivate":true,"id":"_next","line":"25","kind":"variable"},{"ref":{"refId":"box2d/JointEdge","name":"JointEdge"},"name":"edgeA","id":"edgeA","line":"27","kind":"variable"},{"ref":{"refId":"box2d/JointEdge","name":"JointEdge"},"name":"edgeB","id":"edgeB","line":"28","kind":"variable"},{"ref":{"refId":"box2d/Body","name":"Body"},"name":"bodyA","id":"bodyA","line":"30","kind":"variable"},{"ref":{"refId":"box2d/Body","name":"Body"},"name":"bodyB","id":"bodyB","line":"31","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"islandFlag","id":"islandFlag","line":"33","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"collideConnected","id":"collideConnected","line":"35","kind":"variable"},{"name":"userData","id":"userData","line":"37","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"localCenterA","id":"localCenterA","line":"40","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"localCenterB","id":"localCenterB","line":"41","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"invMassA","id":"invMassA","line":"43","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"invIA","id":"invIA","line":"44","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"invMassB","id":"invMassB","line":"45","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"invIB","id":"invIB","line":"46","kind":"variable"},{"name":"Joint","id":"Joint1()","children":[{"ref":{"refId":"box2d/JointDef","name":"JointDef"},"name":"def","id":"def","kind":"param"}],"line":"48","kind":"constructor"},{"name":"Joint.create","id":"Joint.create2()","children":[{"ref":{"refId":"box2d/World","name":"World"},"name":"argWorld","id":"argWorld","kind":"param"},{"ref":{"refId":"box2d/JointDef","name":"JointDef"},"name":"def","id":"def","kind":"param"}],"line":"65","kind":"constructor"}],"line":"21","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/contacts/time_of_impact_constraint.dart","name":"TimeOfImpactConstraint","id":"TimeOfImpactConstraint","children":[{"returnType":{"refId":"void","name":"void"},"name":"setFrom","id":"setFrom1()","children":[{"ref":{"refId":"box2d/TimeOfImpactConstraint","name":"TimeOfImpactConstraint"},"name":"argOther","id":"argOther","kind":"param"}],"line":"38","kind":"method"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"vector_math/vec2","name":"vec2"}],"name":"List"},"isFinal":true,"name":"localPoints","id":"localPoints","line":"18","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"localNormal","id":"localNormal","line":"19","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"localPoint","id":"localPoint","line":"20","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"type","id":"type","line":"21","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"radius","id":"radius","line":"22","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"pointCount","id":"pointCount","line":"23","kind":"variable"},{"ref":{"refId":"box2d/Body","name":"Body"},"name":"bodyA","id":"bodyA","line":"24","kind":"variable"},{"ref":{"refId":"box2d/Body","name":"Body"},"name":"bodyB","id":"bodyB","line":"25","kind":"variable"},{"name":"TimeOfImpactConstraint","id":"TimeOfImpactConstraint0()","line":"27","kind":"constructor"}],"line":"17","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/contacts/time_of_impact_solver.dart","name":"TimeOfImpactSolverManifold","id":"TimeOfImpactSolverManifold","children":[{"returnType":{"refId":"void","name":"void"},"name":"initialize","id":"initialize2()","children":[{"ref":{"refId":"box2d/TimeOfImpactConstraint","name":"TimeOfImpactConstraint"},"name":"cc","id":"cc","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"187","kind":"method"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"normal","id":"normal","line":"165","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"point","id":"point","line":"166","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"separation","id":"separation","line":"167","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"Pooling ","name":"pointA","id":"pointA","line":"170","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"pointB","id":"pointB","line":"171","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"temp","id":"temp","line":"172","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"planePoint","id":"planePoint","line":"173","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"clipPoint","id":"clipPoint","line":"174","kind":"variable"},{"comment":"constructor that initiliazes everything. ","name":"TimeOfImpactSolverManifold","id":"TimeOfImpactSolverManifold0()","line":"177","kind":"constructor"}],"line":"164","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/contacts/time_of_impact_solver.dart","name":"TimeOfImpactSolver","id":"TimeOfImpactSolver","children":[{"returnType":{"refId":"void","name":"void"},"name":"initialize","id":"initialize3()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/Contact","name":"Contact"}],"name":"List"},"name":"contacts","id":"contacts","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"argCount","id":"argCount","kind":"param"},{"ref":{"refId":"box2d/Body","name":"Body"},"name":"argToiBody","id":"argToiBody","kind":"param"}],"line":"47","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nPerform one solver iteration. Returns true if converged.\n","name":"solve","id":"solve1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"baumgarte","id":"baumgarte","kind":"param"}],"line":"95","kind":"method"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/TimeOfImpactConstraint","name":"TimeOfImpactConstraint"}],"name":"List"},"name":"constraints","id":"constraints","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"count","id":"count","line":"24","kind":"variable"},{"ref":{"refId":"box2d/Body","name":"Body"},"name":"toiBody","id":"toiBody","line":"25","kind":"variable"},{"ref":{"refId":"box2d/TimeOfImpactSolverManifold","name":"TimeOfImpactSolverManifold"},"isFinal":true,"comment":"Pooling. ","name":"psm","id":"psm","line":"28","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"rA","id":"rA","line":"29","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"rB","id":"rB","line":"30","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"P","id":"P","line":"31","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"temp","id":"temp","line":"32","kind":"variable"},{"name":"TimeOfImpactSolver","id":"TimeOfImpactSolver0()","line":"34","kind":"constructor"}],"line":"22","kind":"class"},{"superclass":{"refId":"box2d/Contact","name":"Contact"},"uri":"package:box2d/src/dynamics/contacts/polygon_contact.dart","name":"PolygonContact","id":"PolygonContact","children":[{"returnType":{"refId":"void","name":"void"},"name":"init","id":"init2()","children":[{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fA","id":"fA","kind":"param"},{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fB","id":"fB","kind":"param"}],"line":"22","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"evaluate","id":"evaluate3()","children":[{"ref":{"refId":"box2d/Manifold","name":"Manifold"},"name":"argManifold","id":"argManifold","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xfA","id":"xfA","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xfB","id":"xfB","kind":"param"}],"line":"28","kind":"method"},{"name":"PolygonContact","id":"PolygonContact1()","children":[{"ref":{"refId":"box2d/DefaultWorldPool","name":"DefaultWorldPool"},"name":"argPool","id":"argPool","kind":"param"}],"line":"19","kind":"constructor"}],"line":"17","kind":"class"},{"superclass":{"refId":"box2d/Contact","name":"Contact"},"uri":"package:box2d/src/dynamics/contacts/polygon_and_circle_contact.dart","name":"PolygonAndCircleContact","id":"PolygonAndCircleContact","children":[{"returnType":{"refId":"void","name":"void"},"name":"init","id":"init2()","children":[{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fA","id":"fA","kind":"param"},{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fB","id":"fB","kind":"param"}],"line":"22","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"evaluate","id":"evaluate3()","children":[{"ref":{"refId":"box2d/Manifold","name":"Manifold"},"name":"argManifold","id":"argManifold","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xfA","id":"xfA","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xfB","id":"xfB","kind":"param"}],"line":"28","kind":"method"},{"name":"PolygonAndCircleContact","id":"PolygonAndCircleContact1()","children":[{"ref":{"refId":"box2d/DefaultWorldPool","name":"DefaultWorldPool"},"name":"argPool","id":"argPool","kind":"param"}],"line":"19","kind":"constructor"}],"line":"17","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/contacts/contact_solver.dart","name":"PositionSolverManifold","id":"PositionSolverManifold","children":[{"returnType":{"refId":"void","name":"void"},"name":"initialize","id":"initialize2()","children":[{"ref":{"refId":"box2d/ContactConstraint","name":"ContactConstraint"},"name":"cc","id":"cc","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"603","kind":"method"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"normal","id":"normal","line":"580","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"point","id":"point","line":"581","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"separation","id":"separation","line":"582","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"comment":"Pooling ","name":"pointA","id":"pointA","line":"585","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"pointB","id":"pointB","line":"586","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"temp","id":"temp","line":"587","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"planePoint","id":"planePoint","line":"588","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"clipPoint","id":"clipPoint","line":"589","kind":"variable"},{"name":"PositionSolverManifold","id":"PositionSolverManifold0()","line":"591","kind":"constructor"}],"line":"579","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/contacts/contact_solver.dart","name":"ContactSolver","id":"ContactSolver","children":[{"returnType":{"refId":"void","name":"void"},"name":"init","id":"init3()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/Contact","name":"Contact"}],"name":"List"},"name":"contacts","id":"contacts","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"contactCount","id":"contactCount","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"impulseRatio","id":"impulseRatio","kind":"param"}],"line":"72","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"warmStart","id":"warmStart0()","line":"228","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"solveVelocityConstraints","id":"solveVelocityConstraints0()","line":"261","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"storeImpulses","id":"storeImpulses0()","line":"504","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nSequential solver.\n","name":"solvePositionConstraints","id":"solvePositionConstraints1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"baumgarte","id":"baumgarte","kind":"param"}],"line":"519","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nFor each solver, this is the initial number of constraints\nin the array, which expands as needed.\n","name":"INITIAL_NUM_CONSTRAINTS","id":"INITIAL_NUM_CONSTRAINTS","line":"22","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isStatic":true,"comment":"\nEnsure a reasonable condition number. For the block solver\n","name":"K_MAX_CONDITION_NUMBER","id":"K_MAX_CONDITION_NUMBER","line":"27","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/ContactConstraint","name":"ContactConstraint"}],"name":"List"},"name":"constraints","id":"constraints","line":"29","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"constraintCount","id":"constraintCount","line":"30","kind":"variable"},{"ref":{"refId":"box2d/WorldManifold","name":"WorldManifold"},"isFinal":true,"comment":"Pooling ","name":"worldManifold","id":"worldManifold","line":"34","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"tangent","id":"tangent","line":"35","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"temp1","id":"temp1","line":"36","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"temp2","id":"temp2","line":"37","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"P","id":"P","line":"38","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"dv","id":"dv","line":"39","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"dv1","id":"dv1","line":"40","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"dv2","id":"dv2","line":"41","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"x","id":"x","line":"42","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"d","id":"d","line":"43","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"P1","id":"P1","line":"44","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"P2","id":"P2","line":"45","kind":"variable"},{"ref":{"refId":"box2d/PositionSolverManifold","name":"PositionSolverManifold"},"isFinal":true,"name":"psolver","id":"psolver","line":"46","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"rA","id":"rA","line":"47","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"rB","id":"rB","line":"48","kind":"variable"},{"comment":"Constructs a new ContactSolver. ","name":"ContactSolver","id":"ContactSolver0()","line":"51","kind":"constructor"}],"line":"17","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/contacts/contact_register.dart","name":"ContactRegister","id":"ContactRegister","children":[{"ref":{"refId":"dart.collection/Queue","arguments":[{"refId":"box2d/Contact","name":"Contact"}],"name":"Queue"},"name":"creator","id":"creator","line":"18","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"primary","id":"primary","line":"19","kind":"variable"},{"name":"ContactRegister","id":"ContactRegister0()","line":"21","kind":"constructor"}],"line":"17","kind":"class"},{"superclass":{"refId":"box2d/Contact","name":"Contact"},"uri":"package:box2d/src/dynamics/contacts/circle_contact.dart","name":"CircleContact","id":"CircleContact","children":[{"returnType":{"refId":"void","name":"void"},"name":"init","id":"init2()","children":[{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fA","id":"fA","kind":"param"},{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fB","id":"fB","kind":"param"}],"line":"20","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"evaluate","id":"evaluate3()","children":[{"ref":{"refId":"box2d/Manifold","name":"Manifold"},"name":"argManifold","id":"argManifold","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xfA","id":"xfA","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xfB","id":"xfB","kind":"param"}],"line":"26","kind":"method"},{"name":"CircleContact","id":"CircleContact1()","children":[{"ref":{"refId":"box2d/DefaultWorldPool","name":"DefaultWorldPool"},"name":"argPool","id":"argPool","kind":"param"}],"line":"18","kind":"constructor"}],"line":"17","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/contacts/contact_creator.dart","name":"ContactCreator","id":"ContactCreator","children":[{"returnType":{"refId":"box2d/Contact","name":"Contact"},"name":"contactCreateFcn","id":"contactCreateFcn3()","children":[{"ref":{"refId":"box2d/DefaultWorldPool","name":"DefaultWorldPool"},"name":"argPool","id":"argPool","kind":"param"},{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fixtureA","id":"fixtureA","kind":"param"},{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fixtureB","id":"fixtureB","line":"19","kind":"param"}],"line":"18","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"contactDestroyFcn","id":"contactDestroyFcn2()","children":[{"ref":{"refId":"box2d/DefaultWorldPool","name":"DefaultWorldPool"},"name":"argPool","id":"argPool","kind":"param"},{"ref":{"refId":"box2d/Contact","name":"Contact"},"name":"contact","id":"contact","kind":"param"}],"line":"20","kind":"method"}],"line":"17","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/contacts/contact_edge.dart","name":"ContactEdge","id":"ContactEdge","children":[{"ref":{"refId":"box2d/Body","name":"Body"},"comment":"The other body attached to the edge. ","name":"other","id":"other","line":"26","kind":"variable"},{"ref":{"refId":"box2d/Contact","name":"Contact"},"comment":"The contact. ","name":"contact","id":"contact","line":"29","kind":"variable"},{"ref":{"refId":"box2d/ContactEdge","name":"ContactEdge"},"comment":"The previous contact edge in the body's contact list. ","name":"prev","id":"prev","line":"32","kind":"variable"},{"ref":{"refId":"box2d/ContactEdge","name":"ContactEdge"},"comment":"The next contact edge in the body's contact list. ","name":"next","id":"next","line":"35","kind":"variable"},{"comment":"\nConstructs a new ContactEdge with all fields set to null.\n","name":"ContactEdge","id":"ContactEdge0()","line":"40","kind":"constructor"}],"line":"24","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/contacts/contact_constraint_point.dart","name":"ContactConstraintPoint","id":"ContactConstraintPoint","children":[{"returnType":{"refId":"void","name":"void"},"comment":"Sets this point equal to the given point. ","name":"setFrom","id":"setFrom1()","children":[{"ref":{"refId":"box2d/ContactConstraintPoint","name":"ContactConstraintPoint"},"name":"cp","id":"cp","kind":"param"}],"line":"41","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"52","kind":"method"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"localPoint","id":"localPoint","line":"18","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"rA","id":"rA","line":"20","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"rB","id":"rB","line":"21","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"normalImpulse","id":"normalImpulse","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"tangentImpulse","id":"tangentImpulse","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"normalMass","id":"normalMass","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"tangentMass","id":"tangentMass","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"velocityBias","id":"velocityBias","line":"27","kind":"variable"},{"comment":"Constructs a new ContactConstraintPoint. ","name":"ContactConstraintPoint","id":"ContactConstraintPoint0()","line":"30","kind":"constructor"}],"line":"17","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/contacts/contact_constraint.dart","name":"ContactConstraint","id":"ContactConstraint","children":[{"returnType":{"refId":"void","name":"void"},"name":"setFrom","id":"setFrom1()","children":[{"ref":{"refId":"box2d/ContactConstraint","name":"ContactConstraint"},"name":"cp","id":"cp","kind":"param"}],"line":"54","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"73","kind":"method"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/ContactConstraintPoint","name":"ContactConstraintPoint"}],"name":"List"},"name":"points","id":"points","line":"21","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"localNormal","id":"localNormal","line":"23","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"localPoint","id":"localPoint","line":"24","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"normal","id":"normal","line":"25","kind":"variable"},{"ref":{"refId":"vector_math/mat2","name":"mat2"},"isFinal":true,"name":"normalMass","id":"normalMass","line":"27","kind":"variable"},{"ref":{"refId":"vector_math/mat2","name":"mat2"},"isFinal":true,"name":"K","id":"K","line":"29","kind":"variable"},{"ref":{"refId":"box2d/Body","name":"Body"},"name":"bodyA","id":"bodyA","line":"31","kind":"variable"},{"ref":{"refId":"box2d/Body","name":"Body"},"name":"bodyB","id":"bodyB","line":"32","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"type","id":"type","line":"34","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"radius","id":"radius","line":"36","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"friction","id":"friction","line":"37","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"restitution","id":"restitution","line":"38","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"pointCount","id":"pointCount","line":"39","kind":"variable"},{"ref":{"refId":"box2d/Manifold","name":"Manifold"},"name":"manifold","id":"manifold","line":"41","kind":"variable"},{"name":"ContactConstraint","id":"ContactConstraint0()","line":"43","kind":"constructor"}],"line":"20","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/contacts/contact.dart","name":"Contact","id":"Contact","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nInitialization for pooling.\n","name":"init","id":"init2()","children":[{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fixA","id":"fixA","kind":"param"},{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fixB","id":"fixB","kind":"param"}],"line":"66","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nIntializes the given world manifold.\n","name":"getWorldManifold","id":"getWorldManifold1()","children":[{"ref":{"refId":"box2d/WorldManifold","name":"WorldManifold"},"name":"worldManifold","id":"worldManifold","kind":"param"}],"line":"92","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nEnable/disable this contact. This can be used inside the pre-solve\ncontact listener. The contact is only disabled for the current time step\n(or sub-step in continuous collisions).\n","name":"enabled=","id":"enabled=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"flag","id":"flag","kind":"param"}],"line":"110","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Abstract method. ","name":"evaluate","id":"evaluate3()","children":[{"ref":{"refId":"box2d/Manifold","name":"Manifold"},"name":"argManifold","id":"argManifold","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xfA","id":"xfA","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xfB","id":"xfB","kind":"param"}],"line":"121","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nFlag this contact for filtering. Filtering will occur the next time step.\n","name":"flagForFiltering","id":"flagForFiltering0()","line":"126","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"update","id":"update1()","children":[{"ref":{"refId":"box2d/ContactListener","name":"ContactListener"},"name":"listener","id":"listener","kind":"param"}],"line":"130","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Is this contact touching ","name":"touching","id":"touching","line":"103","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"enabled","id":"enabled","line":"118","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Used when crawling contact graph when forming islands. ","name":"ISLAND_FLAG","id":"ISLAND_FLAG","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"TOUCHING_FLAG","id":"TOUCHING_FLAG","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"ENABLED_FLAG","id":"ENABLED_FLAG","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"FILTER_FLAG","id":"FILTER_FLAG","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"BULLET_HIT_FLAG","id":"BULLET_HIT_FLAG","line":"27","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The flags for this Contact. ","name":"flags","id":"flags","line":"30","kind":"variable"},{"ref":{"refId":"box2d/Contact","name":"Contact"},"comment":"World pool and list pointers. ","name":"prev","id":"prev","line":"35","kind":"variable"},{"ref":{"refId":"box2d/Contact","name":"Contact"},"name":"next","id":"next","line":"36","kind":"variable"},{"ref":{"refId":"box2d/ContactEdge","name":"ContactEdge"},"comment":"Nodes for connecting bodies. ","name":"edge1","id":"edge1","line":"39","kind":"variable"},{"ref":{"refId":"box2d/ContactEdge","name":"ContactEdge"},"name":"edge2","id":"edge2","line":"40","kind":"variable"},{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fixtureA","id":"fixtureA","line":"42","kind":"variable"},{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fixtureB","id":"fixtureB","line":"43","kind":"variable"},{"ref":{"refId":"box2d/Manifold","name":"Manifold"},"name":"manifold","id":"manifold","line":"45","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"toiCount","id":"toiCount","line":"47","kind":"variable"},{"ref":{"refId":"box2d/DefaultWorldPool","name":"DefaultWorldPool"},"name":"pool","id":"pool","line":"49","kind":"variable"},{"ref":{"refId":"box2d/Manifold","name":"Manifold"},"isFinal":true,"comment":"Pool manifold for internal use. ","name":"_oldManifold","isPrivate":true,"id":"_oldManifold","line":"52","kind":"variable"},{"name":"Contact","id":"Contact1()","children":[{"ref":{"refId":"box2d/DefaultWorldPool","name":"DefaultWorldPool"},"name":"pool","id":"pool","kind":"param"}],"line":"54","kind":"constructor"}],"line":"21","kind":"class"},{"interfaces":[{"refId":"box2d/TreeCallback","name":"TreeCallback"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/world.dart","name":"WorldQueryWrapper","id":"WorldQueryWrapper","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"treeCallback","id":"treeCallback1()","children":[{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"node","id":"node","kind":"param"}],"line":"1162","kind":"method"},{"ref":{"refId":"box2d/BroadPhase","name":"BroadPhase"},"name":"broadPhase","id":"broadPhase","line":"1157","kind":"variable"},{"ref":{"refId":"box2d/QueryCallback","name":"QueryCallback"},"name":"callback","id":"callback","line":"1158","kind":"variable"},{"name":"WorldQueryWrapper","id":"WorldQueryWrapper0()","line":"1160","kind":"constructor"}],"line":"1156","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/world.dart","name":"World","id":"World","children":[{"returnType":{"refId":"void","name":"void"},"name":"_addType","isPrivate":true,"id":"_addType3()","children":[{"ref":{"refId":"dart.collection/Queue","arguments":[{"refId":"box2d/Contact","name":"Contact"}],"name":"Queue"},"name":"creatorStack","id":"creatorStack","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"type1","id":"type1","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"type2","id":"type2","kind":"param"}],"line":"144","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_initializeRegisters","isPrivate":true,"id":"_initializeRegisters0()","line":"158","kind":"method"},{"returnType":{"refId":"box2d/Contact","name":"Contact"},"name":"popContact","id":"popContact2()","children":[{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fixtureA","id":"fixtureA","kind":"param"},{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fixtureB","id":"fixtureB","kind":"param"}],"line":"165","kind":"method"},{"returnType":{"refId":"dart.collection/Queue","arguments":[{"refId":"box2d/Contact","name":"Contact"}],"name":"Queue"},"comment":"Returns a newly stocked contact stack of the appropriate type. ","name":"_getFreshContactStack","isPrivate":true,"id":"_getFreshContactStack2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"type1","id":"type1","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"type2","id":"type2","kind":"param"}],"line":"193","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"pushContact","id":"pushContact1()","children":[{"ref":{"refId":"box2d/Contact","name":"Contact"},"name":"contact","id":"contact","kind":"param"}],"line":"203","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nRegister a contact filter to provide specific control over collision.\nOtherwise the default filter is used (_defaultFilter). The listener is\nowned by you and must remain in scope.\n","name":"contactFilter=","id":"contactFilter=1()","children":[{"ref":{"refId":"box2d/ContactFilter","name":"ContactFilter"},"name":"filter","id":"filter","kind":"param"}],"line":"222","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nRegister a contact event listener. The listener is owned by you and must\nremain in scope.\n","name":"contactListener=","id":"contactListener=1()","children":[{"ref":{"refId":"box2d/ContactListener","name":"ContactListener"},"name":"listener","id":"listener","kind":"param"}],"line":"230","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nRegister a routine for debug drawing. The debug draw functions are called\ninside with World.DrawDebugData method. The debug draw object is owned\nby you and must remain in scope.\n","name":"debugDraw=","id":"debugDraw=1()","children":[{"ref":{"refId":"box2d/DebugDraw","name":"DebugDraw"},"name":"debugDraw","id":"debugDraw","kind":"param"}],"line":"241","kind":"method"},{"returnType":{"refId":"box2d/Body","name":"Body"},"comment":"\nCreate a rigid body given a definition. No reference to the definition\nis retained.\n","name":"createBody","id":"createBody1()","children":[{"ref":{"refId":"box2d/BodyDef","name":"BodyDef"},"name":"def","id":"def","kind":"param"}],"line":"249","kind":"method"},{"returnType":{"refId":"box2d/Joint","name":"Joint"},"comment":"\nCreate a joint to constrain bodies together. No reference to the definition\nis retained. This may cause the connected bodies to cease colliding.\n\nWarning: This function is locked during callbacks.\n","name":"createJoint","id":"createJoint1()","children":[{"ref":{"refId":"box2d/JointDef","name":"JointDef"},"name":"def","id":"def","kind":"param"}],"line":"274","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nDestroy a joint. This may cause the connected bodies to begin colliding.\n\nWarning: This function is locked during callbacks.\n","name":"destroyJoint","id":"destroyJoint1()","children":[{"ref":{"refId":"box2d/Joint","name":"Joint"},"name":"joint","id":"joint","kind":"param"}],"line":"335","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nDestroy a rigid body given a definition. No reference to the definition\nis retained. This function is locked during callbacks.\n\nwarning: This automatically deletes all associated shapes.\nwarning: This function is locked during callbacks.\n","name":"destroyBody","id":"destroyBody1()","children":[{"ref":{"refId":"box2d/Body","name":"Body"},"name":"body","id":"body","kind":"param"}],"line":"417","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nTake a time step. This performs collision detection, integration,\nand constraint solution.\n\nparam timeStep\n  the amount of time to simulate, this should not vary.\nparam velocityIterations\n  for the velocity constraint solver.\nparam positionIterations\n  for the position constraint solver.\n","name":"step","id":"step3()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"dt","id":"dt","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"velocityIterations","id":"velocityIterations","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"positionIterations","id":"positionIterations","kind":"param"}],"line":"489","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCall this after you are done with time steps to clear the forces.\nYou normally call this after each call to Step, unless you are\nperforming sub-steps. By default, forces will be automatically cleared,\nso you don't need to call this function.\n\nsee setAutoClearForces\n","name":"clearForces","id":"clearForces0()","line":"539","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCall this to draw shapes and other debug draw data.\n","name":"drawDebugData","id":"drawDebugData0()","line":"549","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nQuery the world for all fixtures that potentially overlap the\nprovided AABB.\n\nparam callback\n  a user implemented callback class.\nparam aabb\n  the query box.\n","name":"queryAABB","id":"queryAABB2()","children":[{"ref":{"refId":"box2d/QueryCallback","name":"QueryCallback"},"name":"callback","id":"callback","kind":"param"},{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"name":"aabb","id":"aabb","kind":"param"}],"line":"644","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSet flag to control automatic clearing of forces after each time step.\n","name":"autoClearForces=","id":"autoClearForces=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"flag","id":"flag","kind":"param"}],"line":"678","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"solve","id":"solve1()","children":[{"ref":{"refId":"box2d/TimeStep","name":"TimeStep"},"name":"timeStep","id":"timeStep","kind":"param"}],"line":"698","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"solveTimeOfImpact","id":"solveTimeOfImpact0()","line":"849","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"solveTimeOfImpactGivenBody","id":"solveTimeOfImpactGivenBody1()","children":[{"ref":{"refId":"box2d/Body","name":"Body"},"name":"body","id":"body","kind":"param"}],"line":"897","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"drawShape","id":"drawShape3()","children":[{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fixture","id":"fixture","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xf","id":"xf","kind":"param"},{"ref":{"refId":"box2d/Color3","name":"Color3"},"name":"color","id":"color","kind":"param"}],"line":"1061","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Draws a joint for debugging purposes. ","name":"drawJoint","id":"drawJoint1()","children":[{"ref":{"refId":"box2d/Joint","name":"Joint"},"name":"joint","id":"joint","kind":"param"}],"line":"1107","kind":"method"},{"ref":{"refId":"box2d/ContactListener","name":"ContactListener"},"name":"contactListener","id":"contactListener","line":"234","kind":"property"},{"ref":{"refId":"box2d/Contact","name":"Contact"},"comment":"\nGet the world contact list. With the returned contact, use Contact.getNext\nto get the next contact in the world list. A null contact indicates the\nend of the list.\n\nreturn the head of the world contact list.\nwarning contacts are\n","name":"contactList","id":"contactList","line":"658","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet the number of broad-phase proxies.\n","name":"proxyCount","id":"proxyCount","line":"663","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet the number of contacts (each may have 0 or more contact points).\n","name":"contactCount","id":"contactCount","line":"668","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs the world locked (in the middle of a time step).\n","name":"locked","id":"locked","line":"673","kind":"property"},{"ref":{"refId":"box2d/Body","name":"Body"},"name":"bodyList","id":"bodyList","line":"686","kind":"property"},{"ref":{"refId":"box2d/Joint","name":"Joint"},"name":"jointList","id":"jointList","line":"688","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"jointCount","id":"jointCount","line":"690","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nGet the flag that controls automatic clearing of forces after each time\nstep.\n","name":"autoClearForces","id":"autoClearForces","line":"696","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"WORLD_POOL_SIZE","id":"WORLD_POOL_SIZE","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"WORLD_POOL_CONTAINER_SIZE","id":"WORLD_POOL_CONTAINER_SIZE","line":"27","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"NEW_FIXTURE","id":"NEW_FIXTURE","line":"29","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"LOCKED","id":"LOCKED","line":"30","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CLEAR_FORCES","id":"CLEAR_FORCES","line":"31","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_flags","isPrivate":true,"id":"_flags","line":"33","kind":"variable"},{"ref":{"refId":"box2d/ContactManager","name":"ContactManager"},"name":"_contactManager","isPrivate":true,"id":"_contactManager","line":"35","kind":"variable"},{"ref":{"refId":"box2d/Body","name":"Body"},"name":"_bodyList","isPrivate":true,"id":"_bodyList","line":"37","kind":"variable"},{"ref":{"refId":"box2d/Joint","name":"Joint"},"name":"_jointList","isPrivate":true,"id":"_jointList","line":"38","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_bodyCount","isPrivate":true,"id":"_bodyCount","line":"40","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_jointCount","isPrivate":true,"id":"_jointCount","line":"41","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"_gravity","isPrivate":true,"id":"_gravity","line":"43","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_allowSleep","isPrivate":true,"id":"_allowSleep","line":"44","kind":"variable"},{"ref":{"refId":"box2d/DebugDraw","name":"DebugDraw"},"name":"_debugDraw","isPrivate":true,"id":"_debugDraw","line":"46","kind":"variable"},{"ref":{"refId":"box2d/FixtureDestructionListener","name":"FixtureDestructionListener"},"name":"_fixtureDestructionListener","isPrivate":true,"id":"_fixtureDestructionListener","line":"48","kind":"variable"},{"ref":{"refId":"box2d/JointDestructionListener","name":"JointDestructionListener"},"name":"_jointDestructionListener","isPrivate":true,"id":"_jointDestructionListener","line":"49","kind":"variable"},{"ref":{"refId":"box2d/DefaultWorldPool","name":"DefaultWorldPool"},"isFinal":true,"name":"_pool","isPrivate":true,"id":"_pool","line":"51","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"\nThis is used to compute the time step ratio to\nsupport a variable time step.\n","name":"_inverseTimestep","isPrivate":true,"id":"_inverseTimestep","line":"57","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nThis is for debugging the solver.\n","name":"_warmStarting","isPrivate":true,"id":"_warmStarting","line":"62","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nThis is for debugging the solver.\n","name":"_continuousPhysics","isPrivate":true,"id":"_continuousPhysics","line":"67","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"box2d/ContactRegister","name":"ContactRegister"}],"name":"List"}],"name":"List"},"name":"_contactStacks","isPrivate":true,"id":"_contactStacks","line":"69","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"Pooling ","name":"center","id":"center","line":"72","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"axis","id":"axis","line":"73","kind":"variable"},{"ref":{"refId":"box2d/TimeStep","name":"TimeStep"},"isFinal":true,"name":"timestep","id":"timestep","line":"75","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"cA","id":"cA","line":"76","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"cB","id":"cB","line":"77","kind":"variable"},{"ref":{"refId":"box2d/WorldQueryWrapper","name":"WorldQueryWrapper"},"isFinal":true,"name":"wqwrapper","id":"wqwrapper","line":"78","kind":"variable"},{"ref":{"refId":"box2d/TimeOfImpactInput","name":"TimeOfImpactInput"},"isFinal":true,"name":"toiInput","id":"toiInput","line":"80","kind":"variable"},{"ref":{"refId":"box2d/TimeOfImpactOutput","name":"TimeOfImpactOutput"},"isFinal":true,"name":"toiOutput","id":"toiOutput","line":"81","kind":"variable"},{"ref":{"refId":"box2d/Sweep","name":"Sweep"},"isFinal":true,"name":"backup","id":"backup","line":"82","kind":"variable"},{"ref":{"refId":"box2d/TimeOfImpactSolver","name":"TimeOfImpactSolver"},"isFinal":true,"name":"toiSolver","id":"toiSolver","line":"83","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/Contact","name":"Contact"}],"name":"List"},"name":"contacts","id":"contacts","line":"84","kind":"variable"},{"ref":{"refId":"box2d/Island","name":"Island"},"isFinal":true,"name":"island","id":"island","line":"85","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/Body","name":"Body"}],"name":"List"},"name":"stack","id":"stack","line":"86","kind":"variable"},{"comment":"\nConstructs a world object.\n\ngravity\n  the world gravity vector.\ndoSleep\n  improve performance by not simulating inactive bodies.\n","name":"World","id":"World3()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"gravity","id":"gravity","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"doSleep","id":"doSleep","kind":"param"},{"ref":{"refId":"box2d/DefaultWorldPool","name":"DefaultWorldPool"},"name":"argPool","id":"argPool","kind":"param"}],"line":"96","kind":"constructor"}],"line":"25","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/time_step.dart","name":"TimeStep","id":"TimeStep","children":[{"ref":{"refId":"dart.core/num","name":"num"},"comment":"time step ","name":"dt","id":"dt","line":"31","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"inverse time step (0 if dt == 0). ","name":"inv_dt","id":"inv_dt","line":"34","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"dt * inv_dt0 ","name":"dtRatio","id":"dtRatio","line":"37","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"velocityIterations","id":"velocityIterations","line":"39","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"positionIterations","id":"positionIterations","line":"41","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"warmStarting","id":"warmStarting","line":"43","kind":"variable"},{"name":"TimeStep","id":"TimeStep0()","line":"22","kind":"constructor"}],"line":"21","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThis is an internal structure\n","uri":"package:box2d/src/dynamics/island.dart","name":"Velocity","id":"Velocity","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"v","id":"v","line":"321","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"a","id":"a","line":"322","kind":"variable"},{"name":"Velocity","id":"Velocity0()","line":"324","kind":"constructor"}],"line":"320","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nThis is an internal structure\n","uri":"package:box2d/src/dynamics/island.dart","name":"Position","id":"Position","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"x","id":"x","line":"309","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"a","id":"a","line":"310","kind":"variable"},{"name":"Position","id":"Position0()","line":"312","kind":"constructor"}],"line":"308","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/island.dart","name":"Island","id":"Island","children":[{"returnType":{"refId":"void","name":"void"},"name":"init","id":"init4()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"argBodyCapacity","id":"argBodyCapacity","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"argContactCapacity","id":"argContactCapacity","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"argJointCapacity","id":"argJointCapacity","kind":"param"},{"ref":{"refId":"box2d/ContactListener","name":"ContactListener"},"name":"argListener","id":"argListener","line":"56","kind":"param"}],"line":"55","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"clear","id":"clear0()","line":"98","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"solve","id":"solve3()","children":[{"ref":{"refId":"box2d/TimeStep","name":"TimeStep"},"name":"time_step","id":"time_step","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"gravity","id":"gravity","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"allowSleep","id":"allowSleep","kind":"param"}],"line":"104","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Adds a body to the Island. ","name":"addBody","id":"addBody1()","children":[{"ref":{"refId":"box2d/Body","name":"Body"},"name":"body","id":"body","kind":"param"}],"line":"267","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Add a contact to the Island. ","name":"addContact","id":"addContact1()","children":[{"ref":{"refId":"box2d/Contact","name":"Contact"},"name":"contact","id":"contact","kind":"param"}],"line":"274","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Add a joint to the Island. ","name":"addJoint","id":"addJoint1()","children":[{"ref":{"refId":"box2d/Joint","name":"Joint"},"name":"joint","id":"joint","kind":"param"}],"line":"280","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"report","id":"report1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/ContactConstraint","name":"ContactConstraint"}],"name":"List"},"name":"constraints","id":"constraints","kind":"param"}],"line":"285","kind":"method"},{"ref":{"refId":"box2d/ContactListener","name":"ContactListener"},"name":"listener","id":"listener","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/Body","name":"Body"}],"name":"List"},"name":"bodies","id":"bodies","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/Contact","name":"Contact"}],"name":"List"},"name":"contacts","id":"contacts","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/Joint","name":"Joint"}],"name":"List"},"name":"joints","id":"joints","line":"27","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/Position","name":"Position"}],"name":"List"},"name":"positions","id":"positions","line":"29","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/Velocity","name":"Velocity"}],"name":"List"},"name":"velocities","id":"velocities","line":"30","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"bodyCount","id":"bodyCount","line":"32","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"jointCount","id":"jointCount","line":"33","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"contactCount","id":"contactCount","line":"34","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"bodyCapacity","id":"bodyCapacity","line":"36","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"contactCapacity","id":"contactCapacity","line":"37","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"jointCapacity","id":"jointCapacity","line":"38","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"positionIterationCount","id":"positionIterationCount","line":"40","kind":"variable"},{"ref":{"refId":"box2d/ContactSolver","name":"ContactSolver"},"name":"_contactSolver","isPrivate":true,"id":"_contactSolver","line":"43","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"_translation","isPrivate":true,"id":"_translation","line":"44","kind":"variable"},{"ref":{"refId":"box2d/ContactImpulse","name":"ContactImpulse"},"name":"impulse","id":"impulse","line":"45","kind":"variable"},{"name":"Island","id":"Island0()","line":"47","kind":"constructor"}],"line":"22","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/fixture_def.dart","name":"FixtureDef","id":"FixtureDef","children":[{"ref":{"refId":"box2d/Shape","name":"Shape"},"comment":"\nThe shape to use in the fixture. This must be set.\n","name":"shape","id":"shape","line":"26","kind":"variable"},{"comment":"\nUse this to store application specific fixture data.\n","name":"userData","id":"userData","line":"31","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"\nThe friction coefficient, usually in the range [0,1].\n","name":"friction","id":"friction","line":"36","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"\nThe restitution (elasticity) usually in the range [0,1].\n","name":"restitution","id":"restitution","line":"41","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"\nThe density, usually in kg/m^2\n","name":"density","id":"density","line":"46","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nA sensor shape collects contact information but never generates a collision\nresponse.\n","name":"isSensor","id":"isSensor","line":"52","kind":"variable"},{"ref":{"refId":"box2d/Filter","name":"Filter"},"comment":"\nContact filtering data;\n","name":"filter","id":"filter","line":"57","kind":"variable"},{"comment":"\nConstructs a new FixtureDef with default values.\n","name":"FixtureDef","id":"FixtureDef0()","line":"62","kind":"constructor"}],"line":"22","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/fixture.dart","name":"Fixture","id":"Fixture","children":[{"returnType":{"refId":"void","name":"void"},"comment":"Sets this fixture according to the given body and definition. ","name":"create","id":"create2()","children":[{"ref":{"refId":"box2d/Body","name":"Body"},"name":"b","id":"b","kind":"param"},{"ref":{"refId":"box2d/FixtureDef","name":"FixtureDef"},"name":"def","id":"def","kind":"param"}],"line":"60","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nDestroys this fixture. Before being called, this shape's proxy must be\ndestroyed. After being called, this fixture's shape is null.\n","name":"destroy","id":"destroy0()","line":"81","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"These support body activation/deactivation. ","name":"createProxy","id":"createProxy2()","children":[{"ref":{"refId":"box2d/BroadPhase","name":"BroadPhase"},"name":"broadPhase","id":"broadPhase","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xf","id":"xf","kind":"param"}],"line":"90","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Destroys this Fixture's proxy. ","name":"destroyProxy","id":"destroyProxy1()","children":[{"ref":{"refId":"box2d/BroadPhase","name":"BroadPhase"},"name":"broadPhase","id":"broadPhase","kind":"param"}],"line":"99","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"synchronize","id":"synchronize3()","children":[{"ref":{"refId":"box2d/BroadPhase","name":"BroadPhase"},"name":"broadPhase","id":"broadPhase","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"transformOne","id":"transformOne","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"transformTwo","id":"transformTwo","line":"112","kind":"param"}],"line":"111","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nGet the mass data for this fixture. The mass data is based on the density\nand the shape. The rotational inertia is about the shape's origin.\n","name":"getMassData","id":"getMassData1()","children":[{"ref":{"refId":"box2d/MassData","name":"MassData"},"name":"massData","id":"massData","kind":"param"}],"line":"139","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Get the type of the child shape. ","name":"type","id":"type","line":"144","kind":"property"},{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"isFinal":true,"name":"box","id":"box","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"density","id":"density","line":"25","kind":"variable"},{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"next","id":"next","line":"27","kind":"variable"},{"ref":{"refId":"box2d/Body","name":"Body"},"name":"body","id":"body","line":"29","kind":"variable"},{"ref":{"refId":"box2d/Shape","name":"Shape"},"name":"shape","id":"shape","line":"31","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"friction","id":"friction","line":"33","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"restitution","id":"restitution","line":"35","kind":"variable"},{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"proxy","id":"proxy","line":"37","kind":"variable"},{"ref":{"refId":"box2d/Filter","name":"Filter"},"isFinal":true,"name":"filter","id":"filter","line":"39","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isSensor","id":"isSensor","line":"41","kind":"variable"},{"name":"userData","id":"userData","line":"43","kind":"variable"},{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"isFinal":true,"name":"_poolOne","isPrivate":true,"id":"_poolOne","line":"45","kind":"variable"},{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"isFinal":true,"name":"_poolTwo","isPrivate":true,"id":"_poolTwo","line":"46","kind":"variable"},{"comment":"Constructs a new Fixture with default values. ","name":"Fixture","id":"Fixture0()","line":"49","kind":"constructor"}],"line":"22","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/filter.dart","name":"Filter","id":"Filter","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSets this filter equal to the given filter.\n","name":"setFrom","id":"setFrom1()","children":[{"ref":{"refId":"box2d/Filter","name":"Filter"},"name":"other","id":"other","kind":"param"}],"line":"56","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nCollision category bits.\n","name":"categoryBits","id":"categoryBits","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nCollision mask bits. These are the categories that this shape would accept\nfor collision.\n","name":"maskBits","id":"maskBits","line":"31","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nCollision groups allow a certain group of objects to never collide\n(negative) or always collide (positive). A groupIndex value of 0 means no\ncollision group.\n","name":"groupIndex","id":"groupIndex","line":"38","kind":"variable"},{"comment":"\nConstructs a new filter with everything set to 0.\n","name":"Filter","id":"Filter0()","line":"43","kind":"constructor"},{"comment":"\nConstructs a new Filter that is a copy of the other filter.\n","name":"Filter.copy","id":"Filter.copy1()","children":[{"ref":{"refId":"box2d/Filter","name":"Filter"},"name":"other","id":"other","kind":"param"}],"line":"48","kind":"constructor"}],"line":"21","kind":"class"},{"interfaces":[{"refId":"box2d/PairCallback","name":"PairCallback"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/contact_manager.dart","name":"ContactManager","id":"ContactManager","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nBroad-phase callback.\n","name":"addPair","id":"addPair2()","children":[{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fixtureA","id":"fixtureA","kind":"param"},{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fixtureB","id":"fixtureB","kind":"param"}],"line":"39","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"findNewContacts","id":"findNewContacts0()","line":"122","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"destroy","id":"destroy1()","children":[{"ref":{"refId":"box2d/Contact","name":"Contact"},"name":"c","id":"c","kind":"param"}],"line":"124","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nThis is the top level collision call for the time step. Here\nall the narrow phase collision is processed for the world\ncontact list.\n","name":"collide","id":"collide0()","line":"174","kind":"method"},{"ref":{"refId":"box2d/BroadPhase","name":"BroadPhase"},"name":"broadPhase","id":"broadPhase","line":"20","kind":"variable"},{"ref":{"refId":"box2d/Contact","name":"Contact"},"name":"contactList","id":"contactList","line":"21","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"contactCount","id":"contactCount","line":"22","kind":"variable"},{"ref":{"refId":"box2d/ContactFilter","name":"ContactFilter"},"name":"contactFilter","id":"contactFilter","line":"23","kind":"variable"},{"ref":{"refId":"box2d/ContactListener","name":"ContactListener"},"name":"contactListener","id":"contactListener","line":"24","kind":"variable"},{"ref":{"refId":"box2d/World","name":"World"},"isFinal":true,"name":"pool","id":"pool","line":"26","kind":"variable"},{"name":"ContactManager","id":"ContactManager1()","children":[{"ref":{"refId":"box2d/World","name":"World"},"name":"argPool","id":"argPool","kind":"param"}],"line":"28","kind":"constructor"}],"line":"19","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/body_type.dart","name":"BodyType","id":"BodyType","children":[{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"STATIC","id":"STATIC","line":"32","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"KINEMATIC","id":"KINEMATIC","line":"33","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"DYNAMIC","id":"DYNAMIC","line":"34","kind":"variable"},{"name":"BodyType","id":"BodyType0()","line":"30","kind":"constructor"}],"line":"29","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/body_def.dart","name":"BodyDef","id":"BodyDef","children":[{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nThe body type: static, kinematic, or dynamic.\nNote: if a dynamic body would have zero mass, the mass is set to one.\n","name":"type","id":"type","line":"27","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"\nThe world angle of the body in radians.\n","name":"angle","id":"angle","line":"32","kind":"variable"},{"comment":"User can store whatever they wish in here. ","name":"userData","id":"userData","line":"35","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"comment":"The world position of the body. ","name":"position","id":"position","line":"38","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"comment":"Linear velocity of the body in world coordinates. ","name":"linearVelocity","id":"linearVelocity","line":"41","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"Angular velocity of the body. ","name":"angularVelocity","id":"angularVelocity","line":"44","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIf true, the body will be allowed to rotate. Otherwise, its rotation will\nbe fixed.\n","name":"fixedRotation","id":"fixedRotation","line":"50","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"If true, this body is initially sleeping. ","name":"isSleeping","id":"isSleeping","line":"53","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nIs this a fast moving body that should be prevented from tunneling\nthrough other moving bodies? Note that all bodies are prevented from\ntunneling through kinematic and static bodies. This setting is only\nconsidered on dynamic bodies.\n\nYou should use this flag sparingly since it increases processing time.\n","name":"bullet","id":"bullet","line":"63","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Set to false to prevent a body from ever falling asleep. ","name":"allowSleep","id":"allowSleep","line":"66","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"\nLinear damping is used to reduce the linear velocity. The damping\nparameter can be larger than 1.0 but the damping effect becomes\nsensitive to the time step when the damping parameter is large.\n","name":"linearDamping","id":"linearDamping","line":"73","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"\nAngular damping is used to reduce the angular velocity. The\ndamping parameter can be larger than 1.0 but the damping effect\nbecomes sensitive to time step when the damping parameter is large.\n","name":"angularDamping","id":"angularDamping","line":"80","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Is this body initially awake or asleep? ","name":"awake","id":"awake","line":"83","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"If true, this body starts out active. ","name":"active","id":"active","line":"86","kind":"variable"},{"comment":"\nConstructs a new BodyDef with default values.\n","name":"BodyDef","id":"BodyDef0()","line":"91","kind":"constructor"}],"line":"22","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/dynamics/body.dart","name":"Body","id":"Body","children":[{"returnType":{"refId":"box2d/Fixture","name":"Fixture"},"comment":"\nCreates a fixture and attach it to this body. Use this function if you need\nto set some fixture parameters, like friction. Otherwise you can create the\nfixture directly from a shape.\nIf the density is non-zero, this function automatically updates the mass\nof the body.\nContacts are not created until the next time step.\n","name":"createFixture","id":"createFixture1()","children":[{"ref":{"refId":"box2d/FixtureDef","name":"FixtureDef"},"name":"def","id":"def","kind":"param"}],"line":"180","kind":"method"},{"returnType":{"refId":"box2d/Fixture","name":"Fixture"},"comment":"\nCreates a fixture from a shape and attach it to this body.\nThis is a convenience function. Use FixtureDef if you need to set\nparameters like friction, restitution, user data, or filtering.\nIf the density is non-zero, this function automatically updates the mass\nof the body.\n","name":"createFixtureFromShape","id":"createFixtureFromShape2()","children":[{"ref":{"refId":"box2d/Shape","name":"Shape"},"name":"shape","id":"shape","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"isOptional":true,"defaultValue":"0","name":"density","id":"density","kind":"param"}],"line":"216","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nDestroy a fixture. This removes the fixture from the broad-phase and\ndestroys all contacts associated with this fixture. This will\nautomatically adjust the mass of the body if the body is dynamic and the\nfixture has positive density.\nAll fixtures attached to a body are implicitly destroyed when the body is\ndestroyed.\n","name":"destroyFixture","id":"destroyFixture1()","children":[{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fixture","id":"fixture","kind":"param"}],"line":"231","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSet the position of the body's origin and rotation.\nThis breaks any contacts and wakes the other bodies.\nManipulating a body's transform may cause non-physical behavior.\n","name":"setTransform","id":"setTransform2()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argPosition","id":"argPosition","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"argAngle","id":"argAngle","kind":"param"}],"line":"303","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"linearVelocity=","id":"linearVelocity=1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"v","id":"v","kind":"param"}],"line":"340","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"angularVelocity=","id":"angularVelocity=1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"w","id":"w","kind":"param"}],"line":"354","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nApply a force at a world point. If the force is not\napplied at the center of mass, it will generate a torque and\naffect the angular velocity. This wakes up the body.\n\nforce\n  the world force vector, usually in Newtons (N).\npoint\n  the world position of the point of application.\n","name":"applyForce","id":"applyForce2()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"force","id":"force","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"point","id":"point","kind":"param"}],"line":"376","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nApply a torque. This affects the angular velocity\nwithout affecting the linear velocity of the center of mass.\nThis wakes up the body.\n\ntorque\n  about the z-axis (out of the screen), usually in N-m.\n","name":"applyTorque","id":"applyTorque1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"torque","id":"torque","kind":"param"}],"line":"398","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nApply an impulse at a point. This immediately modifies the velocity.\nIt also modifies the angular velocity if the point of application\nis not at the center of mass. This wakes up the body.\n\nimpulse\n  the world impulse vector, usually in N-seconds or kg-m/s.\npoint\n  the world position of the point of application.\n","name":"applyLinearImpulse","id":"applyLinearImpulse2()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"impulse","id":"impulse","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"point","id":"point","kind":"param"}],"line":"418","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nApply an angular impulse.\n\nimpulse\n  the angular impulse in units of kg*m*m/s\n","name":"applyAngularImpulse","id":"applyAngularImpulse1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"impulse","id":"impulse","kind":"param"}],"line":"438","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nGet the mass data of the body. The rotational inertia is relative\nto the center of mass. Result is returned through the given out parameter\ndata.\n","name":"getMassData","id":"getMassData1()","children":[{"ref":{"refId":"box2d/MassData","name":"MassData"},"name":"data","id":"data","kind":"param"}],"line":"462","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSet the mass properties to override the mass properties of the fixtures.\nNote that this changes the center of mass position.\nNote that creating or destroying fixtures can also alter the mass.\nThis function has no effect if the body isn't dynamic.\n\ndata\n  the mass properties.\n","name":"massData=","id":"massData=1()","children":[{"ref":{"refId":"box2d/MassData","name":"MassData"},"name":"data","id":"data","kind":"param"}],"line":"479","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nThis resets the mass properties to the sum of the mass properties of the\nfixtures.\nThis normally does not need to be called unless you called setMassData to\noverride the mass and you later want to reset the mass.\n","name":"resetMassData","id":"resetMassData0()","line":"523","kind":"method"},{"returnType":{"refId":"vector_math/vec2","name":"vec2"},"comment":"\nGet the world coordinates of a point given the local coordinates.\n\nlocalPoint\n  a point on the body measured relative the the body's origin.\nreturns the same point expressed in world coordinates.\n","name":"getWorldPoint","id":"getWorldPoint1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"localPoint","id":"localPoint","kind":"param"}],"line":"593","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nGet the world coordinates of a point given the local coordinates to the\ngiven out parameter.\n","name":"getWorldPointToOut","id":"getWorldPointToOut2()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"localPoint","id":"localPoint","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"out","id":"out","kind":"param"}],"line":"603","kind":"method"},{"returnType":{"refId":"vector_math/vec2","name":"vec2"},"comment":"\nGet the world coordinates of a vector given the local coordinates.\n\nlocalVector: a vector fixed in the body.\nreturn the same vector expressed in world coordinates.\n","name":"getWorldVector","id":"getWorldVector1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"localVector","id":"localVector","kind":"param"}],"line":"613","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nGet the world coordinates of a vector given the local coordinates to the\ngiven out paramater.\n","name":"getWorldVectorToOut","id":"getWorldVectorToOut2()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"localVector","id":"localVector","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"out","id":"out","kind":"param"}],"line":"623","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nGets a local point relative to the body's origin given a world point.\nReturns this through the given out parameter.\n","name":"getLocalPointToOut","id":"getLocalPointToOut2()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"worldPoint","id":"worldPoint","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"out","id":"out","kind":"param"}],"line":"631","kind":"method"},{"returnType":{"refId":"vector_math/vec2","name":"vec2"},"comment":"\nGets a local point relative to the body's origin given a world point.\n\nworldPoint: point in world coordinates.\nreturns the corresponding local point relative to the body's origin.\n","name":"getLocalPoint","id":"getLocalPoint1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"worldPoint","id":"worldPoint","kind":"param"}],"line":"641","kind":"method"},{"returnType":{"refId":"vector_math/vec2","name":"vec2"},"comment":"\nGets a local vector given a world vector.\n\nworldVector: vector in world coordinates.\nreturns the corresponding local vector.\n","name":"getLocalVector","id":"getLocalVector1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"worldVector","id":"worldVector","kind":"param"}],"line":"653","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nGets a local vector given a world vector and stores the result in the given\nout parameter.\n","name":"getLocalVectorToOut","id":"getLocalVectorToOut2()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"worldVector","id":"worldVector","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"out","id":"out","kind":"param"}],"line":"663","kind":"method"},{"returnType":{"refId":"vector_math/vec2","name":"vec2"},"comment":"\nGet the world linear velocity of a world point attached to this body.\n\nworldPoint: point in world coordinates.\nreturns the world velocity of a point.\n","name":"getLinearVelocityFromWorldPoint","id":"getLinearVelocityFromWorldPoint1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"worldPoint","id":"worldPoint","kind":"param"}],"line":"673","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"getLinearVelocityFromWorldPointToOut","id":"getLinearVelocityFromWorldPointToOut2()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"worldPoint","id":"worldPoint","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"out","id":"out","kind":"param"}],"line":"679","kind":"method"},{"returnType":{"refId":"vector_math/vec2","name":"vec2"},"comment":"\nGet the world velocity of a local point.\n\nlocalPoint: point in local coordinates.\nreturns the world velocity of a point.\n","name":"getLinearVelocityFromLocalPoint","id":"getLinearVelocityFromLocalPoint1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"localPoint","id":"localPoint","kind":"param"}],"line":"691","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nGet the world velocity of a local point and store the result in the given\nout parameter.\n","name":"getLinearVelocityFromLocalPointToOut","id":"getLinearVelocityFromLocalPointToOut2()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"localPoint","id":"localPoint","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"out","id":"out","kind":"param"}],"line":"701","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nThe type of this body. This may alter the mass and velocity.\n","name":"type=","id":"type=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"otherType","id":"otherType","kind":"param"}],"line":"714","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nShould this body be treated like a bullet for continuous collision\ndetection?\n","name":"bullet=","id":"bullet=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"flag","id":"flag","kind":"param"}],"line":"746","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nYou can disable sleeping on this body. If you disable sleeping, the\nbody will be woken.\n","name":"sleepingAllowed=","id":"sleepingAllowed=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"flag","id":"flag","kind":"param"}],"line":"757","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nThe sleep state of the body. A sleeping body has very\nlow CPU cost.\n","name":"awake=","id":"awake=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"flag","id":"flag","kind":"param"}],"line":"773","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSet the active state of the body. An inactive body is not\nsimulated and cannot be collided with or woken up.\nIf you pass a flag of true, all fixtures will be added to the\nbroad-phase.\nIf you pass a flag of false, all fixtures will be removed from\nthe broad-phase and all contacts will be destroyed.\nFixtures and joints are otherwise unaffected. You may continue\nto create/destroy fixtures and joints on inactive bodies.\nFixtures on an inactive body are implicitly inactive and will\nnot participate in collisions, ray-casts, or queries.\nJoints connected to an inactive body are implicitly inactive.\nAn inactive body is still owned by a World object and remains\nin the body list.\n","name":"active=","id":"active=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"flag","id":"flag","kind":"param"}],"line":"806","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"comment":"\nSet this body to have fixed rotation. This causes the mass\nto be reset.\n","name":"fixedRotation=","id":"fixedRotation=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"flag","id":"flag","kind":"param"}],"line":"850","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"synchronizeFixtures","id":"synchronizeFixtures0()","line":"866","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"synchronizeTransform","id":"synchronizeTransform0()","line":"877","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nThis is used to prevent connected bodies from colliding.\nIt may lie, depending on the collideConnected flag.\n","name":"shouldCollide","id":"shouldCollide1()","children":[{"ref":{"refId":"box2d/Body","name":"Body"},"name":"other","id":"other","kind":"param"}],"line":"893","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"advance","id":"advance1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"t","id":"t","kind":"param"}],"line":"898","kind":"method"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"comment":"Get the world body origin position. Do not modify. ","name":"position","id":"position","line":"327","kind":"property"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"Get the angle in radians. ","name":"angle","id":"angle","line":"330","kind":"property"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"comment":"Get the world position of the center of mass. Do not modify. ","name":"worldCenter","id":"worldCenter","line":"333","kind":"property"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"comment":"Get the local position of the center of mass. Do not modify. ","name":"localCenter","id":"localCenter","line":"336","kind":"property"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"linearVelocity","id":"linearVelocity","line":"338","kind":"property"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"angularVelocity","id":"angularVelocity","line":"352","kind":"property"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"\nGet the central rotational inertia of the body.\n\nreturns the rotational inertia, usually in kg-m^2.\n","name":"inertia","id":"inertia","line":"452","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nThe type of this body. Either dynamic, static, or kinematic.\n","name":"type","id":"type","line":"709","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Is this body treated like a bullet for continuous collision detection? ","name":"bullet","id":"bullet","line":"740","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Is this body allowed to sleep? ","name":"sleepingAllowed","id":"sleepingAllowed","line":"767","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"awake","id":"awake","line":"789","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nGet the active state of the body.\n","name":"active","id":"active","line":"844","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nDoes this body have fixed rotation?\n","name":"fixedRotation","id":"fixedRotation","line":"862","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Flags for different states the body can take on. ","name":"ISLAND_FLAG","id":"ISLAND_FLAG","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"AWAKE_FLAG","id":"AWAKE_FLAG","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"AUTO_SLEEP_FLAG","id":"AUTO_SLEEP_FLAG","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"BULLET_FLAG","id":"BULLET_FLAG","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"FIXED_ROTATION_FLAG","id":"FIXED_ROTATION_FLAG","line":"27","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"ACTIVE_FLAG","id":"ACTIVE_FLAG","line":"28","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"TO_I_FLAG","id":"TO_I_FLAG","line":"29","kind":"variable"},{"ref":{"refId":"box2d/World","name":"World"},"name":"world","id":"world","line":"31","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"flags","id":"flags","line":"33","kind":"variable"},{"ref":{"refId":"box2d/ContactEdge","name":"ContactEdge"},"name":"contactList","id":"contactList","line":"35","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"sleepTime","id":"sleepTime","line":"37","kind":"variable"},{"comment":"User can store what they want in here. ","name":"userData","id":"userData","line":"40","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"The linear velocity of this body. ","name":"_linearVelocity","isPrivate":true,"id":"_linearVelocity","line":"43","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"The angular velocity of this body. ","name":"_angularVelocity","isPrivate":true,"id":"_angularVelocity","line":"46","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"This body's mass. ","name":"mass","id":"mass","line":"49","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"The inverse of the body mass. ","name":"invMass","id":"invMass","line":"52","kind":"variable"},{"ref":{"refId":"box2d/Body","name":"Body"},"comment":"For mantaining the linked list of bodies. ","name":"next","id":"next","line":"55","kind":"variable"},{"ref":{"refId":"box2d/Body","name":"Body"},"name":"prev","id":"prev","line":"56","kind":"variable"},{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fixtureList","id":"fixtureList","line":"58","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"fixtureCount","id":"fixtureCount","line":"59","kind":"variable"},{"ref":{"refId":"box2d/JointEdge","name":"JointEdge"},"name":"jointList","id":"jointList","line":"61","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"Forces applied on the body. ","name":"_force","isPrivate":true,"id":"_force","line":"64","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"_torque","isPrivate":true,"id":"_torque","line":"66","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"Rotational intertia about the center of mass. ","name":"_inertia","isPrivate":true,"id":"_inertia","line":"69","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"The inverse of the intertia about the center of mass. ","name":"invInertia","id":"invInertia","line":"72","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"linearDamping","id":"linearDamping","line":"74","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"angularDamping","id":"angularDamping","line":"76","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"This body's type. See BodyType.dart. ","name":"_type","isPrivate":true,"id":"_type","line":"79","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"islandIndex","id":"islandIndex","line":"81","kind":"variable"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"isFinal":true,"comment":"The body origin transform. ","name":"originTransform","id":"originTransform","line":"84","kind":"variable"},{"ref":{"refId":"box2d/Sweep","name":"Sweep"},"isFinal":true,"comment":"The swept motion for CCD. ","name":"sweep","id":"sweep","line":"87","kind":"variable"},{"ref":{"refId":"box2d/FixtureDef","name":"FixtureDef"},"comment":"Private pool of objects for internal use. ","name":"_fixDef","isPrivate":true,"id":"_fixDef","line":"90","kind":"variable"},{"ref":{"refId":"box2d/MassData","name":"MassData"},"name":"_pmd","isPrivate":true,"id":"_pmd","line":"91","kind":"variable"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"_pxf","isPrivate":true,"id":"_pxf","line":"92","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"oldCenter","id":"oldCenter","line":"93","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"tempCenter","id":"tempCenter","line":"94","kind":"variable"},{"name":"Body","id":"Body2()","children":[{"ref":{"refId":"box2d/BodyDef","name":"BodyDef"},"name":"bd","id":"bd","kind":"param"},{"initializedField":{"refId":"box2d/Body/world","name":"world"},"ref":{"refId":"box2d/World","name":"World"},"name":"world","id":"world","kind":"param"}],"line":"96","kind":"constructor"}],"line":"21","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/common/viewport_transform.dart","name":"ViewportTransform","id":"ViewportTransform","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the transform's center to the given x and y coordinates,\nand using the given scale.\n","name":"setCamera","id":"setCamera3()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"y","id":"y","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"s","id":"s","kind":"param"}],"line":"55","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isSetter":true,"name":"translation=","id":"translation=1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"translation","id":"translation","kind":"param"}],"line":"67","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nTakes the world coordinate (argWorld) puts the corresponding\nscreen coordinate in argScreen.  It should be safe to give the\nsame object as both parameters.\n","name":"getWorldToScreen","id":"getWorldToScreen2()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argWorld","id":"argWorld","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argScreen","id":"argScreen","kind":"param"}],"line":"76","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nTakes the screen coordinates (argScreen) and puts the\ncorresponding world coordinates in argWorld. It should be safe\nto give the same object as both parameters.\n","name":"getScreenToWorld","id":"getScreenToWorld2()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argScreen","id":"argScreen","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argWorld","id":"argWorld","kind":"param"}],"line":"91","kind":"method"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"comment":"\nThe current translation is the difference in canvas units between the\nactual center of the canvas and the currently specified center. For\nexample, if the actual canvas center is (5, 5) but the current center is\n(6, 6), the translation is (1, 1).\n","name":"translation","id":"translation","line":"66","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nif we flip the y axis when transforming.\n","name":"yFlip","id":"yFlip","line":"31","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"comment":"\nThis is the half-width and half-height.\nThis should be the actual half-width and \nhalf-height, not anything transformed or scaled.\n","name":"extents","id":"extents","line":"38","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"\nReturns the scaling factor used in converting from world sizes to rendering\nsizes.\n","name":"scale","id":"scale","line":"44","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"comment":"\ncenter of the viewport.\n","name":"center","id":"center","line":"49","kind":"variable"},{"name":"ViewportTransform","id":"ViewportTransform3()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"e","id":"e","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"c","id":"c","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"s","id":"s","kind":"param"}],"line":"23","kind":"constructor"}],"line":"22","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/common/transform.dart","name":"Transform","id":"Transform","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"43","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets this transform with the given position and rotation.\n","name":"setFromPositionAndRotation","id":"setFromPositionAndRotation2()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argPosition","id":"argPosition","kind":"param"},{"ref":{"refId":"vector_math/mat2","name":"mat2"},"name":"argRotation","id":"argRotation","kind":"param"}],"line":"50","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets this transform equal to the given transform.\n","name":"setFrom","id":"setFrom1()","children":[{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"other","id":"other","kind":"param"}],"line":"58","kind":"method"},{"returnType":{"refId":"vector_math/vec2","name":"vec2"},"isStatic":true,"comment":"\nMultiply the given transform and given vector and return a new vec2 with\nthe result.\n","name":"mul","id":"mul2()","children":[{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"T","id":"T","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"v","id":"v","kind":"param"}],"line":"67","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"comment":"\nMultiplies the given transform and the given vector and places the result\nin the given out parameter.\n","name":"mulToOut","id":"mulToOut3()","children":[{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"transform","id":"transform","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"vector","id":"vector","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"out","id":"out","kind":"param"}],"line":"76","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isStatic":true,"name":"mulTransToOut","id":"mulTransToOut3()","children":[{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"T","id":"T","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"v","id":"v","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"out","id":"out","kind":"param"}],"line":"87","kind":"method"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"The translation caused by a transform. ","name":"position","id":"position","line":"24","kind":"variable"},{"ref":{"refId":"vector_math/mat2","name":"mat2"},"isFinal":true,"comment":"A matrix representing a rotation. ","name":"rotation","id":"rotation","line":"27","kind":"variable"},{"comment":"\nConstructs a new transform with a vector at the origin and no rotation.\n","name":"Transform","id":"Transform0()","line":"32","kind":"constructor"},{"comment":"\nConstructs a new transform equal to the given transform.\n","name":"Transform.copy","id":"Transform.copy1()","children":[{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"other","id":"other","kind":"param"}],"line":"39","kind":"constructor"}],"line":"22","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/common/sweep.dart","name":"Sweep","id":"Sweep","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nReturns true if given object is equal to this sweep. Two sweeps are equal\nif their fields are equal.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"54","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets this Sweep equal to the given Sweep.\n","name":"setFrom","id":"setFrom1()","children":[{"ref":{"refId":"box2d/Sweep","name":"Sweep"},"name":"other","id":"other","kind":"param"}],"line":"65","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"normalize","id":"normalize0()","line":"73","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nComputes the interpolated transform at a specific time.\nTime is the normalized time in [0,1].\n","name":"getTransform","id":"getTransform2()","children":[{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xf","id":"xf","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"alpha","id":"alpha","kind":"param"}],"line":"83","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdvances the sweep forward, resulting in a new initial state.\nTime is the new initial time.\n","name":"advance","id":"advance1()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"time","id":"time","kind":"param"}],"line":"101","kind":"method"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"Local center of mass position. ","name":"localCenter","id":"localCenter","line":"19","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"Center world positions. ","name":"centerZero","id":"centerZero","line":"22","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"center","id":"center","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"World angles. ","name":"angleZero","id":"angleZero","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"angle","id":"angle","line":"27","kind":"variable"},{"comment":"\nConstructs a new Sweep with centers initialized to the origin and angles\nset to zero.\n","name":"Sweep","id":"Sweep0()","line":"33","kind":"constructor"},{"comment":"\nConstructs a new sweep that is a copy of the given Sweep.\n","name":"Sweep.copy","id":"Sweep.copy1()","children":[{"ref":{"refId":"box2d/Sweep","name":"Sweep"},"name":"other","id":"other","kind":"param"}],"line":"43","kind":"constructor"}],"line":"17","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/common/settings.dart","name":"Settings","id":"Settings","children":[{"returnType":{"refId":"dart.core/num","name":"num"},"isStatic":true,"comment":"\nFriction mixing law.\n","name":"mixFriction","id":"mixFriction2()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"friction1","id":"friction1","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"friction2","id":"friction2","kind":"param"}],"line":"135","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"isStatic":true,"comment":"\nRestitution mixing law.\n","name":"mixRestitution","id":"mixRestitution2()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"restitution1","id":"restitution1","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"restitution2","id":"restitution2","kind":"param"}],"line":"142","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"Size that pool stacks are initialized to. ","name":"CONTACT_STACK_INIT_SIZE","id":"CONTACT_STACK_INIT_SIZE","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isStatic":true,"comment":"A \"close to Zero\" num epsilon value for use ","name":"EPSILON","id":"EPSILON","line":"27","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nMaximum number of contacts to be handled to solve a TimeOfImpact island.\n","name":"MAX_TIME_OF_IMPACT_CONTACTS","id":"MAX_TIME_OF_IMPACT_CONTACTS","line":"32","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isStatic":true,"comment":"\nA body cannot sleep if its linear velocity is above this tolerance.\n","name":"LINEAR_SLEEP_TOLERANCE","id":"LINEAR_SLEEP_TOLERANCE","line":"37","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isStatic":true,"comment":"\nThe maximum linear position correction used when solving constraints.\nThis helps to prevent overshoot.\n","name":"MAX_LINEAR_CORRECTION","id":"MAX_LINEAR_CORRECTION","line":"43","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isStatic":true,"comment":"\nA body cannot sleep if its angular velocity is above this tolerance.\n","name":"ANGULAR_SLEEP_TOLERANCE","id":"ANGULAR_SLEEP_TOLERANCE","line":"48","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"TIME_TO_SLEEP","id":"TIME_TO_SLEEP","line":"50","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"TREE_REBALANCE_STEPS","id":"TREE_REBALANCE_STEPS","line":"52","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"MAX_INTEGER","id":"MAX_INTEGER","line":"54","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"SMALL_NUMBER","id":"SMALL_NUMBER","line":"56","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"BIG_NUMBER","id":"BIG_NUMBER","line":"57","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isStatic":true,"comment":"\nA small length used as a collision and constant tolerance. Usually it\nis chosen to be numerically significant, but visually insignificant.\n","name":"LINEAR_SLOP","id":"LINEAR_SLOP","line":"63","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isStatic":true,"comment":"\nThe radius of the polygon/edge shape skin. This should not be modified.\nMaking this smaller means polygons will have and insufficient for\ncontinuous collision. Making it larger may create artifacts for vertex\ncollision.\n","name":"POLYGON_RADIUS","id":"POLYGON_RADIUS","line":"71","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"VELOCITY_THRESHOLD","id":"VELOCITY_THRESHOLD","line":"73","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isStatic":true,"comment":"\nFattens bounding boxes in the dynamic tree by this amount. Allows proxies\nto move by small amounts without needing to adjust the tree. This value is\nin meters.\n","name":"BOUNDING_BOX_EXTENSION","id":"BOUNDING_BOX_EXTENSION","line":"80","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isStatic":true,"comment":"\nThis is used to fatten AABBs in the dynamic tree. This is used to predict\nthe future position based on the current displacement.\nThis is a dimensionless multiplier.\n","name":"BOUNDING_BOX_MULTIPLIER","id":"BOUNDING_BOX_MULTIPLIER","line":"87","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isStatic":true,"comment":"\nThis scale factor controls how fast overlap is resolved. Ideally this\nwould be 1 so that overlap is removed in one time step. However using\nvalues close to 1 often lead to overshoot.\n","name":"CONTACT_BAUMGARTE","id":"CONTACT_BAUMGARTE","line":"94","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isStatic":true,"comment":"\nThe maximum linear velocity of a body. This limit is very large and is\nused to prevent numerical problems. You shouldn't need to adjust this.\n","name":"MAX_TRANSLATION","id":"MAX_TRANSLATION","line":"100","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"MAX_TRANSLATION_SQUARED","id":"MAX_TRANSLATION_SQUARED","line":"101","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isStatic":true,"comment":"\nThe maximum angular velocity of a body. This limit is very large and is\nused to prevent numerical problems. You shouldn't need to adjust this.\n","name":"MAX_ROTATION","id":"MAX_ROTATION","line":"107","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isStatic":true,"name":"MAX_ROTATION_SQUARED","id":"MAX_ROTATION_SQUARED","line":"108","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nThe maximum number of contact points between two convex shapes.\n","name":"MAX_MANIFOLD_POINTS","id":"MAX_MANIFOLD_POINTS","line":"113","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isStatic":true,"comment":"\nA small angle used as a collision and constraint tolerance. Usually it is\nchosen to be numerically significant, but visually insignificant.\n","name":"ANGULAR_SLOP","id":"ANGULAR_SLOP","line":"119","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"isStatic":true,"comment":"\nThe maximum angular position correction used when solving constraints.\nThis helps to prevent overshoot.\n","name":"MAX_ANGULAR_CORRECTION","id":"MAX_ANGULAR_CORRECTION","line":"125","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nThe maximum number of vertices on a convex polygon.\n","name":"MAX_POLYGON_VERTICES","id":"MAX_POLYGON_VERTICES","line":"130","kind":"variable"}],"line":"22","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/common/math_box.dart","name":"MathBox","id":"MathBox","children":[{"returnType":{"refId":"dart.core/num","name":"num"},"isStatic":true,"comment":"\nGiven a value within the range specified by [fromMin] and [fromMax],\nreturns a value with the same relative position in the range specified\nfrom [toMin] and [toMax]. For example, given a [val] of 2 in the\n\"from range\" of 0-4, and a \"to range\" of 10-20, would return 15.\n","name":"translateAndScale","id":"translateAndScale5()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"val","id":"val","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"fromMin","id":"fromMin","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"fromMax","id":"fromMax","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"toMin","id":"toMin","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"toMax","id":"toMax","line":"29","kind":"param"}],"line":"28","kind":"method"},{"returnType":{"refId":"vector_math/vec3","name":"vec3"},"isStatic":true,"comment":"Solve [matrix]x = [b] without calculating the inverse of [matrix].\n [matrix] must be a 3x3 matrix and [b] must be a vec3. ","name":"solve33","id":"solve332()","children":[{"ref":{"refId":"vector_math/mat3","name":"mat3"},"name":"matrix","id":"matrix","kind":"param"},{"ref":{"refId":"vector_math/vec3","name":"vec3"},"name":"b","id":"b","kind":"param"}],"line":"37","kind":"method"},{"returnType":{"refId":"vector_math/vec2","name":"vec2"},"isStatic":true,"comment":"Solve [matrix]x = [b] without calculating the inverse of [matrix].\n [matrix] must be a 2x2 or 3x3 matrix, and in the latter case the top-left\n 2x2 elements will be used. [b] must be a vec2. ","name":"solve22","id":"solve222()","children":[{"name":"matrix","id":"matrix","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"b","id":"b","kind":"param"}],"line":"55","kind":"method"},{"ref":{"refId":"dart.core/double","name":"double"},"isStatic":true,"name":"TWO_PI","id":"TWO_PI","line":"18","kind":"variable"},{"name":"MathBox","id":"MathBox0()","line":"20","kind":"constructor"}],"line":"17","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/common/color3.dart","name":"Color3","id":"Color3","children":[{"returnType":{"refId":"void","name":"void"},"name":"setFromRGB","id":"setFromRGB3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"r","id":"r","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"g","id":"g","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"b","id":"b","kind":"param"}],"line":"33","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setFromRGBF","id":"setFromRGBF3()","children":[{"ref":{"refId":"dart.core/double","name":"double"},"name":"r","id":"r","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"g","id":"g","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"b","id":"b","kind":"param"}],"line":"37","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"setFromColor3","id":"setFromColor31()","children":[{"ref":{"refId":"box2d/Color3","name":"Color3"},"name":"color","id":"color","kind":"param"}],"line":"43","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"49","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"x","id":"x","line":"20","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"y","id":"y","line":"21","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"z","id":"z","line":"22","kind":"variable"},{"name":"Color3","id":"Color30()","line":"24","kind":"constructor"},{"name":"Color3.fromRGB","id":"Color3.fromRGB3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"r","id":"r","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"g","id":"g","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"b","id":"b","kind":"param"}],"line":"25","kind":"constructor"},{"name":"Color3.fromRGBF","id":"Color3.fromRGBF3()","children":[{"ref":{"refId":"dart.core/double","name":"double"},"name":"r","id":"r","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"g","id":"g","kind":"param"},{"ref":{"refId":"dart.core/double","name":"double"},"name":"b","id":"b","kind":"param"}],"line":"26","kind":"constructor"},{"name":"Color3.fromColor3","id":"Color3.fromColor31()","children":[{"ref":{"refId":"box2d/Color3","name":"Color3"},"name":"color","id":"color","kind":"param"}],"line":"30","kind":"constructor"}],"line":"19","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/shapes/shape_type.dart","name":"ShapeType","id":"ShapeType","children":[{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"TYPE_COUNT","id":"TYPE_COUNT","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UNKNOWN","id":"UNKNOWN","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CIRCLE","id":"CIRCLE","line":"27","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"POLYGON","id":"POLYGON","line":"28","kind":"variable"}],"line":"22","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/shapes/shape.dart","name":"Shape","id":"Shape","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nTest a point for containment in this shape. This only works for convex\nshapes.\ntransform:  the shape world transform.\npoint: a point in world coordinates.\n","name":"testPoint","id":"testPoint2()","children":[{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"transform","id":"transform","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"point","id":"point","kind":"param"}],"line":"43","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nComputes the associated axis aligned bounding box for a child shape\ngiven a transform. Returns through the given out paramater.\n","name":"computeAxisAlignedBox","id":"computeAxisAlignedBox2()","children":[{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"name":"box","id":"box","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"transform","id":"transform","kind":"param"}],"line":"49","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nComputes (and returns through the given out parameter massData) the mass\nproperties of this shape using its dimensions and the\ngiven density. The inertia tensor is computed about the local origin.\n","name":"computeMass","id":"computeMass2()","children":[{"ref":{"refId":"box2d/MassData","name":"MassData"},"name":"massData","id":"massData","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"density","id":"density","kind":"param"}],"line":"56","kind":"method"},{"returnType":{"refId":"box2d/Shape","name":"Shape"},"comment":"Returns a clone of this shape. ","name":"clone","id":"clone0()","line":"59","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The type of shape. Either circle or polygon. ","name":"type","id":"type","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"Shape radius. ","name":"radius","id":"radius","line":"28","kind":"variable"},{"comment":"\nConstructs a new shape of unknown type.\n","name":"Shape","id":"Shape2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"defaultValue":"ShapeType.UNKNOWN","name":"type","id":"type","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"isOptional":true,"defaultValue":"0","name":"radius","id":"radius","kind":"param"}],"line":"33","kind":"constructor"}],"line":"23","kind":"class"},{"superclass":{"refId":"box2d/Shape","name":"Shape"},"uri":"package:box2d/src/collision/shapes/polygon_shape.dart","name":"PolygonShape","id":"PolygonShape","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGet the supporting vertex index in the given direction.\n","name":"getSupport","id":"getSupport1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"d","id":"d","kind":"param"}],"line":"74","kind":"method"},{"returnType":{"refId":"box2d/Shape","name":"Shape"},"name":"clone","id":"clone0()","line":"87","kind":"method"},{"returnType":{"refId":"vector_math/vec2","name":"vec2"},"comment":"\nGet the supporting vertex in the given direction.\n","name":"getSupportVertex","id":"getSupportVertex1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"d","id":"d","kind":"param"}],"line":"92","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCopy vertices. This assumes the vertices define a convex polygon.\nIt is assumed that the exterior is the the right of each edge.\nTODO(dominich): Consider removing [count].\n","name":"setFrom","id":"setFrom2()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"vector_math/vec2","name":"vec2"}],"name":"List"},"name":"otherVertices","id":"otherVertices","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"count","id":"count","kind":"param"}],"line":"99","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nBuild vertices to represent an axis-aligned box.\nhx is the half-width of the body and hy is the half height.\n","name":"setAsBox","id":"setAsBox2()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"hx","id":"hx","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"hy","id":"hy","kind":"param"}],"line":"130","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nBuild vertices to represent an oriented box. hx is the halfwidth, hy the\nhalf-height, center is the center of the box in local coordinates and angle\nis the rotation of the box in local coordinates.\n","name":"setAsBoxWithCenterAndAngle","id":"setAsBoxWithCenterAndAngle4()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"hx","id":"hx","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"hy","id":"hy","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"center","id":"center","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"angle","id":"angle","kind":"param"}],"line":"148","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Set this as a single edge. ","name":"setAsEdge","id":"setAsEdge2()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"v1","id":"v1","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"v2","id":"v2","kind":"param"}],"line":"164","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"See Shape.testPoint(Transform, vec2). ","name":"testPoint","id":"testPoint2()","children":[{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xf","id":"xf","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"p","id":"p","kind":"param"}],"line":"176","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSee Shape.computeAxisAlignedBox(AABB, Transform).\n","name":"computeAxisAlignedBox","id":"computeAxisAlignedBox2()","children":[{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"name":"argAabb","id":"argAabb","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"argXf","id":"argXf","kind":"param"}],"line":"194","kind":"method"},{"returnType":{"refId":"vector_math/vec2","name":"vec2"},"comment":"\nGet a vertex by index.\n","name":"getVertex","id":"getVertex1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"index","id":"index","kind":"param"}],"line":"217","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCompute the centroid and store the value in the given out parameter.\n","name":"computeCentroidToOut","id":"computeCentroidToOut3()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"vector_math/vec2","name":"vec2"}],"name":"List"},"name":"vs","id":"vs","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"count","id":"count","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"out","id":"out","kind":"param"}],"line":"222","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"See Shape.computeMass(MassData) ","name":"computeMass","id":"computeMass2()","children":[{"ref":{"refId":"box2d/MassData","name":"MassData"},"name":"massData","id":"massData","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"density","id":"density","kind":"param"}],"line":"264","kind":"method"},{"returnType":{"refId":"vector_math/vec2","name":"vec2"},"comment":"\nGet the centroid and apply the supplied transform.\n","name":"applyTransformToCentroid","id":"applyTransformToCentroid1()","children":[{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xf","id":"xf","kind":"param"}],"line":"360","kind":"method"},{"returnType":{"refId":"vector_math/vec2","name":"vec2"},"comment":"\nGet the centroid and apply the supplied transform. Return the result\nthrough the return parameter out.\n","name":"centroidToOut","id":"centroidToOut2()","children":[{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xf","id":"xf","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"out","id":"out","kind":"param"}],"line":"366","kind":"method"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"\nLocal position of the shape centroid in parent body frame.\n","name":"centroid","id":"centroid","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"vector_math/vec2","name":"vec2"}],"name":"List"},"isFinal":true,"comment":"\nThe vertices of the shape. Note: Use getVertexCount() rather than\nvertices.length to get the number of active vertices.\n","name":"vertices","id":"vertices","line":"32","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"vector_math/vec2","name":"vec2"}],"name":"List"},"isFinal":true,"comment":"\nThe normals of the shape. Note: Use getVertexCount() rather than\nnormals.length to get the number of active normals.\n","name":"normals","id":"normals","line":"38","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"vertexCount","id":"vertexCount","line":"40","kind":"variable"},{"comment":"\nConstructs a new PolygonShape.\n","name":"PolygonShape","id":"PolygonShape0()","line":"45","kind":"constructor"},{"comment":"\nConstructs a new PolygonShape equal to the given shape.\n","name":"PolygonShape.copy","id":"PolygonShape.copy1()","children":[{"ref":{"refId":"box2d/PolygonShape","name":"PolygonShape"},"name":"other","id":"other","kind":"param"}],"line":"57","kind":"constructor"}],"line":"22","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/shapes/mass_data.dart","name":"MassData","id":"MassData","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSets this mass data equal to the given mass data.\n","name":"setFrom","id":"setFrom1()","children":[{"ref":{"refId":"box2d/MassData","name":"MassData"},"name":"md","id":"md","kind":"param"}],"line":"48","kind":"method"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"The mass of the shape, usually in kilograms. ","name":"mass","id":"mass","line":"21","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"comment":"The position of the shape's centroid relative to the shape's origin. ","name":"center","id":"center","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"The rotational inertia of the shape about the local origin. ","name":"inertia","id":"inertia","line":"27","kind":"variable"},{"comment":"\nConstructs a blank mass data.\n","name":"MassData","id":"MassData0()","line":"32","kind":"constructor"},{"comment":"\nCopies from the given mass data.\n","name":"MassData.copy","id":"MassData.copy1()","children":[{"ref":{"refId":"box2d/MassData","name":"MassData"},"name":"md","id":"md","kind":"param"}],"line":"40","kind":"constructor"}],"line":"19","kind":"class"},{"superclass":{"refId":"box2d/Shape","name":"Shape"},"uri":"package:box2d/src/collision/shapes/circle_shape.dart","name":"CircleShape","id":"CircleShape","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if the point is contained in the given shape when the given\nrotation transform is applied. Implements superclass abstract method of\nthe same name.\n","name":"testPoint","id":"testPoint2()","children":[{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"transform","id":"transform","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"point","id":"point","kind":"param"}],"line":"48","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCompute the axis aligned box for this Shape when the given transform is\napplied. Stores the result in the given box.\n","name":"computeAxisAlignedBox","id":"computeAxisAlignedBox2()","children":[{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"name":"argBox","id":"argBox","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"argTransform","id":"argTransform","kind":"param"}],"line":"61","kind":"method"},{"returnType":{"refId":"box2d/Shape","name":"Shape"},"comment":"Returns a clone of this circle. ","name":"clone","id":"clone0()","line":"71","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nComputes the mass properties of this Circle at the given density and stores\nthe result in the given MassData object.\n","name":"computeMass","id":"computeMass2()","children":[{"ref":{"refId":"box2d/MassData","name":"MassData"},"name":"massData","id":"massData","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"density","id":"density","kind":"param"}],"line":"77","kind":"method"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"\nThe current position of the center of this circle.\n","name":"position","id":"position","line":"25","kind":"variable"},{"comment":"\nA constructor for internal use only. Instead use Body.createShape with a\nCircleDef.\n","name":"CircleShape","id":"CircleShape0()","line":"31","kind":"constructor"},{"comment":"\nConstructs a new CircleShape equal to the given CircleShape.\n","name":"CircleShape.copy","id":"CircleShape.copy1()","children":[{"ref":{"refId":"box2d/CircleShape","name":"CircleShape"},"name":"other","id":"other","kind":"param"}],"line":"38","kind":"constructor"}],"line":"21","kind":"class"},{"interfaces":[{"refId":"dart.core/Comparable","name":"Comparable"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/broadphase/pair.dart","name":"Pair","id":"Pair","children":[{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nCompares this pair to the other pair. Returns a negative number if this\npair is less, 0 if the pairs are equal, and a positive number if this pair\nis greater. Compared first on which proxyA is less and, in the case of a\ntie, on which proxyB is less.\n","name":"compareTo","id":"compareTo1()","children":[{"ref":{"refId":"box2d/Pair","name":"Pair"},"name":"pair2","id":"pair2","kind":"param"}],"line":"36","kind":"method"},{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"proxyA","id":"proxyA","line":"22","kind":"variable"},{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"proxyB","id":"proxyB","line":"23","kind":"variable"},{"comment":"\nConstructs a new pair.\n","name":"Pair","id":"Pair0()","line":"28","kind":"constructor"}],"line":"21","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/broadphase/dynamic_tree_node.dart","name":"DynamicTreeNode","id":"DynamicTreeNode","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"47","kind":"method"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Returns true if this node is a leaf. ","name":"isLeaf","id":"isLeaf","line":"45","kind":"property"},{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"name":"box","id":"box","line":"20","kind":"variable"},{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"parent","id":"parent","line":"22","kind":"variable"},{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"next","id":"next","line":"24","kind":"variable"},{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"childOne","id":"childOne","line":"26","kind":"variable"},{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"childTwo","id":"childTwo","line":"28","kind":"variable"},{"comment":"Can contain whatever is useful to the user. ","name":"userData","id":"userData","line":"31","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Used for sorting. ","name":"key","id":"key","line":"34","kind":"variable"},{"comment":"Should never be constructed outside the engine. ","name":"DynamicTreeNode._construct","isPrivate":true,"id":"DynamicTreeNode._construct0()","line":"37","kind":"constructor"}],"line":"19","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/broadphase/dynamic_tree.dart","name":"DynamicTree","id":"DynamicTree","children":[{"returnType":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"comment":"\nCreate a proxy. Provides a tight fitting axis aligned box\nand a userData pointer.\n","name":"createProxy","id":"createProxy2()","children":[{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"name":"box","id":"box","kind":"param"},{"name":"userData","id":"userData","kind":"param"}],"line":"78","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Destroys the given proxy. ","name":"destroyProxy","id":"destroyProxy1()","children":[{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"toDestroy","id":"toDestroy","kind":"param"}],"line":"108","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nMove a proxy with a swept AABB. If the proxy has moved outside of its\nfattened AABB, then the proxy is removed from the tree and re-inserted.\nOtherwise, the function returns immediately.\n\nReturns true if the given proxy was re-inserted.\n","name":"moveProxy","id":"moveProxy3()","children":[{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"argProxy","id":"argProxy","kind":"param"},{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"name":"argBox","id":"argBox","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"displacement","id":"displacement","line":"126","kind":"param"}],"line":"125","kind":"method"},{"returnType":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"comment":"Allocates a new node and increases the node count. ","name":"_allocateNode","isPrivate":true,"id":"_allocateNode0()","line":"164","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nQueries a bounding box for overlapping proxies. The callback class is\ncalled for each proxy that overlaps the given bounding box.\n","name":"query","id":"query2()","children":[{"ref":{"refId":"box2d/TreeCallback","name":"TreeCallback"},"name":"callback","id":"callback","kind":"param"},{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"name":"argBox","id":"argBox","kind":"param"}],"line":"186","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"_query","isPrivate":true,"id":"_query4()","children":[{"ref":{"refId":"box2d/TreeCallback","name":"TreeCallback"},"name":"callback","id":"callback","kind":"param"},{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"name":"argBox","id":"argBox","kind":"param"},{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"node","id":"node","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"count","id":"count","line":"192","kind":"param"}],"line":"191","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Inserts a leaf into the tree. ","name":"_insertLeaf","isPrivate":true,"id":"_insertLeaf1()","children":[{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"node","id":"node","kind":"param"}],"line":"220","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Removes the given leaf from the tree. ","name":"_removeLeaf","isPrivate":true,"id":"_removeLeaf1()","children":[{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"argNode","id":"argNode","kind":"param"}],"line":"303","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"Computes the height of the overall tree. ","name":"computeHeightFromRoot","id":"computeHeightFromRoot0()","line":"363","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"Computes the height of the given tree. ","name":"_computeHeight","isPrivate":true,"id":"_computeHeight1()","children":[{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"node","id":"node","kind":"param"}],"line":"366","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nRebalances the tree for the given number of iterations. Does a post-order\ntraversal of the tree. If given enough iterations it will hit all nodes of\nthe tree. Starts at the last reinserted leaf.\n","name":"rebalance","id":"rebalance1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"iterations","id":"iterations","kind":"param"}],"line":"381","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Returns a node to the node pool. ","name":"_freeNode","isPrivate":true,"id":"_freeNode1()","children":[{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"node","id":"node","kind":"param"}],"line":"405","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"MAX_STACK_SIZE","id":"MAX_STACK_SIZE","line":"27","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"The number of nodes to add to the node stack if its empty. ","name":"_DEFAULT_NODE_ADDITION","isPrivate":true,"id":"_DEFAULT_NODE_ADDITION","line":"30","kind":"variable"},{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"_root","isPrivate":true,"id":"_root","line":"32","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Current number of active nodes ","name":"_nodeCount","isPrivate":true,"id":"_nodeCount","line":"34","kind":"variable"},{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"_lastLeaf","isPrivate":true,"id":"_lastLeaf","line":"35","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_insertionCount","isPrivate":true,"id":"_insertionCount","line":"36","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_path","isPrivate":true,"id":"_path","line":"37","kind":"variable"},{"ref":{"refId":"dart.collection/Queue","arguments":[{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"}],"name":"Queue"},"isFinal":true,"name":"_nodeStack","isPrivate":true,"id":"_nodeStack","line":"39","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"vector_math/vec2","name":"vec2"}],"name":"List"},"isFinal":true,"name":"_drawVectors","isPrivate":true,"id":"_drawVectors","line":"40","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"Monotonically increasing count used to uniquely identify nodes. ","name":"_nodeCounter","isPrivate":true,"id":"_nodeCounter","line":"42","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"\n Temporary objects that are used privately and are initialized at\n construction. These are used instead of creating new objects during tree\n operation.\n","name":"_tempVector","isPrivate":true,"id":"_tempVector","line":"49","kind":"variable"},{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"isFinal":true,"name":"_tempBox","isPrivate":true,"id":"_tempBox","line":"50","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"center","id":"center","line":"51","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"deltaOne","id":"deltaOne","line":"52","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"deltaTwo","id":"deltaTwo","line":"53","kind":"variable"},{"comment":"\nConstructs a new DynamicTree.\n","name":"DynamicTree","id":"DynamicTree0()","line":"58","kind":"constructor"}],"line":"26","kind":"class"},{"interfaces":[{"refId":"box2d/TreeCallback","name":"TreeCallback"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/broadphase/broad_phase.dart","name":"BroadPhase","id":"BroadPhase","children":[{"returnType":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"comment":"\nCreates a proxy with an initial bounding box. Pairs are not reported until\nupdatePairs is called.\n","name":"createProxy","id":"createProxy2()","children":[{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"name":"box","id":"box","kind":"param"},{"name":"userData","id":"userData","kind":"param"}],"line":"70","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nDestroys a proxy. It is up to the client to remove any pairs.\n","name":"destroyProxy","id":"destroyProxy1()","children":[{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"proxy","id":"proxy","kind":"param"}],"line":"80","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCall MoveProxy as many times as you like, then when you are done\ncall UpdatePairs to constize the proxy pairs (for your time step).\n","name":"moveProxy","id":"moveProxy3()","children":[{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"proxy","id":"proxy","kind":"param"},{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"name":"box","id":"box","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"displacement","id":"displacement","kind":"param"}],"line":"90","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if the bounding boxes of the given proxies overlap.\n","name":"testOverlap","id":"testOverlap2()","children":[{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"proxyA","id":"proxyA","kind":"param"},{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"proxyB","id":"proxyB","kind":"param"}],"line":"98","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nAdd pairs according to whether we need to keep track of\ntheir relationship. Pairs are added by calling the addPair method on the\ngiven callback.\n","name":"updatePairs","id":"updatePairs1()","children":[{"ref":{"refId":"box2d/PairCallback","name":"PairCallback"},"name":"callback","id":"callback","kind":"param"}],"line":"109","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nThe callback function to use for this tree. Is called from\nDynamicTree.query when we are gathering pairs.\n","name":"treeCallback","id":"treeCallback1()","children":[{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"proxy","id":"proxy","kind":"param"}],"line":"170","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nQuery an axis aligned box for overlapping proxies. The callback funciton is\ncalled for each proxy that overlaps the supplied box.\n","name":"query","id":"query2()","children":[{"ref":{"refId":"box2d/TreeCallback","name":"TreeCallback"},"name":"callback","id":"callback","kind":"param"},{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"name":"box","id":"box","kind":"param"}],"line":"209","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nReturns the height of embedded tree.\n","name":"computeHeight","id":"computeHeight0()","line":"216","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_bufferMove","isPrivate":true,"id":"_bufferMove1()","children":[{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"node","id":"node","kind":"param"}],"line":"218","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_unbufferMove","isPrivate":true,"id":"_unbufferMove1()","children":[{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"proxy","id":"proxy","kind":"param"}],"line":"220","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"NULL_PROXY","id":"NULL_PROXY","line":"31","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"PAIR_CAPACITY","id":"PAIR_CAPACITY","line":"32","kind":"variable"},{"ref":{"refId":"box2d/DynamicTree","name":"DynamicTree"},"isFinal":true,"name":"_tree","isPrivate":true,"id":"_tree","line":"34","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"proxyCount","id":"proxyCount","line":"36","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"}],"name":"List"},"name":"moveBuffer","id":"moveBuffer","line":"38","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/Pair","name":"Pair"}],"name":"List"},"name":"_pairBuffer","isPrivate":true,"id":"_pairBuffer","line":"40","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_pairCapacity","isPrivate":true,"id":"_pairCapacity","line":"42","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_pairCount","isPrivate":true,"id":"_pairCount","line":"44","kind":"variable"},{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"queryProxy","id":"queryProxy","line":"46","kind":"variable"},{"comment":"\nConstructs a new BroadPhase.\n","name":"BroadPhase","id":"BroadPhase0()","line":"51","kind":"constructor"}],"line":"30","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/world_manifold.dart","name":"WorldManifold","id":"WorldManifold","children":[{"returnType":{"refId":"void","name":"void"},"name":"initialize","id":"initialize5()","children":[{"ref":{"refId":"box2d/Manifold","name":"Manifold"},"name":"manifold","id":"manifold","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xfA","id":"xfA","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"radiusA","id":"radiusA","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xfB","id":"xfB","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"radiusB","id":"radiusB","line":"50","kind":"param"}],"line":"49","kind":"method"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"\nWorld vector pointing from A to B\n","name":"normal","id":"normal","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"vector_math/vec2","name":"vec2"}],"name":"List"},"isFinal":true,"comment":"\nWorld contact points (points of intersection)\n","name":"points","id":"points","line":"30","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"\nTemporary Vectors that are constructed on construction. Used to prevent\nobject construction while stepping.\n","name":"pool3","id":"pool3","line":"36","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"pool4","id":"pool4","line":"37","kind":"variable"},{"comment":"\nConstructs a new WorldManifold.\n","name":"WorldManifold","id":"WorldManifold0()","line":"42","kind":"constructor"}],"line":"21","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/time_of_impact.dart","name":"SeparationType","id":"SeparationType","children":[{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"POINTS","id":"POINTS","line":"533","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"FACE_A","id":"FACE_A","line":"534","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"FACE_B","id":"FACE_B","line":"535","kind":"variable"}],"line":"532","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nOutput parameters for TimeOfImpact\n","uri":"package:box2d/src/collision/time_of_impact.dart","name":"TimeOfImpactOutput","id":"TimeOfImpactOutput","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"state","id":"state","line":"524","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"t","id":"t","line":"525","kind":"variable"},{"name":"TimeOfImpactOutput","id":"TimeOfImpactOutput0()","line":"527","kind":"constructor"}],"line":"523","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"Enum for TimeOfImpact output. ","uri":"package:box2d/src/collision/time_of_impact.dart","name":"TimeOfImpactOutputState","id":"TimeOfImpactOutputState","children":[{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"UNKNOWN","id":"UNKNOWN","line":"513","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"FAILED","id":"FAILED","line":"514","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"OVERLAPPED","id":"OVERLAPPED","line":"515","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"TOUCHING","id":"TOUCHING","line":"516","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"SEPARATED","id":"SEPARATED","line":"517","kind":"variable"}],"line":"512","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nInput parameters for TimeOfImpact.\n","uri":"package:box2d/src/collision/time_of_impact.dart","name":"TimeOfImpactInput","id":"TimeOfImpactInput","children":[{"ref":{"refId":"box2d/DistanceProxy","name":"DistanceProxy"},"isFinal":true,"name":"proxyA","id":"proxyA","line":"493","kind":"variable"},{"ref":{"refId":"box2d/DistanceProxy","name":"DistanceProxy"},"isFinal":true,"name":"proxyB","id":"proxyB","line":"494","kind":"variable"},{"ref":{"refId":"box2d/Sweep","name":"Sweep"},"isFinal":true,"name":"sweepA","id":"sweepA","line":"495","kind":"variable"},{"ref":{"refId":"box2d/Sweep","name":"Sweep"},"isFinal":true,"name":"sweepB","id":"sweepB","line":"496","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"\ndefines sweep interval [0, tMax]\n","name":"tMax","id":"tMax","line":"501","kind":"variable"},{"name":"TimeOfImpactInput","id":"TimeOfImpactInput0()","line":"503","kind":"constructor"}],"line":"492","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/time_of_impact.dart","name":"SeparationFunction","id":"SeparationFunction","children":[{"returnType":{"refId":"dart.core/num","name":"num"},"name":"initialize","id":"initialize6()","children":[{"ref":{"refId":"box2d/SimplexCache","name":"SimplexCache"},"name":"cache","id":"cache","kind":"param"},{"ref":{"refId":"box2d/DistanceProxy","name":"DistanceProxy"},"name":"argProxyA","id":"argProxyA","kind":"param"},{"ref":{"refId":"box2d/Sweep","name":"Sweep"},"name":"argSweepA","id":"argSweepA","kind":"param"},{"ref":{"refId":"box2d/DistanceProxy","name":"DistanceProxy"},"name":"argProxyB","id":"argProxyB","line":"301","kind":"param"},{"ref":{"refId":"box2d/Sweep","name":"Sweep"},"name":"argSweepB","id":"argSweepB","line":"301","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"t1","id":"t1","line":"301","kind":"param"}],"line":"300","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"name":"findMinSeparation","id":"findMinSeparation2()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"name":"indexes","id":"indexes","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"t","id":"t","kind":"param"}],"line":"379","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"name":"evaluate","id":"evaluate3()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"indexA","id":"indexA","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"indexB","id":"indexB","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"t","id":"t","kind":"param"}],"line":"440","kind":"method"},{"ref":{"refId":"box2d/DistanceProxy","name":"DistanceProxy"},"name":"proxyA","id":"proxyA","line":"253","kind":"variable"},{"ref":{"refId":"box2d/DistanceProxy","name":"DistanceProxy"},"name":"proxyB","id":"proxyB","line":"254","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"type","id":"type","line":"255","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"localPoint","id":"localPoint","line":"256","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"axis","id":"axis","line":"257","kind":"variable"},{"ref":{"refId":"box2d/Sweep","name":"Sweep"},"name":"sweepA","id":"sweepA","line":"258","kind":"variable"},{"ref":{"refId":"box2d/Sweep","name":"Sweep"},"name":"sweepB","id":"sweepB","line":"259","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"Pooling ","name":"localPointA","id":"localPointA","line":"262","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"localPointB","id":"localPointB","line":"263","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"pointA","id":"pointA","line":"264","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"pointB","id":"pointB","line":"265","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"localPointA1","id":"localPointA1","line":"266","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"localPointA2","id":"localPointA2","line":"267","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"normal","id":"normal","line":"268","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"localPointB1","id":"localPointB1","line":"269","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"localPointB2","id":"localPointB2","line":"270","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"axisA","id":"axisA","line":"271","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"axisB","id":"axisB","line":"272","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"temp","id":"temp","line":"273","kind":"variable"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"isFinal":true,"name":"xfa","id":"xfa","line":"274","kind":"variable"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"isFinal":true,"name":"xfb","id":"xfb","line":"275","kind":"variable"},{"name":"SeparationFunction","id":"SeparationFunction0()","line":"277","kind":"constructor"}],"line":"252","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/time_of_impact.dart","name":"TimeOfImpact","id":"TimeOfImpact","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCompute the upper bound on time before two shapes penetrate. Time is\nrepresented as a fraction between [0,tMax]. This uses a swept separating\naxis and may miss some intermediate, non-tunneling collision. If you\nchange the time interval, you should call this function again.\nNote: use Distance to compute the contact point and normal at the time\nof impact.\n","name":"timeOfImpact","id":"timeOfImpact2()","children":[{"ref":{"refId":"box2d/TimeOfImpactOutput","name":"TimeOfImpactOutput"},"name":"output","id":"output","kind":"param"},{"ref":{"refId":"box2d/TimeOfImpactInput","name":"TimeOfImpactInput"},"name":"input","id":"input","kind":"param"}],"line":"72","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"MAX_ITERATIONS","id":"MAX_ITERATIONS","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"toiCalls","id":"toiCalls","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"toiIters","id":"toiIters","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"toiMaxIters","id":"toiMaxIters","line":"27","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"toiRootIters","id":"toiRootIters","line":"28","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"toiMaxRootIters","id":"toiMaxRootIters","line":"29","kind":"variable"},{"ref":{"refId":"box2d/SimplexCache","name":"SimplexCache"},"isFinal":true,"comment":"Pool variables ","name":"cache","id":"cache","line":"32","kind":"variable"},{"ref":{"refId":"box2d/DistanceInput","name":"DistanceInput"},"isFinal":true,"name":"distanceInput","id":"distanceInput","line":"33","kind":"variable"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"isFinal":true,"name":"xfA","id":"xfA","line":"34","kind":"variable"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"isFinal":true,"name":"xfB","id":"xfB","line":"35","kind":"variable"},{"ref":{"refId":"box2d/DistanceOutput","name":"DistanceOutput"},"isFinal":true,"name":"distanceOutput","id":"distanceOutput","line":"36","kind":"variable"},{"ref":{"refId":"box2d/SeparationFunction","name":"SeparationFunction"},"isFinal":true,"name":"fcn","id":"fcn","line":"37","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isFinal":true,"name":"indexes","id":"indexes","line":"38","kind":"variable"},{"ref":{"refId":"box2d/Sweep","name":"Sweep"},"isFinal":true,"name":"sweepA","id":"sweepA","line":"39","kind":"variable"},{"ref":{"refId":"box2d/Sweep","name":"Sweep"},"isFinal":true,"name":"sweepB","id":"sweepB","line":"40","kind":"variable"},{"ref":{"refId":"box2d/DefaultWorldPool","name":"DefaultWorldPool"},"name":"pool","id":"pool","line":"42","kind":"variable"},{"name":"TimeOfImpact._construct","isPrivate":true,"id":"TimeOfImpact._construct1()","children":[{"ref":{"refId":"box2d/DefaultWorldPool","name":"DefaultWorldPool"},"name":"argPool","id":"argPool","kind":"param"}],"line":"44","kind":"constructor"}],"line":"22","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/simplex_vertex.dart","name":"SimplexVertex","id":"SimplexVertex","children":[{"returnType":{"refId":"void","name":"void"},"name":"setFrom","id":"setFrom1()","children":[{"ref":{"refId":"box2d/SimplexVertex","name":"SimplexVertex"},"name":"sv","id":"sv","kind":"param"}],"line":"35","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"44","kind":"method"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"wA","id":"wA","line":"20","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"wB","id":"wB","line":"21","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"w","id":"w","line":"22","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"a","id":"a","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"indexA","id":"indexA","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"indexB","id":"indexB","line":"25","kind":"variable"},{"name":"SimplexVertex","id":"SimplexVertex0()","line":"27","kind":"constructor"}],"line":"19","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/simplex_cache.dart","name":"SimplexCache","id":"SimplexCache","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSets this cache equal to the given cache.\n","name":"setFrom","id":"setFrom1()","children":[{"ref":{"refId":"box2d/SimplexCache","name":"SimplexCache"},"name":"sc","id":"sc","kind":"param"}],"line":"45","kind":"method"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"length or area ","name":"metric","id":"metric","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"count","id":"count","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isFinal":true,"comment":"vertices on shape A ","name":"indexA","id":"indexA","line":"28","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isFinal":true,"comment":"vertices on shape B ","name":"indexB","id":"indexB","line":"31","kind":"variable"},{"comment":"\nConstructs a new SimplexCache.\n","name":"SimplexCache","id":"SimplexCache0()","line":"36","kind":"constructor"}],"line":"21","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/simplex.dart","name":"Simplex","id":"Simplex","children":[{"returnType":{"refId":"void","name":"void"},"name":"readCache","id":"readCache5()","children":[{"ref":{"refId":"box2d/SimplexCache","name":"SimplexCache"},"name":"cache","id":"cache","kind":"param"},{"ref":{"refId":"box2d/DistanceProxy","name":"DistanceProxy"},"name":"proxyA","id":"proxyA","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"transformA","id":"transformA","line":"44","kind":"param"},{"ref":{"refId":"box2d/DistanceProxy","name":"DistanceProxy"},"name":"proxyB","id":"proxyB","line":"44","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"transformB","id":"transformB","line":"45","kind":"param"}],"line":"43","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"writeCache","id":"writeCache1()","children":[{"ref":{"refId":"box2d/SimplexCache","name":"SimplexCache"},"name":"cache","id":"cache","kind":"param"}],"line":"90","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"getSearchDirection","id":"getSearchDirection1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"out","id":"out","kind":"param"}],"line":"100","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nthis returns pooled objects. don't keep or modify them\n","name":"getClosestPoint","id":"getClosestPoint1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"out","id":"out","kind":"param"}],"line":"129","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"getWitnessPoints","id":"getWitnessPoints2()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"pA","id":"pA","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"pB","id":"pB","kind":"param"}],"line":"152","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"name":"getMetric","id":"getMetric0()","line":"182","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Solve a line segment using barycentric coordinates. ","name":"solve2","id":"solve20()","line":"206","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSolve a line segment using barycentric coordinates.<br/>\nPossible regions:<br/>\n- points[2]<br/>\n- edge points[0]-points[2]<br/>\n- edge points[1]-points[2]<br/>\n- inside the triangle\n","name":"solve3","id":"solve30()","line":"245","kind":"method"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/SimplexVertex","name":"SimplexVertex"}],"name":"List"},"isFinal":true,"name":"vertices","id":"vertices","line":"20","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"count","id":"count","line":"21","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"Pooling. ","name":"e13","id":"e13","line":"35","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"e23","id":"e23","line":"36","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"e12","id":"e12","line":"37","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"case2","id":"case2","line":"38","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"case22","id":"case22","line":"39","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"case3","id":"case3","line":"40","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"case33","id":"case33","line":"41","kind":"variable"},{"name":"Simplex","id":"Simplex0()","line":"23","kind":"constructor"}],"line":"19","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/point_state.dart","name":"PointState","id":"PointState","children":[{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"NULL_STATE","id":"NULL_STATE","line":"20","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"ADD_STATE","id":"ADD_STATE","line":"21","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"PERSIST_STATE","id":"PERSIST_STATE","line":"22","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"REMOVE_STATE","id":"REMOVE_STATE","line":"23","kind":"variable"}],"line":"19","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/manifold_type.dart","name":"ManifoldType","id":"ManifoldType","children":[{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"CIRCLES","id":"CIRCLES","line":"22","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"FACE_A","id":"FACE_A","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"FACE_B","id":"FACE_B","line":"24","kind":"variable"}],"line":"21","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/manifold_point.dart","name":"ManifoldPoint","id":"ManifoldPoint","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSets this ManifoldPoint to be equal to the given point.\n","name":"setFrom","id":"setFrom1()","children":[{"ref":{"refId":"box2d/ManifoldPoint","name":"ManifoldPoint"},"name":"other","id":"other","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"\nUsage depends on manifold type. For circles, is the local center of\ncircleB. For faceA, is the local center of CircleB or the clip point of\npolygonB. For faceB, is the clip point of polygonA.\n","name":"localPoint","id":"localPoint","line":"28","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"The non-penetration impulse. ","name":"normalImpulse","id":"normalImpulse","line":"31","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"comment":"The friction impulse. ","name":"tangentImpulse","id":"tangentImpulse","line":"34","kind":"variable"},{"ref":{"refId":"box2d/ContactID","name":"ContactID"},"isFinal":true,"comment":"Unique identifier for a contact point between two shapes. ","name":"id","id":"id","line":"37","kind":"variable"},{"comment":"\nConstructs a new ManifoldPoint.\n","name":"ManifoldPoint","id":"ManifoldPoint0()","line":"42","kind":"constructor"},{"comment":"\nConstructs a new ManifoldPoint that is a copy of the given point.\n","name":"ManifoldPoint.copy","id":"ManifoldPoint.copy1()","children":[{"ref":{"refId":"box2d/ManifoldPoint","name":"ManifoldPoint"},"name":"other","id":"other","kind":"param"}],"line":"51","kind":"constructor"}],"line":"22","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/manifold.dart","name":"Manifold","id":"Manifold","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSets this manifold to be a copy of the given manifold.\n","name":"setFrom","id":"setFrom1()","children":[{"ref":{"refId":"box2d/Manifold","name":"Manifold"},"name":"other","id":"other","kind":"param"}],"line":"80","kind":"method"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/ManifoldPoint","name":"ManifoldPoint"}],"name":"List"},"isFinal":true,"comment":"The points of contact. ","name":"points","id":"points","line":"25","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"\nThe meaning of the localNormal depends on the type of this manifold. The\ndifferent meanings (or lack thereof) are outlined below.\nCircles: not used.\nfaceA: The normal on polygonA.\nfaceB: The normal on polygonB.\n","name":"localNormal","id":"localNormal","line":"34","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"\nThe meaning of the localPoint depends on the type of this manifold. The\ndifferent meanings (or lack thereof) are outlined below.\nCircles: The local center of circleA.\nfaceA: The center of faceA.\nfaceB: The center of faceB.\n","name":"localPoint","id":"localPoint","line":"43","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The type of manifold. See [ManifoldType]. ","name":"type","id":"type","line":"46","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The number of manifold points. ","name":"pointCount","id":"pointCount","line":"49","kind":"variable"},{"comment":"\nCreates a manifold with 0 points. It's point array should be full of\nalready instantiated ManifoldPoints.\n","name":"Manifold","id":"Manifold0()","line":"55","kind":"constructor"},{"comment":"\nCreates a new manifold that is a copy of the given manifold.\n","name":"Manifold.copy","id":"Manifold.copy1()","children":[{"ref":{"refId":"box2d/Manifold","name":"Manifold"},"name":"other","id":"other","kind":"param"}],"line":"67","kind":"constructor"}],"line":"23","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/features.dart","name":"Features","id":"Features","children":[{"returnType":{"refId":"void","name":"void"},"name":"setFrom","id":"setFrom1()","children":[{"ref":{"refId":"box2d/Features","name":"Features"},"name":"f","id":"f","kind":"param"}],"line":"49","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nReturns true if this Features object is equal to the given object.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"59","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a String representation of this Features.\n","name":"toString","id":"toString0()","line":"67","kind":"method"},{"comment":"\nSets all features to 0.\n","name":"zero","id":"zero0()","line":"74","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The edge that defines the outward contact normal. ","name":"referenceEdge","id":"referenceEdge","line":"21","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The edge most anti-parallel to the reference edge. ","name":"incidentEdge","id":"incidentEdge","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The vertex (0 or 1) on the incident edge that was clipped. ","name":"incidentVertex","id":"incidentVertex","line":"27","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"A value of 1 indicates that the reference edge is on shape2. ","name":"flip","id":"flip","line":"30","kind":"variable"},{"comment":"\nConstructs a new features with zero values for all fields.\n","name":"Features","id":"Features0()","line":"35","kind":"constructor"},{"name":"Features.copy","id":"Features.copy1()","children":[{"ref":{"refId":"box2d/Features","name":"Features"},"name":"f","id":"f","kind":"param"}],"line":"42","kind":"constructor"}],"line":"19","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/distance_proxy.dart","name":"DistanceProxy","id":"DistanceProxy","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nInitialize the proxy using the given shape. The shape\nmust remain in scope while the proxy is in use.\n","name":"setFromShape","id":"setFromShape1()","children":[{"name":"shape","id":"shape","kind":"param"}],"line":"38","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"comment":"\nGet the supporting vertex index in the given direction.\n","name":"getSupport","id":"getSupport1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"direction","id":"direction","kind":"param"}],"line":"62","kind":"method"},{"returnType":{"refId":"vector_math/vec2","name":"vec2"},"comment":"\nGet the supporting vertex in the given direction.\n","name":"getSupportVertex","id":"getSupportVertex1()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"direction","id":"direction","kind":"param"}],"line":"79","kind":"method"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"vector_math/vec2","name":"vec2"}],"name":"List"},"isFinal":true,"name":"vertices","id":"vertices","line":"21","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"count","id":"count","line":"22","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"radius","id":"radius","line":"23","kind":"variable"},{"comment":"\nConstructs a new DistanceProxy.\n","name":"DistanceProxy","id":"DistanceProxy0()","line":"28","kind":"constructor"}],"line":"20","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/distance_output.dart","name":"DistanceOutput","id":"DistanceOutput","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"Closest point on shapeA ","name":"pointA","id":"pointA","line":"23","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"comment":"Closest point on shapeB ","name":"pointB","id":"pointB","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"_distance","isPrivate":true,"id":"_distance","line":"28","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"number of gjk iterations used ","name":"iterations","id":"iterations","line":"31","kind":"variable"},{"name":"DistanceOutput","id":"DistanceOutput0()","line":"33","kind":"constructor"}],"line":"21","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/distance_input.dart","name":"DistanceInput","id":"DistanceInput","children":[{"ref":{"refId":"box2d/DistanceProxy","name":"DistanceProxy"},"name":"proxyA","id":"proxyA","line":"23","kind":"variable"},{"ref":{"refId":"box2d/DistanceProxy","name":"DistanceProxy"},"name":"proxyB","id":"proxyB","line":"24","kind":"variable"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"transformA","id":"transformA","line":"25","kind":"variable"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"transformB","id":"transformB","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"useRadii","id":"useRadii","line":"27","kind":"variable"},{"name":"DistanceInput","id":"DistanceInput0()","line":"29","kind":"constructor"}],"line":"22","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/distance.dart","name":"Distance","id":"Distance","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCompute the closest points between two shapes. Supports any combination of:\nCircleShape and PolygonShape. The simplex cache is input/output.\nOn the first call set SimplexCache.count to zero.\n","name":"computeDistance","id":"computeDistance3()","children":[{"ref":{"refId":"box2d/DistanceOutput","name":"DistanceOutput"},"name":"output","id":"output","kind":"param"},{"ref":{"refId":"box2d/SimplexCache","name":"SimplexCache"},"name":"cache","id":"cache","kind":"param"},{"ref":{"refId":"box2d/DistanceInput","name":"DistanceInput"},"name":"input","id":"input","line":"58","kind":"param"}],"line":"57","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"calls","id":"calls","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"iters","id":"iters","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"maxIters","id":"maxIters","line":"25","kind":"variable"},{"ref":{"refId":"box2d/Simplex","name":"Simplex"},"comment":"Pool variables for use in distance calculation. ","name":"simplex","id":"simplex","line":"28","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"name":"saveA","id":"saveA","line":"29","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"name":"saveB","id":"saveB","line":"30","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"closestPoint","id":"closestPoint","line":"31","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"searchDirection","id":"searchDirection","line":"32","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"temp","id":"temp","line":"33","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"normal","id":"normal","line":"34","kind":"variable"},{"comment":"\nConstruct a new Distance object. For internal use only. Don't directly\ninvoke.\n","name":"Distance._construct","isPrivate":true,"id":"Distance._construct0()","line":"40","kind":"constructor"}],"line":"22","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/contact_id.dart","name":"ContactID","id":"ContactID","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nReturns true if this ContactID equals the given ContactID.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"39","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets this contactID to be equal to the given ContactID.\n","name":"setFrom","id":"setFrom1()","children":[{"ref":{"refId":"box2d/ContactID","name":"ContactID"},"name":"other","id":"other","kind":"param"}],"line":"44","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if this ContactID equals the given ContactID.\n","name":"isEqual","id":"isEqual1()","children":[{"ref":{"refId":"box2d/ContactID","name":"ContactID"},"name":"other","id":"other","kind":"param"}],"line":"49","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nZeroes out the data.\n","name":"zero","id":"zero0()","line":"54","kind":"method"},{"ref":{"refId":"box2d/Features","name":"Features"},"isFinal":true,"comment":"The features that intersect to form the contact point ","name":"features","id":"features","line":"24","kind":"variable"},{"comment":"\nConstructs a new ContactID. ","name":"ContactID","id":"ContactID0()","line":"28","kind":"constructor"},{"comment":"\nConstructs a ContactID that is a copy of the given ContactID.\n","name":"ContactID.copy","id":"ContactID.copy1()","children":[{"ref":{"refId":"box2d/ContactID","name":"ContactID"},"name":"other","id":"other","kind":"param"}],"line":"33","kind":"constructor"}],"line":"22","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nClass for returning edge results\n","uri":"package:box2d/src/collision/collision.dart","name":"EdgeResults","id":"EdgeResults","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"separation","id":"separation","line":"660","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"edgeIndex","id":"edgeIndex","line":"661","kind":"variable"},{"name":"EdgeResults","id":"EdgeResults0()","line":"663","kind":"constructor"}],"line":"659","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nUsed for computing contact manifolds.\n","uri":"package:box2d/src/collision/collision.dart","name":"ClipVertex","id":"ClipVertex","children":[{"returnType":{"refId":"void","name":"void"},"name":"setFrom","id":"setFrom1()","children":[{"ref":{"refId":"box2d/ClipVertex","name":"ClipVertex"},"name":"cv","id":"cv","kind":"param"}],"line":"650","kind":"method"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"v","id":"v","line":"643","kind":"variable"},{"ref":{"refId":"box2d/ContactID","name":"ContactID"},"name":"id","id":"id","line":"644","kind":"variable"},{"name":"ClipVertex","id":"ClipVertex0()","line":"646","kind":"constructor"}],"line":"642","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/collision.dart","name":"Collision","id":"Collision","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if the two given shapes overlap.\n","name":"testOverlap","id":"testOverlap4()","children":[{"ref":{"refId":"box2d/Shape","name":"Shape"},"name":"shapeA","id":"shapeA","kind":"param"},{"ref":{"refId":"box2d/Shape","name":"Shape"},"name":"shapeB","id":"shapeB","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"transformA","id":"transformA","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"transformB","id":"transformB","line":"84","kind":"param"}],"line":"83","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCompute the point states given two manifolds. The states pertain to the\ntransition from manifold1 to manifold2. So state1 is either persist or\nremove while state2 is either add or persist.\n","name":"getPointStates","id":"getPointStates4()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"name":"state1","id":"state1","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"name":"state2","id":"state2","kind":"param"},{"ref":{"refId":"box2d/Manifold","name":"Manifold"},"name":"manifold1","id":"manifold1","line":"103","kind":"param"},{"ref":{"refId":"box2d/Manifold","name":"Manifold"},"name":"manifold2","id":"manifold2","line":"103","kind":"param"}],"line":"102","kind":"method"},{"returnType":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"\nClipping for contact manifolds.\nSutherland-Hodgman clipping.\n","name":"clipSegmentToLine","id":"clipSegmentToLine4()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/ClipVertex","name":"ClipVertex"}],"name":"List"},"name":"vOut","id":"vOut","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/ClipVertex","name":"ClipVertex"}],"name":"List"},"name":"vIn","id":"vIn","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"norm","id":"norm","line":"143","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"offset","id":"offset","line":"143","kind":"param"}],"line":"142","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Compute the collision manifold between two circles. ","name":"collideCircles","id":"collideCircles5()","children":[{"ref":{"refId":"box2d/Manifold","name":"Manifold"},"name":"manifold","id":"manifold","kind":"param"},{"ref":{"refId":"box2d/CircleShape","name":"CircleShape"},"name":"circle1","id":"circle1","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xfA","id":"xfA","kind":"param"},{"ref":{"refId":"box2d/CircleShape","name":"CircleShape"},"name":"circle2","id":"circle2","line":"176","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xfB","id":"xfB","line":"176","kind":"param"}],"line":"175","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCompute the collision manifold between a polygon and a circle.\n","name":"collidePolygonAndCircle","id":"collidePolygonAndCircle5()","children":[{"ref":{"refId":"box2d/Manifold","name":"Manifold"},"name":"manifold","id":"manifold","kind":"param"},{"ref":{"refId":"box2d/PolygonShape","name":"PolygonShape"},"name":"polygon","id":"polygon","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xfA","id":"xfA","line":"213","kind":"param"},{"ref":{"refId":"box2d/CircleShape","name":"CircleShape"},"name":"circle","id":"circle","line":"213","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xfB","id":"xfB","line":"213","kind":"param"}],"line":"212","kind":"method"},{"returnType":{"refId":"dart.core/num","name":"num"},"comment":"\nFind the separation between poly1 and poly2 for a given edge normal on\npoly1.\n","name":"edgeSeparation","id":"edgeSeparation5()","children":[{"ref":{"refId":"box2d/PolygonShape","name":"PolygonShape"},"name":"poly1","id":"poly1","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xf1","id":"xf1","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"edge1","id":"edge1","kind":"param"},{"ref":{"refId":"box2d/PolygonShape","name":"PolygonShape"},"name":"poly2","id":"poly2","line":"346","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xf2","id":"xf2","line":"346","kind":"param"}],"line":"345","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nFind the max separation between poly1 and poly2 using edge normals from\npoly1.\n","name":"findMaxSeparation","id":"findMaxSeparation5()","children":[{"ref":{"refId":"box2d/EdgeResults","name":"EdgeResults"},"name":"results","id":"results","kind":"param"},{"ref":{"refId":"box2d/PolygonShape","name":"PolygonShape"},"name":"poly1","id":"poly1","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xf1","id":"xf1","kind":"param"},{"ref":{"refId":"box2d/PolygonShape","name":"PolygonShape"},"name":"poly2","id":"poly2","line":"393","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xf2","id":"xf2","line":"393","kind":"param"}],"line":"392","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"findIncidentEdge","id":"findIncidentEdge6()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/ClipVertex","name":"ClipVertex"}],"name":"List"},"name":"c","id":"c","kind":"param"},{"ref":{"refId":"box2d/PolygonShape","name":"PolygonShape"},"name":"poly1","id":"poly1","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xf1","id":"xf1","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"edge1","id":"edge1","line":"477","kind":"param"},{"ref":{"refId":"box2d/PolygonShape","name":"PolygonShape"},"name":"poly2","id":"poly2","line":"477","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xf2","id":"xf2","line":"477","kind":"param"}],"line":"476","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCompute the collision manifold between two polygons.\n","name":"collidePolygons","id":"collidePolygons5()","children":[{"ref":{"refId":"box2d/Manifold","name":"Manifold"},"name":"manifold","id":"manifold","kind":"param"},{"ref":{"refId":"box2d/PolygonShape","name":"PolygonShape"},"name":"polyA","id":"polyA","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xfA","id":"xfA","kind":"param"},{"ref":{"refId":"box2d/PolygonShape","name":"PolygonShape"},"name":"polyB","id":"polyB","line":"521","kind":"param"},{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xfB","id":"xfB","line":"521","kind":"param"}],"line":"520","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"name":"NULL_FEATURE","id":"NULL_FEATURE","line":"24","kind":"variable"},{"ref":{"refId":"box2d/DefaultWorldPool","name":"DefaultWorldPool"},"isFinal":true,"name":"_pool","isPrivate":true,"id":"_pool","line":"26","kind":"variable"},{"ref":{"refId":"box2d/SimplexCache","name":"SimplexCache"},"isFinal":true,"comment":"Cache used to help warmstart distance. ","name":"cache","id":"cache","line":"29","kind":"variable"},{"ref":{"refId":"box2d/DistanceInput","name":"DistanceInput"},"isFinal":true,"comment":"Distance input and output. ","name":"input","id":"input","line":"32","kind":"variable"},{"ref":{"refId":"box2d/DistanceOutput","name":"DistanceOutput"},"isFinal":true,"name":"output","id":"output","line":"33","kind":"variable"},{"ref":{"refId":"box2d/EdgeResults","name":"EdgeResults"},"isFinal":true,"comment":"A pool of already constructed objects. ","name":"results1","id":"results1","line":"36","kind":"variable"},{"ref":{"refId":"box2d/EdgeResults","name":"EdgeResults"},"isFinal":true,"name":"results2","id":"results2","line":"37","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/ClipVertex","name":"ClipVertex"}],"name":"List"},"isFinal":true,"name":"incidentEdge","id":"incidentEdge","line":"38","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"localTangent","id":"localTangent","line":"39","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"localNormal","id":"localNormal","line":"40","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"planePoint","id":"planePoint","line":"41","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"tangent","id":"tangent","line":"42","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"normal","id":"normal","line":"43","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"normal1","id":"normal1","line":"44","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"v11","id":"v11","line":"45","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isFinal":true,"name":"v12","id":"v12","line":"46","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/ClipVertex","name":"ClipVertex"}],"name":"List"},"isFinal":true,"name":"clipPoints1","id":"clipPoints1","line":"47","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"box2d/ClipVertex","name":"ClipVertex"}],"name":"List"},"isFinal":true,"name":"clipPoints2","id":"clipPoints2","line":"48","kind":"variable"},{"comment":"\nConstructs a new Collision object. Should only be constructed once (in the\npool). Retrieve from the pool to use.\n","name":"Collision._construct","isPrivate":true,"id":"Collision._construct1()","children":[{"ref":{"refId":"box2d/DefaultWorldPool","name":"DefaultWorldPool"},"name":"pool","id":"pool","kind":"param"}],"line":"54","kind":"constructor"}],"line":"23","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/collision/axis_aligned_box.dart","name":"AxisAlignedBox","id":"AxisAlignedBox","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nSets this box to be a combination of the two given boxes.\nThe combination is determined by picking and choosing the lowest x and y\nvalues from the lowerBounds to form a new lower bound and picking and\nchoosing the largest x and y values from the upperBounds to form a new\nupperBound.\n","name":"setFromCombination","id":"setFromCombination2()","children":[{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"name":"boxOne","id":"boxOne","kind":"param"},{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"name":"boxTwo","id":"boxTwo","kind":"param"}],"line":"42","kind":"method"},{"returnType":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"comment":"Sets the bounds to the given values. ","name":"setBounds","id":"setBounds2()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"lower","id":"lower","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"upper","id":"upper","kind":"param"}],"line":"50","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"isStatic":true,"comment":"Returns true if the given box overlaps with this box. ","name":"testOverlap","id":"testOverlap2()","children":[{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"name":"a","id":"a","kind":"param"},{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"name":"b","id":"b","kind":"param"}],"line":"57","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturns true if the lower bound is strictly less than the upper bound and\nboth bounds are themselves valid (Vector.isValid() returns true).\n","name":"isValid","id":"isValid0()","line":"65","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"Returns true if this box contains the given box. ","name":"contains","id":"contains1()","children":[{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"name":"aabb","id":"aabb","kind":"param"}],"line":"73","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Sets this box to be a copy of the given box. ","name":"setFrom","id":"setFrom1()","children":[{"ref":{"refId":"box2d/AxisAlignedBox","name":"AxisAlignedBox"},"name":"other","id":"other","kind":"param"}],"line":"78","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"83","kind":"method"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"comment":"Returns the center of this box. ","name":"center","id":"center","line":"70","kind":"property"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"comment":"Bottom left vertex of bounding box. ","name":"lowerBound","id":"lowerBound","line":"21","kind":"variable"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"comment":"Top right vertex of bounding box. ","name":"upperBound","id":"upperBound","line":"24","kind":"variable"},{"comment":"\nConstructs a new box with the given lower and upper bounds. If no bounds\nare specified, constructs the box with both bounds at the origin.\n","name":"AxisAlignedBox","id":"AxisAlignedBox2()","children":[{"initializedField":{"refId":"box2d/AxisAlignedBox/lowerBound","name":"lowerBound"},"ref":{"refId":"vector_math/vec2","name":"vec2"},"isOptional":true,"defaultValue":"null","name":"lowerBound","id":"lowerBound","kind":"param"},{"initializedField":{"refId":"box2d/AxisAlignedBox/upperBound","name":"upperBound"},"ref":{"refId":"vector_math/vec2","name":"vec2"},"isOptional":true,"defaultValue":"null","name":"upperBound","id":"upperBound","kind":"param"}],"line":"30","kind":"constructor"}],"line":"19","kind":"class"},{"returnType":{"refId":"void","name":"void"},"uri":"package:box2d/src/callbacks/destruction_listener.dart","name":"JointDestructionListener","id":"JointDestructionListener","children":[{"ref":{"refId":"box2d/Joint","name":"Joint"},"name":"joint","id":"joint","kind":"param"}],"line":"26","kind":"typedef"},{"returnType":{"refId":"void","name":"void"},"uri":"package:box2d/src/callbacks/destruction_listener.dart","name":"FixtureDestructionListener","id":"FixtureDestructionListener","children":[{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fixture","id":"fixture","kind":"param"}],"line":"24","kind":"typedef"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/callbacks/debug_draw.dart","name":"DebugDraw","id":"DebugDraw","children":[{"returnType":{"refId":"void","name":"void"},"name":"appendFlags","id":"appendFlags1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"value","id":"value","kind":"param"}],"line":"50","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"clearFlags","id":"clearFlags1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"value","id":"value","kind":"param"}],"line":"51","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Draw a closed polygon provided in CCW order. ","name":"drawPolygon","id":"drawPolygon3()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"vector_math/vec2","name":"vec2"}],"name":"List"},"name":"vertices","id":"vertices","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"vertexCount","id":"vertexCount","kind":"param"},{"ref":{"refId":"box2d/Color3","name":"Color3"},"name":"color","id":"color","kind":"param"}],"line":"54","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Draws the given point with the given radius and color.  ","name":"drawPoint","id":"drawPoint3()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"point","id":"point","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"radiusOnScreen","id":"radiusOnScreen","kind":"param"},{"ref":{"refId":"box2d/Color3","name":"Color3"},"name":"color","id":"color","kind":"param"}],"line":"57","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Draw a solid closed polygon provided in CCW order. ","name":"drawSolidPolygon","id":"drawSolidPolygon3()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"vector_math/vec2","name":"vec2"}],"name":"List"},"name":"vertices","id":"vertices","kind":"param"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"vertexCount","id":"vertexCount","kind":"param"},{"ref":{"refId":"box2d/Color3","name":"Color3"},"name":"color","id":"color","kind":"param"}],"line":"60","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Draw a circle. ","name":"drawCircle","id":"drawCircle4()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"center","id":"center","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"radius","id":"radius","kind":"param"},{"ref":{"refId":"box2d/Color3","name":"Color3"},"name":"color","id":"color","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isOptional":true,"name":"axis","id":"axis","kind":"param"}],"line":"63","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Draw a solid circle. ","name":"drawSolidCircle","id":"drawSolidCircle4()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"center","id":"center","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"radius","id":"radius","kind":"param"},{"ref":{"refId":"box2d/Color3","name":"Color3"},"name":"color","id":"color","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"isOptional":true,"name":"axis","id":"axis","kind":"param"}],"line":"66","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Draw a line segment. ","name":"drawSegment","id":"drawSegment3()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"p1","id":"p1","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"p2","id":"p2","kind":"param"},{"ref":{"refId":"box2d/Color3","name":"Color3"},"name":"color","id":"color","kind":"param"}],"line":"69","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Draw a transform.  Choose your own length scale. ","name":"drawTransform","id":"drawTransform2()","children":[{"ref":{"refId":"box2d/Transform","name":"Transform"},"name":"xf","id":"xf","kind":"param"},{"ref":{"refId":"box2d/Color3","name":"Color3"},"name":"color","id":"color","kind":"param"}],"line":"72","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Draw a string. ","name":"drawString","id":"drawString4()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"y","id":"y","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"s","id":"s","kind":"param"},{"ref":{"refId":"box2d/Color3","name":"Color3"},"name":"color","id":"color","kind":"param"}],"line":"76","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nSets the center of the viewport to the given x and y values and the\nviewport scale to the given scale.\n","name":"setCamera","id":"setCamera3()","children":[{"ref":{"refId":"dart.core/num","name":"num"},"name":"x","id":"x","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"y","id":"y","kind":"param"},{"ref":{"refId":"dart.core/num","name":"num"},"name":"scale","id":"scale","kind":"param"}],"line":"82","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nScreen coordinates are specified in argScreen. These coordinates are\nconverted to World coordinates and placed in the argWorld return vector.\n","name":"getScreenToWorldToOut","id":"getScreenToWorldToOut2()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argScreen","id":"argScreen","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argWorld","id":"argWorld","kind":"param"}],"line":"90","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nWorld coordinates are specified in argWorld. These coordinates are\nconverted to screen coordinates and placed in the argScreen return vector.\n","name":"getWorldToScreenToOut","id":"getWorldToScreenToOut2()","children":[{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argWorld","id":"argWorld","kind":"param"},{"ref":{"refId":"vector_math/vec2","name":"vec2"},"name":"argScreen","id":"argScreen","kind":"param"}],"line":"98","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"draw shapes","name":"e_shapeBit","id":"e_shapeBit","line":"29","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"draw joint connections","name":"e_jointBit","id":"e_jointBit","line":"31","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"draw core (TimeOfImpact) shapes","name":"e_aabbBit","id":"e_aabbBit","line":"33","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"draw axis aligned boxes","name":"e_pairBit","id":"e_pairBit","line":"35","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"draw center of mass ","name":"e_centerOfMassBit","id":"e_centerOfMassBit","line":"37","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"draw dynamic tree.","name":"e_dynamicTreeBit","id":"e_dynamicTreeBit","line":"39","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isStatic":true,"comment":"draw with lines (vs. default filled polygons).","name":"e_lineDrawingBit","id":"e_lineDrawingBit","line":"41","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"flags","id":"flags","line":"43","kind":"variable"},{"ref":{"refId":"box2d/ViewportTransform","name":"ViewportTransform"},"name":"viewportTransform","id":"viewportTransform","line":"44","kind":"variable"},{"name":"DebugDraw","id":"DebugDraw1()","children":[{"ref":{"refId":"box2d/ViewportTransform","name":"ViewportTransform"},"name":"viewport","id":"viewport","kind":"param"}],"line":"46","kind":"constructor"}],"line":"24","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/callbacks/query_callback.dart","name":"QueryCallback","id":"QueryCallback","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nCalled for each fixture found in the query AABB.\nreturn false to terminate the query.\n","name":"reportFixture","id":"reportFixture1()","children":[{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fixture","id":"fixture","kind":"param"}],"line":"27","kind":"method"}],"line":"22","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/callbacks/contact_impulse.dart","name":"ContactImpulse","id":"ContactImpulse","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/num","name":"num"}],"name":"List"},"name":"normalImpulses","id":"normalImpulses","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/num","name":"num"}],"name":"List"},"name":"tangentImpulses","id":"tangentImpulses","line":"25","kind":"variable"},{"name":"ContactImpulse","id":"ContactImpulse0()","line":"27","kind":"constructor"}],"line":"23","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/callbacks/contact_filter.dart","name":"ContactFilter","id":"ContactFilter","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"comment":"\nReturn true if contact calculations should be performed between these two\nshapes.\n","name":"shouldCollide","id":"shouldCollide2()","children":[{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fixtureA","id":"fixtureA","kind":"param"},{"ref":{"refId":"box2d/Fixture","name":"Fixture"},"name":"fixtureB","id":"fixtureB","kind":"param"}],"line":"31","kind":"method"},{"name":"ContactFilter","id":"ContactFilter0()","line":"25","kind":"constructor"}],"line":"24","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/callbacks/contact_listener.dart","name":"ContactListener","id":"ContactListener","children":[{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when two fixtures begin to touch.\n","name":"beginContact","id":"beginContact1()","children":[{"ref":{"refId":"box2d/Contact","name":"Contact"},"name":"contact","id":"contact","kind":"param"}],"line":"35","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nCalled when two fixtures cease to touch.\n","name":"endContact","id":"endContact1()","children":[{"ref":{"refId":"box2d/Contact","name":"Contact"},"name":"contact","id":"contact","kind":"param"}],"line":"40","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nThis is called after a contact is updated. This allows you to inspect a\ncontact before it goes to the solver. If you are careful, you can modify \nthe contact manifold (e.g. disable contact).\nA copy of the old manifold is provided so that you can detect changes.\nNote: this is called only for awake bodies.\nNote: this is called even when the number of contact points is zero.\nNote: this is not called for sensors.\nNote: if you set the number of contact points to zero, you will not\nget an EndContact callback. However, you may get a BeginContact callback\nthe next step.\nNote: the oldManifold parameter is pooled, so it will be the same object\nfor every callback for each thread.\n","name":"preSolve","id":"preSolve2()","children":[{"ref":{"refId":"box2d/Contact","name":"Contact"},"name":"contact","id":"contact","kind":"param"},{"ref":{"refId":"box2d/Manifold","name":"Manifold"},"name":"oldManifold","id":"oldManifold","kind":"param"}],"line":"56","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nThis lets you inspect a contact after the solver is finished. This is\nuseful for inspecting impulses.\nNote: the contact manifold does not include time of impact impulses,\nwhich can be arbitrarily large if the sub-step is small. Hence the impulse\nis provided explicitly in a separate data structure.\nNote: this is only called for contacts that are touching, solid, and awake.\n","name":"postSolve","id":"postSolve2()","children":[{"ref":{"refId":"box2d/Contact","name":"Contact"},"name":"contact","id":"contact","kind":"param"},{"ref":{"refId":"box2d/ContactImpulse","name":"ContactImpulse"},"name":"impulse","id":"impulse","kind":"param"}],"line":"66","kind":"method"}],"line":"31","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/callbacks/tree_callback.dart","name":"TreeCallback","id":"TreeCallback","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"treeCallback","id":"treeCallback1()","children":[{"ref":{"refId":"box2d/DynamicTreeNode","name":"DynamicTreeNode"},"name":"node","id":"node","kind":"param"}],"line":"24","kind":"method"}],"line":"23","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"package:box2d/src/callbacks/pair_callback.dart","name":"PairCallback","id":"PairCallback","children":[{"returnType":{"refId":"void","name":"void"},"name":"addPair","id":"addPair2()","children":[{"name":"userDataA","id":"userDataA","kind":"param"},{"name":"userDataB","id":"userDataB","kind":"param"}],"line":"20","kind":"method"}],"line":"19","kind":"class"}],"line":"15","kind":"library"}