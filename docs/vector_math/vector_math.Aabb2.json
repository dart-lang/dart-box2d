{"name":"Aabb2","qualifiedName":"vector_math/vector_math.Aabb2","comment":"","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{},"getters":{"min":{"name":"min","qualifiedName":"vector_math/vector_math.Aabb2.min","comment":"","commentFrom":"vector_math.Aabb2.min","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"vector_math/vector_math.Vector2","inner":[]}],"parameters":{},"annotations":[]},"max":{"name":"max","qualifiedName":"vector_math/vector_math.Aabb2.max","comment":"","commentFrom":"vector_math.Aabb2.max","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"vector_math/vector_math.Vector2","inner":[]}],"parameters":{},"annotations":[]},"center":{"name":"center","qualifiedName":"vector_math/vector_math.Aabb2.center","comment":"","commentFrom":"vector_math.Aabb2.center","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"vector_math/vector_math.Vector2","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"vector_math/vector_math.Aabb2.Aabb2-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]},"copy":{"name":"copy","qualifiedName":"vector_math/vector_math.Aabb2.Aabb2-copy","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Aabb2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"minmax":{"name":"minmax","qualifiedName":"vector_math/vector_math.Aabb2.Aabb2-minmax","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"min_":{"name":"min_","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Vector2","inner":[]}],"value":"null","annotations":[]},"max_":{"name":"max_","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[{"name":"dart-core.Deprecated","parameters":["next release"]}]},"minMax":{"name":"minMax","qualifiedName":"vector_math/vector_math.Aabb2.Aabb2-minMax","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"min_":{"name":"min_","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Vector2","inner":[]}],"value":"null","annotations":[]},"max_":{"name":"max_","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"operators":{},"methods":{"copyMinMax":{"name":"copyMinMax","qualifiedName":"vector_math/vector_math.Aabb2.copyMinMax","comment":"","commentFrom":"vector_math.Aabb2.copyMinMax","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"min_":{"name":"min_","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Vector2","inner":[]}],"value":"null","annotations":[]},"max_":{"name":"max_","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"copyCenterAndHalfExtents":{"name":"copyCenterAndHalfExtents","qualifiedName":"vector_math/vector_math.Aabb2.copyCenterAndHalfExtents","comment":"","commentFrom":"vector_math.Aabb2.copyCenterAndHalfExtents","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"center":{"name":"center","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Vector2","inner":[]}],"value":"null","annotations":[]},"halfExtents":{"name":"halfExtents","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"copyFrom":{"name":"copyFrom","qualifiedName":"vector_math/vector_math.Aabb2.copyFrom","comment":"","commentFrom":"vector_math.Aabb2.copyFrom","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"o":{"name":"o","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Aabb2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"copyInto":{"name":"copyInto","qualifiedName":"vector_math/vector_math.Aabb2.copyInto","comment":"","commentFrom":"vector_math.Aabb2.copyInto","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"o":{"name":"o","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Aabb2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"transform":{"name":"transform","qualifiedName":"vector_math/vector_math.Aabb2.transform","comment":"","commentFrom":"vector_math.Aabb2.transform","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"vector_math/vector_math.Aabb2","inner":[]}],"parameters":{"T":{"name":"T","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Matrix3","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"rotate":{"name":"rotate","qualifiedName":"vector_math/vector_math.Aabb2.rotate","comment":"","commentFrom":"vector_math.Aabb2.rotate","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"vector_math/vector_math.Aabb2","inner":[]}],"parameters":{"T":{"name":"T","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Matrix3","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"transformed":{"name":"transformed","qualifiedName":"vector_math/vector_math.Aabb2.transformed","comment":"","commentFrom":"vector_math.Aabb2.transformed","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"vector_math/vector_math.Aabb2","inner":[]}],"parameters":{"T":{"name":"T","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Matrix3","inner":[]}],"value":"null","annotations":[]},"out":{"name":"out","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Aabb2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"rotated":{"name":"rotated","qualifiedName":"vector_math/vector_math.Aabb2.rotated","comment":"","commentFrom":"vector_math.Aabb2.rotated","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"vector_math/vector_math.Aabb2","inner":[]}],"parameters":{"T":{"name":"T","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Matrix3","inner":[]}],"value":"null","annotations":[]},"out":{"name":"out","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Aabb2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"hull":{"name":"hull","qualifiedName":"vector_math/vector_math.Aabb2.hull","comment":"<p>Set the min and max of this so that this is a hull of this and <a>vector_math/vector_math.Aabb2.hull.other</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Aabb2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"hullPoint":{"name":"hullPoint","qualifiedName":"vector_math/vector_math.Aabb2.hullPoint","comment":"<p>Set the min and max of this so that this contains <a>vector_math/vector_math.Aabb2.hullPoint.point</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"point":{"name":"point","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"containsAabb2":{"name":"containsAabb2","qualifiedName":"vector_math/vector_math.Aabb2.containsAabb2","comment":"<p>Return if this contains <a>vector_math/vector_math.Aabb2.containsAabb2.other</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Aabb2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"containsVector2":{"name":"containsVector2","qualifiedName":"vector_math/vector_math.Aabb2.containsVector2","comment":"<p>Return if this contains <a>vector_math/vector_math.Aabb2.containsVector2.other</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"intersectsWithAabb2":{"name":"intersectsWithAabb2","qualifiedName":"vector_math/vector_math.Aabb2.intersectsWithAabb2","comment":"<p>Return if this intersects with <a>vector_math/vector_math.Aabb2.intersectsWithAabb2.other</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Aabb2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"intersectsWithVector2":{"name":"intersectsWithVector2","qualifiedName":"vector_math/vector_math.Aabb2.intersectsWithVector2","comment":"<p>Return if this intersects with <a>vector_math/vector_math.Aabb2.intersectsWithVector2.other</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math/vector_math.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"vector_math/vector_math.Aabb2.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>vector_math/vector_math.Aabb2.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"vector_math/vector_math.Aabb2.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"vector_math/vector_math.Aabb2.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>vector_math/vector_math.Aabb2.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>vector_math/vector_math.Aabb2.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"vector_math/vector_math.Aabb2.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"vector_math/vector_math.Aabb2.noSuchMethod","comment":"<p><a>vector_math/vector_math.Aabb2.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>vector_math/vector_math.Aabb2.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>vector_math/vector_math.Aabb2.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>vector_math/vector_math.Aabb2.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{}}