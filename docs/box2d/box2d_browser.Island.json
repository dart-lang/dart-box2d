{"name":"Island","qualifiedName":"box2d/box2d_browser.Island","comment":"","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"listener":{"name":"listener","qualifiedName":"box2d/box2d.Island.listener","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.ContactListener","inner":[]}],"annotations":[]},"bodies":{"name":"bodies","qualifiedName":"box2d/box2d.Island.bodies","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"box2d/box2d.Body","inner":[]}]}],"annotations":[]},"contacts":{"name":"contacts","qualifiedName":"box2d/box2d.Island.contacts","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"box2d/box2d.Contact","inner":[]}]}],"annotations":[]},"joints":{"name":"joints","qualifiedName":"box2d/box2d.Island.joints","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"box2d/box2d.Joint","inner":[]}]}],"annotations":[]},"positions":{"name":"positions","qualifiedName":"box2d/box2d.Island.positions","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"box2d/box2d.Position","inner":[]}]}],"annotations":[]},"velocities":{"name":"velocities","qualifiedName":"box2d/box2d.Island.velocities","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"box2d/box2d.Velocity","inner":[]}]}],"annotations":[]},"bodyCount":{"name":"bodyCount","qualifiedName":"box2d/box2d.Island.bodyCount","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"jointCount":{"name":"jointCount","qualifiedName":"box2d/box2d.Island.jointCount","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"contactCount":{"name":"contactCount","qualifiedName":"box2d/box2d.Island.contactCount","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"bodyCapacity":{"name":"bodyCapacity","qualifiedName":"box2d/box2d.Island.bodyCapacity","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"contactCapacity":{"name":"contactCapacity","qualifiedName":"box2d/box2d.Island.contactCapacity","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"jointCapacity":{"name":"jointCapacity","qualifiedName":"box2d/box2d.Island.jointCapacity","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"positionIterationCount":{"name":"positionIterationCount","qualifiedName":"box2d/box2d.Island.positionIterationCount","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"impulse":{"name":"impulse","qualifiedName":"box2d/box2d.Island.impulse","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.ContactImpulse","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{},"constructors":{"":{"name":"","qualifiedName":"box2d/box2d_browser.Island.Island-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]}},"operators":{},"methods":{"init":{"name":"init","qualifiedName":"box2d/box2d_browser.Island.init","comment":"","commentFrom":"box2d.Island.init","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"argBodyCapacity":{"name":"argBodyCapacity","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]},"argContactCapacity":{"name":"argContactCapacity","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]},"argJointCapacity":{"name":"argJointCapacity","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]},"argListener":{"name":"argListener","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.ContactListener","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"clear":{"name":"clear","qualifiedName":"box2d/box2d_browser.Island.clear","comment":"","commentFrom":"box2d.Island.clear","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]},"solve":{"name":"solve","qualifiedName":"box2d/box2d_browser.Island.solve","comment":"","commentFrom":"box2d.Island.solve","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"step":{"name":"step","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.TimeStep","inner":[]}],"value":"null","annotations":[]},"gravity":{"name":"gravity","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math_64.Vector2","inner":[]}],"value":"null","annotations":[]},"allowSleep":{"name":"allowSleep","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"addBody":{"name":"addBody","qualifiedName":"box2d/box2d_browser.Island.addBody","comment":"<p>Adds a body to the Island.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"body":{"name":"body","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.Body","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"addContact":{"name":"addContact","qualifiedName":"box2d/box2d_browser.Island.addContact","comment":"<p>Add a contact to the Island.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"contact":{"name":"contact","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.Contact","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"addJoint":{"name":"addJoint","qualifiedName":"box2d/box2d_browser.Island.addJoint","comment":"<p>Add a joint to the Island.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"joint":{"name":"joint","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.Joint","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"report":{"name":"report","qualifiedName":"box2d/box2d_browser.Island.report","comment":"","commentFrom":"box2d.Island.report","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"constraints":{"name":"constraints","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"box2d/box2d_browser.ContactConstraint","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"box2d/box2d_browser.Island.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>box2d/box2d_browser.Island.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"box2d/box2d_browser.Island.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"box2d/box2d_browser.Island.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>box2d/box2d_browser.Island.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>box2d/box2d_browser.Island.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"box2d/box2d_browser.Island.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"box2d/box2d_browser.Island.noSuchMethod","comment":"<p><a>box2d/box2d_browser.Island.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>box2d/box2d_browser.Island.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>box2d/box2d_browser.Island.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>box2d/box2d_browser.Island.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{}}