{"name":"CanvasViewportTransform","qualifiedName":"box2d/box2d_browser.CanvasViewportTransform","comment":"","isAbstract":false,"superclass":"box2d/box2d.ViewportTransform","implements":[],"subclass":[],"variables":{"DEFAULT_DRAWING_SCALE":{"name":"DEFAULT_DRAWING_SCALE","qualifiedName":"box2d/box2d_browser.CanvasViewportTransform.DEFAULT_DRAWING_SCALE","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.double","inner":[]}],"annotations":[]}},"inheritedVariables":{"yFlip":{"name":"yFlip","qualifiedName":"box2d/box2d.ViewportTransform.yFlip","comment":"<p>if we flip the y axis when transforming.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.bool","inner":[]}],"annotations":[]},"extents":{"name":"extents","qualifiedName":"box2d/box2d.ViewportTransform.extents","comment":"<p>This is the half-width and half-height.\nThis should be the actual half-width and\nhalf-height, not anything transformed or scaled.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"annotations":[]},"scale":{"name":"scale","qualifiedName":"box2d/box2d.ViewportTransform.scale","comment":"<p>Returns the scaling factor used in converting from world sizes to rendering\nsizes.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.double","inner":[]}],"annotations":[]},"center":{"name":"center","qualifiedName":"box2d/box2d.ViewportTransform.center","comment":"<p>center of the viewport.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"annotations":[]}},"methods":{"setters":{},"getters":{},"constructors":{"":{"name":"","qualifiedName":"box2d/box2d_browser.CanvasViewportTransform.CanvasViewportTransform-","comment":"<p>Constructs a new viewport transform with the default scale.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"_extents":{"name":"_extents","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math_64.Vector2","inner":[]}],"value":"null","annotations":[]},"_center":{"name":"_center","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math_64.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"operators":{},"methods":{"updateTransformation":{"name":"updateTransformation","qualifiedName":"box2d/box2d_browser.CanvasViewportTransform.updateTransformation","comment":"<p>Sets the rendering context such that all drawing commands given in terms\nof the world coordinate system will display correctly on the canvas screen.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"ctx":{"name":"ctx","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.CanvasRenderingContext2D","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{"translation=":{"name":"translation=","qualifiedName":"box2d/box2d_browser.CanvasViewportTransform.translation=","comment":"","commentFrom":"","inheritedFrom":"box2d.ViewportTransform.translation=","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"translation":{"name":"translation","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math_64.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"box2d/box2d_browser.CanvasViewportTransform.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>box2d/box2d_browser.CanvasViewportTransform.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"box2d/box2d_browser.CanvasViewportTransform.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]},"translation":{"name":"translation","qualifiedName":"box2d/box2d_browser.CanvasViewportTransform.translation","comment":"<p>The current translation is the difference in canvas units between the\nactual center of the canvas and the currently specified center. For\nexample, if the actual canvas center is (5, 5) but the current center is\n(6, 6), the translation is (1, 1).</p>","commentFrom":"","inheritedFrom":"box2d.ViewportTransform.translation","static":false,"abstract":false,"constant":false,"return":[{"outer":"vector_math_64.Vector2","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"box2d/box2d_browser.CanvasViewportTransform.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>box2d/box2d_browser.CanvasViewportTransform.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>box2d/box2d_browser.CanvasViewportTransform.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"box2d/box2d_browser.CanvasViewportTransform.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"box2d/box2d_browser.CanvasViewportTransform.noSuchMethod","comment":"<p><a>box2d/box2d_browser.CanvasViewportTransform.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>box2d/box2d_browser.CanvasViewportTransform.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>box2d/box2d_browser.CanvasViewportTransform.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>box2d/box2d_browser.CanvasViewportTransform.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"setCamera":{"name":"setCamera","qualifiedName":"box2d/box2d_browser.CanvasViewportTransform.setCamera","comment":"<p>Sets the transform's center to the given x and y coordinates,\nand using the given scale.</p>","commentFrom":"","inheritedFrom":"box2d.ViewportTransform.setCamera","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"x":{"name":"x","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.double","inner":[]}],"value":"null","annotations":[]},"y":{"name":"y","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.double","inner":[]}],"value":"null","annotations":[]},"s":{"name":"s","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.double","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"getWorldToScreen":{"name":"getWorldToScreen","qualifiedName":"box2d/box2d_browser.CanvasViewportTransform.getWorldToScreen","comment":"<p>Takes the world coordinate (argWorld) puts the corresponding\nscreen coordinate in argScreen.  It should be safe to give the\nsame object as both parameters.</p>","commentFrom":"","inheritedFrom":"box2d.ViewportTransform.getWorldToScreen","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"argWorld":{"name":"argWorld","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math_64.Vector2","inner":[]}],"value":"null","annotations":[]},"argScreen":{"name":"argScreen","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math_64.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"getScreenToWorld":{"name":"getScreenToWorld","qualifiedName":"box2d/box2d_browser.CanvasViewportTransform.getScreenToWorld","comment":"<p>Takes the screen coordinates (argScreen) and puts the\ncorresponding world coordinates in argWorld. It should be safe\nto give the same object as both parameters.</p>","commentFrom":"","inheritedFrom":"box2d.ViewportTransform.getScreenToWorld","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"argScreen":{"name":"argScreen","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math_64.Vector2","inner":[]}],"value":"null","annotations":[]},"argWorld":{"name":"argWorld","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math_64.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{}}