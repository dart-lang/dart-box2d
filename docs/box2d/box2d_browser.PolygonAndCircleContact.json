{"name":"PolygonAndCircleContact","qualifiedName":"box2d/box2d_browser.PolygonAndCircleContact","comment":"","isAbstract":false,"superclass":"box2d/box2d.Contact","implements":[],"subclass":[],"variables":{},"inheritedVariables":{"pool":{"name":"pool","qualifiedName":"box2d/box2d.Contact.pool","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.DefaultWorldPool","inner":[]}],"annotations":[]},"edge1":{"name":"edge1","qualifiedName":"box2d/box2d.Contact.edge1","comment":"<p>Nodes for connecting bodies.</p>","final":true,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.ContactEdge","inner":[]}],"annotations":[]},"edge2":{"name":"edge2","qualifiedName":"box2d/box2d.Contact.edge2","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.ContactEdge","inner":[]}],"annotations":[]},"manifold":{"name":"manifold","qualifiedName":"box2d/box2d.Contact.manifold","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.Manifold","inner":[]}],"annotations":[]},"flags":{"name":"flags","qualifiedName":"box2d/box2d.Contact.flags","comment":"<p>The flags for this Contact.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"prev":{"name":"prev","qualifiedName":"box2d/box2d.Contact.prev","comment":"<p>World pool and list pointers.</p>","final":false,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.Contact","inner":[]}],"annotations":[]},"next":{"name":"next","qualifiedName":"box2d/box2d.Contact.next","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.Contact","inner":[]}],"annotations":[]},"fixtureA":{"name":"fixtureA","qualifiedName":"box2d/box2d.Contact.fixtureA","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.Fixture","inner":[]}],"annotations":[]},"fixtureB":{"name":"fixtureB","qualifiedName":"box2d/box2d.Contact.fixtureB","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.Fixture","inner":[]}],"annotations":[]},"toiCount":{"name":"toiCount","qualifiedName":"box2d/box2d.Contact.toiCount","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]}},"methods":{"setters":{},"getters":{},"constructors":{"":{"name":"","qualifiedName":"box2d/box2d_browser.PolygonAndCircleContact.PolygonAndCircleContact-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"argPool":{"name":"argPool","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.DefaultWorldPool","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"operators":{},"methods":{"init":{"name":"init","qualifiedName":"box2d/box2d_browser.PolygonAndCircleContact.init","comment":"<p>Initialization for pooling.</p>","commentFrom":"box2d.Contact.init","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"fA":{"name":"fA","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.Fixture","inner":[]}],"value":"null","annotations":[]},"fB":{"name":"fB","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.Fixture","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"evaluate":{"name":"evaluate","qualifiedName":"box2d/box2d_browser.PolygonAndCircleContact.evaluate","comment":"<p>Abstract method.</p>","commentFrom":"box2d.Contact.evaluate","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"argManifold":{"name":"argManifold","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.Manifold","inner":[]}],"value":"null","annotations":[]},"xfA":{"name":"xfA","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.Transform","inner":[]}],"value":"null","annotations":[]},"xfB":{"name":"xfB","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.Transform","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{"enabled=":{"name":"enabled=","qualifiedName":"box2d/box2d_browser.PolygonAndCircleContact.enabled=","comment":"<p>Enable/disable this contact. This can be used inside the pre-solve\ncontact listener. The contact is only disabled for the current time step\n(or sub-step in continuous collisions).</p>","commentFrom":"","inheritedFrom":"box2d.Contact.enabled=","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"flag":{"name":"flag","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"box2d/box2d_browser.PolygonAndCircleContact.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>box2d/box2d_browser.PolygonAndCircleContact.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"box2d/box2d_browser.PolygonAndCircleContact.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]},"touching":{"name":"touching","qualifiedName":"box2d/box2d_browser.PolygonAndCircleContact.touching","comment":"<p>Is this contact touching</p>","commentFrom":"","inheritedFrom":"box2d.Contact.touching","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"enabled":{"name":"enabled","qualifiedName":"box2d/box2d_browser.PolygonAndCircleContact.enabled","comment":"","commentFrom":"","inheritedFrom":"box2d.Contact.enabled","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"box2d/box2d_browser.PolygonAndCircleContact.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>box2d/box2d_browser.PolygonAndCircleContact.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>box2d/box2d_browser.PolygonAndCircleContact.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"box2d/box2d_browser.PolygonAndCircleContact.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"box2d/box2d_browser.PolygonAndCircleContact.noSuchMethod","comment":"<p><a>box2d/box2d_browser.PolygonAndCircleContact.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>box2d/box2d_browser.PolygonAndCircleContact.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>box2d/box2d_browser.PolygonAndCircleContact.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>box2d/box2d_browser.PolygonAndCircleContact.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"init":{"name":"init","qualifiedName":"box2d/box2d_browser.PolygonAndCircleContact.init","comment":"<p>Initialization for pooling.</p>","commentFrom":"","inheritedFrom":"box2d.Contact.init","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"fixA":{"name":"fixA","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.Fixture","inner":[]}],"value":"null","annotations":[]},"fixB":{"name":"fixB","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.Fixture","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"getWorldManifold":{"name":"getWorldManifold","qualifiedName":"box2d/box2d_browser.PolygonAndCircleContact.getWorldManifold","comment":"<p>Intializes the given world manifold.</p>","commentFrom":"","inheritedFrom":"box2d.Contact.getWorldManifold","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"worldManifold":{"name":"worldManifold","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.WorldManifold","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"evaluate":{"name":"evaluate","qualifiedName":"box2d/box2d_browser.PolygonAndCircleContact.evaluate","comment":"<p>Abstract method.</p>","commentFrom":"","inheritedFrom":"box2d.Contact.evaluate","static":false,"abstract":true,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"argManifold":{"name":"argManifold","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.Manifold","inner":[]}],"value":"null","annotations":[]},"xfA":{"name":"xfA","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.Transform","inner":[]}],"value":"null","annotations":[]},"xfB":{"name":"xfB","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.Transform","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"flagForFiltering":{"name":"flagForFiltering","qualifiedName":"box2d/box2d_browser.PolygonAndCircleContact.flagForFiltering","comment":"<p>Flag this contact for filtering. Filtering will occur the next time step.</p>","commentFrom":"","inheritedFrom":"box2d.Contact.flagForFiltering","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]},"update":{"name":"update","qualifiedName":"box2d/box2d_browser.PolygonAndCircleContact.update","comment":"","commentFrom":"","inheritedFrom":"box2d.Contact.update","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"listener":{"name":"listener","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.ContactListener","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{}}