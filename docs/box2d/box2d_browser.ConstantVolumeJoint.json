{"name":"ConstantVolumeJoint","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint","comment":"","isAbstract":false,"superclass":"box2d/box2d.Joint","implements":[],"subclass":[],"variables":{"bodies":{"name":"bodies","qualifiedName":"box2d/box2d.ConstantVolumeJoint.bodies","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"box2d/box2d.Body","inner":[]}]}],"annotations":[]},"targetLengths":{"name":"targetLengths","qualifiedName":"box2d/box2d.ConstantVolumeJoint.targetLengths","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"dart-core.double","inner":[]}]}],"annotations":[]},"targetVolume":{"name":"targetVolume","qualifiedName":"box2d/box2d.ConstantVolumeJoint.targetVolume","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.double","inner":[]}],"annotations":[]},"normals":{"name":"normals","qualifiedName":"box2d/box2d.ConstantVolumeJoint.normals","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"box2d/box2d.Vector2","inner":[]}]}],"annotations":[]},"step":{"name":"step","qualifiedName":"box2d/box2d.ConstantVolumeJoint.step","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.TimeStep","inner":[]}],"annotations":[]},"distanceJoints":{"name":"distanceJoints","qualifiedName":"box2d/box2d.ConstantVolumeJoint.distanceJoints","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"box2d/box2d.DistanceJoint","inner":[]}]}],"annotations":[]},"frequencyHz":{"name":"frequencyHz","qualifiedName":"box2d/box2d.ConstantVolumeJoint.frequencyHz","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.double","inner":[]}],"annotations":[]},"dampingRatio":{"name":"dampingRatio","qualifiedName":"box2d/box2d.ConstantVolumeJoint.dampingRatio","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.double","inner":[]}],"annotations":[]}},"inheritedVariables":{"type":{"name":"type","qualifiedName":"box2d/box2d.Joint.type","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"edgeA":{"name":"edgeA","qualifiedName":"box2d/box2d.Joint.edgeA","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.JointEdge","inner":[]}],"annotations":[]},"edgeB":{"name":"edgeB","qualifiedName":"box2d/box2d.Joint.edgeB","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.JointEdge","inner":[]}],"annotations":[]},"bodyA":{"name":"bodyA","qualifiedName":"box2d/box2d.Joint.bodyA","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.Body","inner":[]}],"annotations":[]},"bodyB":{"name":"bodyB","qualifiedName":"box2d/box2d.Joint.bodyB","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.Body","inner":[]}],"annotations":[]},"islandFlag":{"name":"islandFlag","qualifiedName":"box2d/box2d.Joint.islandFlag","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.bool","inner":[]}],"annotations":[]},"collideConnected":{"name":"collideConnected","qualifiedName":"box2d/box2d.Joint.collideConnected","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.bool","inner":[]}],"annotations":[]},"userData":{"name":"userData","qualifiedName":"box2d/box2d.Joint.userData","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.Object","inner":[]}],"annotations":[]},"localCenterA":{"name":"localCenterA","qualifiedName":"box2d/box2d.Joint.localCenterA","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"annotations":[]},"localCenterB":{"name":"localCenterB","qualifiedName":"box2d/box2d.Joint.localCenterB","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"annotations":[]},"invMassA":{"name":"invMassA","qualifiedName":"box2d/box2d.Joint.invMassA","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.double","inner":[]}],"annotations":[]},"invIA":{"name":"invIA","qualifiedName":"box2d/box2d.Joint.invIA","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.double","inner":[]}],"annotations":[]},"invMassB":{"name":"invMassB","qualifiedName":"box2d/box2d.Joint.invMassB","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.double","inner":[]}],"annotations":[]},"invIB":{"name":"invIB","qualifiedName":"box2d/box2d.Joint.invIB","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.double","inner":[]}],"annotations":[]}},"methods":{"setters":{},"getters":{"area":{"name":"area","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.area","comment":"","commentFrom":"box2d.ConstantVolumeJoint.area","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.num","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.ConstantVolumeJoint-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"_world":{"name":"_world","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]},"def":{"name":"def","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.ConstantVolumeJointDef","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"operators":{},"methods":{"inflate":{"name":"inflate","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.inflate","comment":"","commentFrom":"box2d.ConstantVolumeJoint.inflate","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"factor":{"name":"factor","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"destructor":{"name":"destructor","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.destructor","comment":"<p>Override to handle destruction of joint.</p>","commentFrom":"box2d.Joint.destructor","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]},"constrainEdges":{"name":"constrainEdges","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.constrainEdges","comment":"<p>Apply the position correction to the particles.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"argStep":{"name":"argStep","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.TimeStep","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"initVelocityConstraints":{"name":"initVelocityConstraints","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.initVelocityConstraints","comment":"","commentFrom":"box2d.Joint.initVelocityConstraints","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"argStep":{"name":"argStep","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.TimeStep","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"solvePositionConstraints":{"name":"solvePositionConstraints","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.solvePositionConstraints","comment":"<p>Solves for the impact of this joint on the positions of the connected\nbodies. Implements abstract method in <a>box2d/box2d_browser.Joint</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"baumgarte":{"name":"baumgarte","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"solveVelocityConstraints":{"name":"solveVelocityConstraints","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.solveVelocityConstraints","comment":"<p>Solves for the impact of this joint on the velocities of the connected\nbodies. Implements abstract method in <a>box2d/box2d_browser.Joint</a>.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"argStep":{"name":"argStep","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.TimeStep","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"getAnchorA":{"name":"getAnchorA","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.getAnchorA","comment":"<p>Get the anchor point on bodyA in world coordinates.</p>","commentFrom":"box2d.Joint.getAnchorA","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"argOut":{"name":"argOut","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math_64.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"getAnchorB":{"name":"getAnchorB","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.getAnchorB","comment":"<p>Get the anchor point on bodyB in world coordinates.</p>","commentFrom":"box2d.Joint.getAnchorB","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"argOut":{"name":"argOut","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math_64.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"getReactionForce":{"name":"getReactionForce","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.getReactionForce","comment":"<p>Get the reaction force on body2 at the joint anchor in Newtons.</p>","commentFrom":"box2d.Joint.getReactionForce","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"inv_dt":{"name":"inv_dt","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":"null","annotations":[]},"argOut":{"name":"argOut","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math_64.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"getReactionTorque":{"name":"getReactionTorque","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.getReactionTorque","comment":"<p>Get the reaction torque on body2 in N*m.</p>","commentFrom":"box2d.Joint.getReactionTorque","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.num","inner":[]}],"parameters":{"inv_dt":{"name":"inv_dt","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>box2d/box2d_browser.ConstantVolumeJoint.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]},"active":{"name":"active","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.active","comment":"<p>Short-cut function to determine if either body is inactive.</p>","commentFrom":"","inheritedFrom":"box2d.Joint.active","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>box2d/box2d_browser.ConstantVolumeJoint.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>box2d/box2d_browser.ConstantVolumeJoint.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.noSuchMethod","comment":"<p><a>box2d/box2d_browser.ConstantVolumeJoint.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>box2d/box2d_browser.ConstantVolumeJoint.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>box2d/box2d_browser.ConstantVolumeJoint.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>box2d/box2d_browser.ConstantVolumeJoint.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"getAnchorA":{"name":"getAnchorA","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.getAnchorA","comment":"<p>Get the anchor point on bodyA in world coordinates.</p>","commentFrom":"","inheritedFrom":"box2d.Joint.getAnchorA","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"argOut":{"name":"argOut","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math_64.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"getAnchorB":{"name":"getAnchorB","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.getAnchorB","comment":"<p>Get the anchor point on bodyB in world coordinates.</p>","commentFrom":"","inheritedFrom":"box2d.Joint.getAnchorB","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"argOut":{"name":"argOut","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math_64.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"getReactionForce":{"name":"getReactionForce","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.getReactionForce","comment":"<p>Get the reaction force on body2 at the joint anchor in Newtons.</p>","commentFrom":"","inheritedFrom":"box2d.Joint.getReactionForce","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"inv_dt":{"name":"inv_dt","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":"null","annotations":[]},"argOut":{"name":"argOut","optional":false,"named":false,"default":false,"type":[{"outer":"vector_math_64.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"getReactionTorque":{"name":"getReactionTorque","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.getReactionTorque","comment":"<p>Get the reaction torque on body2 in N*m.</p>","commentFrom":"","inheritedFrom":"box2d.Joint.getReactionTorque","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.double","inner":[]}],"parameters":{"inv_dt":{"name":"inv_dt","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"initVelocityConstraints":{"name":"initVelocityConstraints","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.initVelocityConstraints","comment":"","commentFrom":"","inheritedFrom":"box2d.Joint.initVelocityConstraints","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"step":{"name":"step","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.TimeStep","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"solveVelocityConstraints":{"name":"solveVelocityConstraints","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.solveVelocityConstraints","comment":"","commentFrom":"","inheritedFrom":"box2d.Joint.solveVelocityConstraints","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"step":{"name":"step","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d_browser.TimeStep","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"solvePositionConstraints":{"name":"solvePositionConstraints","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.solvePositionConstraints","comment":"<p>This returns true if the position errors are within tolerance.</p>","commentFrom":"","inheritedFrom":"box2d.Joint.solvePositionConstraints","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"baumgarte":{"name":"baumgarte","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"destructor":{"name":"destructor","qualifiedName":"box2d/box2d_browser.ConstantVolumeJoint.destructor","comment":"<p>Override to handle destruction of joint.</p>","commentFrom":"","inheritedFrom":"box2d.Joint.destructor","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}