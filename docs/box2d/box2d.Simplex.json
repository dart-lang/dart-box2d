{"name":"Simplex","qualifiedName":"box2d/box2d.Simplex","comment":"","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"v1":{"name":"v1","qualifiedName":"box2d/box2d.Simplex.v1","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.SimplexVertex","inner":[]}],"annotations":[]},"v2":{"name":"v2","qualifiedName":"box2d/box2d.Simplex.v2","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.SimplexVertex","inner":[]}],"annotations":[]},"v3":{"name":"v3","qualifiedName":"box2d/box2d.Simplex.v3","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.SimplexVertex","inner":[]}],"annotations":[]},"vertices":{"name":"vertices","qualifiedName":"box2d/box2d.Simplex.vertices","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"box2d/box2d.SimplexVertex","inner":[]}]}],"annotations":[]},"count":{"name":"count","qualifiedName":"box2d/box2d.Simplex.count","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"e13":{"name":"e13","qualifiedName":"box2d/box2d.Simplex.e13","comment":"<p>Pooling.</p>","final":true,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"annotations":[]},"e23":{"name":"e23","qualifiedName":"box2d/box2d.Simplex.e23","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"annotations":[]},"e12":{"name":"e12","qualifiedName":"box2d/box2d.Simplex.e12","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"annotations":[]},"case2":{"name":"case2","qualifiedName":"box2d/box2d.Simplex.case2","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"annotations":[]},"case22":{"name":"case22","qualifiedName":"box2d/box2d.Simplex.case22","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"annotations":[]},"case3":{"name":"case3","qualifiedName":"box2d/box2d.Simplex.case3","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"annotations":[]},"case33":{"name":"case33","qualifiedName":"box2d/box2d.Simplex.case33","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{},"constructors":{"":{"name":"","qualifiedName":"box2d/box2d.Simplex.Simplex-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]}},"operators":{},"methods":{"readCache":{"name":"readCache","qualifiedName":"box2d/box2d.Simplex.readCache","comment":"","commentFrom":"box2d.Simplex.readCache","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"cache":{"name":"cache","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.SimplexCache","inner":[]}],"value":"null","annotations":[]},"proxyA":{"name":"proxyA","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.DistanceProxy","inner":[]}],"value":"null","annotations":[]},"transformA":{"name":"transformA","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Transform","inner":[]}],"value":"null","annotations":[]},"proxyB":{"name":"proxyB","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.DistanceProxy","inner":[]}],"value":"null","annotations":[]},"transformB":{"name":"transformB","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Transform","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"writeCache":{"name":"writeCache","qualifiedName":"box2d/box2d.Simplex.writeCache","comment":"","commentFrom":"box2d.Simplex.writeCache","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"cache":{"name":"cache","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.SimplexCache","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"getSearchDirection":{"name":"getSearchDirection","qualifiedName":"box2d/box2d.Simplex.getSearchDirection","comment":"","commentFrom":"box2d.Simplex.getSearchDirection","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"out":{"name":"out","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"getClosestPoint":{"name":"getClosestPoint","qualifiedName":"box2d/box2d.Simplex.getClosestPoint","comment":"<p>this returns pooled objects. don't keep or modify them</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"out":{"name":"out","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"getWitnessPoints":{"name":"getWitnessPoints","qualifiedName":"box2d/box2d.Simplex.getWitnessPoints","comment":"","commentFrom":"box2d.Simplex.getWitnessPoints","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"pA":{"name":"pA","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"value":"null","annotations":[]},"pB":{"name":"pB","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"getMetric":{"name":"getMetric","qualifiedName":"box2d/box2d.Simplex.getMetric","comment":"","commentFrom":"box2d.Simplex.getMetric","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.double","inner":[]}],"parameters":{},"annotations":[]},"solve2":{"name":"solve2","qualifiedName":"box2d/box2d.Simplex.solve2","comment":"<p>Solve a line segment using barycentric coordinates.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]},"solve3":{"name":"solve3","qualifiedName":"box2d/box2d.Simplex.solve3","comment":"<p>Solve a line segment using barycentric coordinates.&lt;br/>\nPossible regions:&lt;br/>\n- points2&lt;br/>\n- edge points0-points2&lt;br/>\n- edge points1-points2&lt;br/>\n- inside the triangle</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"box2d/box2d.Simplex.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>box2d/box2d.Simplex.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"box2d/box2d.Simplex.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"box2d/box2d.Simplex.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>box2d/box2d.Simplex.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>box2d/box2d.Simplex.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"box2d/box2d.Simplex.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"box2d/box2d.Simplex.noSuchMethod","comment":"<p><a>box2d/box2d.Simplex.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>box2d/box2d.Simplex.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>box2d/box2d.Simplex.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>box2d/box2d.Simplex.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{}}