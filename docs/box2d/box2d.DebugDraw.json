{"name":"DebugDraw","qualifiedName":"box2d/box2d.DebugDraw","comment":"","isAbstract":true,"superclass":"dart-core.Object","implements":[],"subclass":["box2d/box2d_browser.CanvasDraw"],"variables":{"e_shapeBit":{"name":"e_shapeBit","qualifiedName":"box2d/box2d.DebugDraw.e_shapeBit","comment":"<p>draw shapes</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"e_jointBit":{"name":"e_jointBit","qualifiedName":"box2d/box2d.DebugDraw.e_jointBit","comment":"<p>draw joint connections</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"e_aabbBit":{"name":"e_aabbBit","qualifiedName":"box2d/box2d.DebugDraw.e_aabbBit","comment":"<p>draw core (TimeOfImpact) shapes</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"e_pairBit":{"name":"e_pairBit","qualifiedName":"box2d/box2d.DebugDraw.e_pairBit","comment":"<p>draw axis aligned boxes</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"e_centerOfMassBit":{"name":"e_centerOfMassBit","qualifiedName":"box2d/box2d.DebugDraw.e_centerOfMassBit","comment":"<p>draw center of mass</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"e_dynamicTreeBit":{"name":"e_dynamicTreeBit","qualifiedName":"box2d/box2d.DebugDraw.e_dynamicTreeBit","comment":"<p>draw dynamic tree.</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"e_lineDrawingBit":{"name":"e_lineDrawingBit","qualifiedName":"box2d/box2d.DebugDraw.e_lineDrawingBit","comment":"<p>draw with lines (vs. default filled polygons).</p>","final":false,"static":true,"constant":true,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"flags":{"name":"flags","qualifiedName":"box2d/box2d.DebugDraw.flags","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.int","inner":[]}],"annotations":[]},"viewportTransform":{"name":"viewportTransform","qualifiedName":"box2d/box2d.DebugDraw.viewportTransform","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"box2d/box2d.ViewportTransform","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{},"constructors":{"":{"name":"","qualifiedName":"box2d/box2d.DebugDraw.DebugDraw-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"viewportTransform":{"name":"viewportTransform","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"operators":{},"methods":{"appendFlags":{"name":"appendFlags","qualifiedName":"box2d/box2d.DebugDraw.appendFlags","comment":"","commentFrom":"box2d.DebugDraw.appendFlags","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"clearFlags":{"name":"clearFlags","qualifiedName":"box2d/box2d.DebugDraw.clearFlags","comment":"","commentFrom":"box2d.DebugDraw.clearFlags","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"drawPolygon":{"name":"drawPolygon","qualifiedName":"box2d/box2d.DebugDraw.drawPolygon","comment":"<p>Draw a closed polygon provided in CCW order.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"vertices":{"name":"vertices","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"box2d/box2d.Vector2","inner":[]}]}],"value":"null","annotations":[]},"vertexCount":{"name":"vertexCount","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]},"color":{"name":"color","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Color3","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"drawPoint":{"name":"drawPoint","qualifiedName":"box2d/box2d.DebugDraw.drawPoint","comment":"<p>Draws the given point with the given radius and color.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"point":{"name":"point","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"value":"null","annotations":[]},"radiusOnScreen":{"name":"radiusOnScreen","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":"null","annotations":[]},"color":{"name":"color","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Color3","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"drawSolidPolygon":{"name":"drawSolidPolygon","qualifiedName":"box2d/box2d.DebugDraw.drawSolidPolygon","comment":"<p>Draw a solid closed polygon provided in CCW order.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"vertices":{"name":"vertices","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"box2d/box2d.Vector2","inner":[]}]}],"value":"null","annotations":[]},"vertexCount":{"name":"vertexCount","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":"null","annotations":[]},"color":{"name":"color","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Color3","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"drawCircle":{"name":"drawCircle","qualifiedName":"box2d/box2d.DebugDraw.drawCircle","comment":"<p>Draw a circle.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"center":{"name":"center","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"value":"null","annotations":[]},"radius":{"name":"radius","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":"null","annotations":[]},"color":{"name":"color","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Color3","inner":[]}],"value":"null","annotations":[]},"axis":{"name":"axis","optional":true,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"drawSolidCircle":{"name":"drawSolidCircle","qualifiedName":"box2d/box2d.DebugDraw.drawSolidCircle","comment":"<p>Draw a solid circle.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"center":{"name":"center","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"value":"null","annotations":[]},"radius":{"name":"radius","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":"null","annotations":[]},"color":{"name":"color","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Color3","inner":[]}],"value":"null","annotations":[]},"axis":{"name":"axis","optional":true,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"drawSegment":{"name":"drawSegment","qualifiedName":"box2d/box2d.DebugDraw.drawSegment","comment":"<p>Draw a line segment.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"p1":{"name":"p1","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"value":"null","annotations":[]},"p2":{"name":"p2","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"value":"null","annotations":[]},"color":{"name":"color","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Color3","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"drawTransform":{"name":"drawTransform","qualifiedName":"box2d/box2d.DebugDraw.drawTransform","comment":"<p>Draw a transform.  Choose your own length scale.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"xf":{"name":"xf","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Transform","inner":[]}],"value":"null","annotations":[]},"color":{"name":"color","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Color3","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"drawString":{"name":"drawString","qualifiedName":"box2d/box2d.DebugDraw.drawString","comment":"<p>Draw a string.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"x":{"name":"x","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":"null","annotations":[]},"y":{"name":"y","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":"null","annotations":[]},"s":{"name":"s","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]},"color":{"name":"color","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Color3","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"setCamera":{"name":"setCamera","qualifiedName":"box2d/box2d.DebugDraw.setCamera","comment":"<p>Sets the center of the viewport to the given x and y values and the\nviewport scale to the given scale.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"x":{"name":"x","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":"null","annotations":[]},"y":{"name":"y","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":"null","annotations":[]},"scale":{"name":"scale","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.num","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"getScreenToWorldToOut":{"name":"getScreenToWorldToOut","qualifiedName":"box2d/box2d.DebugDraw.getScreenToWorldToOut","comment":"<p>Screen coordinates are specified in argScreen. These coordinates are\nconverted to World coordinates and placed in the argWorld return vector.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"argScreen":{"name":"argScreen","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"value":"null","annotations":[]},"argWorld":{"name":"argWorld","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"getWorldToScreenToOut":{"name":"getWorldToScreenToOut","qualifiedName":"box2d/box2d.DebugDraw.getWorldToScreenToOut","comment":"<p>World coordinates are specified in argWorld. These coordinates are\nconverted to screen coordinates and placed in the argScreen return vector.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"argWorld":{"name":"argWorld","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"value":"null","annotations":[]},"argScreen":{"name":"argScreen","optional":false,"named":false,"default":false,"type":[{"outer":"box2d/box2d.Vector2","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"box2d/box2d.DebugDraw.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>box2d/box2d.DebugDraw.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"box2d/box2d.DebugDraw.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"box2d/box2d.DebugDraw.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>box2d/box2d.DebugDraw.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>box2d/box2d.DebugDraw.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"box2d/box2d.DebugDraw.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"box2d/box2d.DebugDraw.noSuchMethod","comment":"<p><a>box2d/box2d.DebugDraw.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>box2d/box2d.DebugDraw.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>box2d/box2d.DebugDraw.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>box2d/box2d.DebugDraw.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{}}